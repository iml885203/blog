<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>🏡 My Smart Home</title>
    <url>/2021/my-smart-home/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1583259033924-50bba7deea82?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>架設<a href="https://www.home-assistant.io/">HomeAssistant</a>，串接家中各類IOT裝置</p>
<ul>
<li>Wifi：燈泡</li>
<li>紅外線：風扇、冷氣</li>
<li>Zigbee：無線開關、門窗感應器、智慧插座</li>
</ul>
<p>設計自動化流程，讓家裡變成如電影般的未來科技感！</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Hey-Siri"><a href="#Hey-Siri" class="headerlink" title="Hey! Siri!"></a>Hey! Siri!</h2><p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2021%2Fmy-smart-home%2Fhey-siri.gif?alt=media&token=c20f52a8-cc47-462b-9162-bd694c3f8ac7"></p>
<p>HA與homekit串接<br>可用Siri聲音控制各種家電</p>
<p>夏天常常叫Siri幫我控制風扇<br>平常睡覺前都要跟Siri說晚安</p>
<p>Hey! Siri! 晚安!<br>（觸發情境：關燈、打開小夜燈、關電腦）</p>
<h2 id="TV-Ambient-Lighting"><a href="#TV-Ambient-Lighting" class="headerlink" title="TV Ambient Lighting"></a>TV Ambient Lighting</h2><p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2021%2Fmy-smart-home%2Ftv-ambient-lighting.gif?alt=media&token=6a3aff3a-b269-4393-9cbc-26ad181c3c9e"></p>
<ul>
<li>樹梅派上安裝 <a href="https://github.com/hyperion-project/hyperion.ng">hyperion.ng</a></li>
<li>ESP8266安裝 <a href="https://github.com/Aircoookie/WLED">WLED</a></li>
<li>LED燈條</li>
<li>HDMI擷取棒</li>
</ul>
<p>於電視後方環繞LED燈條<br>透過Hyperion控制LED燈條</p>
<p>燈條會隨著螢幕畫面顯示對應顏色<br>看電影視覺體驗加倍！</p>
<h2 id="Automation"><a href="#Automation" class="headerlink" title="Automation"></a>Automation</h2><p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2021%2Fmy-smart-home%2Fautomation.png?alt=media&token=af6eeea1-ee66-40c2-95ca-5103440d9592"></p>
<p>在Node-RED上設計自動化流程，自動處理日常生活常常重複做的情境</p>
<p>如：回家開燈、出門關燈、走出陽台自動開燈、曬衣服提醒</p>
<p>彷彿生活在電影中（如美劇-黑鏡）的未來世界</p>
<h2 id="7-Segment-Clock"><a href="#7-Segment-Clock" class="headerlink" title="7-Segment-Clock"></a>7-Segment-Clock</h2><p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2021%2Fmy-smart-home%2F7-segment-clock.png?alt=media&token=61833561-1f25-41de-96e0-6cdb54abafb7"></p>
<a class="btn" href="https://github.com/iml885203/7-Segment-Clock" title="7-Segment-Clock"><i class="fab fa-github fa-fw"></i>7-Segment-Clock</a>

<blockquote>
<p>時鐘每過1個月就要重新校正一次…<br>都202x年了，還沒有NTP自動對時功能？<br>那就只好自己做一個！</p>
</blockquote>
<p>以前學過焊接的技能現在終於派上用場，用TV Ambient Lighting剩下來的LED燈條，加上ESP8266控制<br>NTP自動對時數位時鐘，可透過網頁控制亮度與顏色</p>
<h2 id="公寓大門控制"><a href="#公寓大門控制" class="headerlink" title="公寓大門控制"></a>公寓大門控制</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2021%2Fmy-smart-home%2Fdoor-control1.jpg?alt=media&token=b8c08111-3a5e-41a1-80a9-a7249260fda4"></div><div class="group-picture-column"><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2021%2Fmy-smart-home%2Fdoor-control2.jpg?alt=media&token=2df79a8c-ccb7-494c-ac78-9592433f3823"></div></div></div>

<blockquote>
<p>手機開門，不用帶鑰匙！</p>
</blockquote>
<p>繼電器點動控制公寓大門電鎖，透過wifi連線串接進HA</p>
]]></content>
      <categories>
        <category>🏠 智慧家庭</category>
      </categories>
      <tags>
        <tag>智慧家庭</tag>
      </tags>
  </entry>
  <entry>
    <title>Dyson 風扇/冷暖扇 接入 HomeAssistant/Homekit</title>
    <url>/2022/dyson-fan-with-homeassistant-and-homekit/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1599652645797-b34b1824507d?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<blockquote>
<p>同步發佈於 <a href="https://community.justplus.com.tw/post/1965845054">惟家論壇</a><br>支援有 Dyson Link 功能，可以連接 Dyson APP 的設備，如果沒有請改走紅外線方式</p>
</blockquote>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="使用-Dyson-Local-接入-HA"><a href="#使用-Dyson-Local-接入-HA" class="headerlink" title="使用 Dyson Local 接入 HA"></a><strong>使用 Dyson Local 接入 HA</strong></h2><p>在使用 Dyson Local 之前，你需要知道你的設備的資訊</p>
<ul>
<li>設備序號(Serial)</li>
<li>裝置類別(Device Type)</li>
<li>憑證(Credential)</li>
</ul>
<h3 id="💻-前置作業"><a href="#💻-前置作業" class="headerlink" title="💻 前置作業"></a>💻 前置作業</h3><p>先把設備加入的 Dyson APP</p>
<ol>
<li>照官方步驟連接裝置進去 Dyson APP</li>
<li>登出 Dyson APP 帳號 (這步驟一定要做，不然之後取憑證會失敗)</li>
</ol>
<h3 id="🔑-取得憑證"><a href="#🔑-取得憑證" class="headerlink" title="🔑 取得憑證"></a>🔑 取得憑證</h3><ol>
<li>找一台可以執行 Python3 的電腦</li>
<li>下載 <a href="https://github.com/shenxn/libdyson">libdyson</a></li>
<li>執行程式 <strong><code>python3 get_devices.py</code></strong></li>
<li>照步驟輸入資料</li>
</ol>
<ul>
<li>地區: 2</li>
<li>區碼: TW</li>
<li>信箱: 你的 Dyson 帳號</li>
<li>密碼:</li>
<li>驗證碼: 去信箱收信</li>
</ul>
<img data-src="/2022/dyson-fan-with-homeassistant-and-homekit/get-devices.png" class="">

<h3 id="🤖-接入-HomeAssistant"><a href="#🤖-接入-HomeAssistant" class="headerlink" title="🤖 接入 HomeAssistant"></a>🤖 接入 HomeAssistant</h3><ol>
<li>透過 <a href="https://www.justplus.com.tw/hacs.html">HACS</a> 安裝 <a href="https://github.com/shenxn/ha-dyson">Dyson Local</a></li>
<li>在整合的地方新增 Dyson Local</li>
<li>選擇 Setup manually</li>
<li>照欄位輸入剛剛取得的資訊</li>
</ol>
<ul>
<li>設備序號(Serial)</li>
<li>憑證(Credential)</li>
<li>型號</li>
<li>IP(選填)</li>
</ul>
<p>確認沒問題即可送出</p>
<h3 id="❓-可能遇到的問題"><a href="#❓-可能遇到的問題" class="headerlink" title="❓ 可能遇到的問題"></a>❓ 可能遇到的問題</h3><ul>
<li><strong>取得憑證 出現 libdyson.exceptions.DysonInvalidAuth</strong></li>
</ul>
<p>表示你沒有登出 Dyson APP，請登出後再嘗試</p>
<ul>
<li><strong>使用 Dyson Local 加入失敗</strong></li>
</ul>
<p>請先確認步驟都正確無誤，輸入錯誤或是型號選錯都可能會加入失敗</p>
<p>另外型號太新 Dyson Local 不支援也會無法加入，可以看 <a href="https://github.com/shenxn/libdyson/blob/main/libdyson/const.py">程式碼</a> 裡面是否有出現你的裝置類別(Device Type)，這時你就只能等作者更新，或者是有能力的話你可以改程式碼。</p>
<blockquote>
<p>此作者近期好像沒啥在維護了…，如果跟我一樣用 HP07(527K) 的，可以用 <a href="https://github.com/iml885203/ha-dyson">我改的Dyson Local</a>，一樣透過 HACS 加入，選擇該型號即可</p>
</blockquote>
<h3 id="📐-自定義擺動角度"><a href="#📐-自定義擺動角度" class="headerlink" title="📐 自定義擺動角度"></a>📐 自定義擺動角度</h3><blockquote>
<p>成功加入後，恭喜解鎖一項官方沒開放的功能，”自定義擺動角度”</p>
</blockquote>
<p>Dyson APP 雖然可以設定擺動方向，但只能 45&#x2F;90&#x2F;180&#x2F;350，這幾種角度</p>
<p>現在你可以透過 Dyson Local 自定義風扇要吹哪個角度，或是在某個角度之間擺動</p>
<img data-src="/2022/dyson-fan-with-homeassistant-and-homekit/service.png" class="">

<p>設定的角度，可以點開風扇明細底下的屬性那邊看到</p>
<img data-src="/2022/dyson-fan-with-homeassistant-and-homekit/attribute.png" class="">

<p>但有幾點規則要注意：</p>
<ul>
<li>角度區間（angle_high - angle_low）最少要 30</li>
<li>angle_low 和 angle_high 一樣的話，會轉到該角度，並停止擺動</li>
</ul>
<p>所以就可以根據你的環境，去定義幾個常用的擺動</p>
<img data-src="/2022/dyson-fan-with-homeassistant-and-homekit/ui.png" class="">

<h2 id="使用-Homebridge-接入-Homekit"><a href="#使用-Homebridge-接入-Homekit" class="headerlink" title="使用 Homebridge 接入 Homekit"></a><strong>使用 Homebridge 接入 Homekit</strong></h2><h3 id="❓-為何不直接透過-HA-接入-Homekit？"><a href="#❓-為何不直接透過-HA-接入-Homekit？" class="headerlink" title="❓ 為何不直接透過 HA 接入 Homekit？"></a>❓ 為何不直接透過 HA 接入 Homekit？</h3><p>Dyson 冷暖扇的功能非常多，原本加入 HA 想說 Homekit 應該也沒啥問題，但是發現…有夠難用！</p>
<p>加入 HA 後這些功能會被拆分成好幾個實體</p>
<ul>
<li>傳感器(sensor) x 7</li>
<li>開關(switch) x 2</li>
<li>風扇(fan)</li>
<li>空調(climate)</li>
</ul>
<p>所以加入 Homekit 也會被拆分開來，風扇和空調的 UI 整個用起來很詭異</p>
<ul>
<li>👎 傳感器部分都被拆分出去</li>
<li>👎 風扇點開有個按鈕是最不常用的 “吹後方” 功能</li>
<li>👎 風扇打開，空調也會 on，空調有 冷氣、暖氣模式</li>
</ul>
<p>相比之下透過 Homebridge 加入的，就好用很多</p>
<ul>
<li>👍 icon 為空氣清淨機，且傳感器數據都歸納在此之下</li>
<li>👍 暖氣功能，只有開關，沒有多選模式，只有暖氣打開時才會 on</li>
</ul>
<p>當然你可以都試試看，如果覺得沒差就不用另外使用 Homebridge</p>
<h3 id="🤖-接入-Homebridge"><a href="#🤖-接入-Homebridge" class="headerlink" title="🤖 接入 Homebridge"></a>🤖 接入 Homebridge</h3><ol>
<li>安裝 Homebridge，可以在 <a href="https://www.justplus.com.tw/homebridgeinhassio.html">HA 上用 Portainer 安裝</a>，或在 <a href="https://hdcola.medium.com/homebridge%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%BD%9C%E5%BC%8A%E6%9D%A1-docker%E7%89%88-4af9c9e2ac7d">NAS 上用 Docker 安裝</a></li>
<li>在 Plugins 頁面搜尋套件 Dyson Pure Cool 安裝</li>
<li>輸入剛剛得到的 設備序號(Serial)、憑證(Credential) 和設備 IP</li>
<li>儲存並重啟 Homebridge</li>
</ol>


<h3 id="❓-可能遇到的問題-1"><a href="#❓-可能遇到的問題-1" class="headerlink" title="❓ 可能遇到的問題"></a>❓ 可能遇到的問題</h3><ul>
<li>冷暖扇加入後沒有暖氣功能</li>
</ul>
<p>你很幸運跟我一樣買到新型號，<a href="https://github.com/lukasroegner/homebridge-dyson-pure-cool">此插件</a> 尚未支援的話，可以先去 <a href="https://github.com/lukasroegner/homebridge-dyson-pure-cool/blob/master/src/productTypeInfo.js">程式碼</a> 檢查是否存在你的裝置類別(Device Type)，沒有的話，你就只能等作者更新，或者是有能力的話你可以改程式碼。</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://forum.justplus.com.tw/forum.php?mod=viewthread&tid=95">Dyson 使用 Dyson Local 接入HA問題及個人解法</a></li>
<li><a href="https://hdcola.medium.com/homebridge%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%BD%9C%E5%BC%8A%E6%9D%A1-docker%E7%89%88-4af9c9e2ac7d">HomeBridge安装使用作弊条-Docker版</a></li>
</ul>
]]></content>
      <categories>
        <category>🏠 智慧家庭</category>
      </categories>
      <tags>
        <tag>Home Assistant</tag>
        <tag>Dyson</tag>
        <tag>Homekit</tag>
      </tags>
  </entry>
  <entry>
    <title>Cursor vs Windsurf：AI 編輯器的新紀元比較</title>
    <url>/2024/cursor-vs-windsurf-comparison/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1633356122102-3fe601e05bd2?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在 AI 快速發展的時代，開發工具也開始融入 AI 的能力。今天要來比較兩個新興的 AI 編輯器：Cursor 和 Windsurf，探討它們的特色與差異。</p>
<span id="more"></span>

<h2 id="Cursor-簡介"><a href="#Cursor-簡介" class="headerlink" title="Cursor 簡介"></a>Cursor 簡介</h2><img data-src="/2024/cursor-vs-windsurf-comparison/cursor-interface.png" class="" title="Cursor 編輯器介面">

<p>Cursor 是一個基於 VS Code 的 AI 編輯器，具有以下特點：</p>
<ol>
<li><p><strong>原生 VS Code 體驗</strong></p>
<ul>
<li>完整繼承 VS Code 的功能和擴充性</li>
<li>支援所有 VS Code 的擴充套件</li>
<li>熟悉的介面和快捷鍵</li>
</ul>
</li>
<li><p><strong>AI 輔助功能</strong></p>
<ul>
<li>內建 GPT-4 模型</li>
<li>智能程式碼補全</li>
<li>自然語言對話式程式開發</li>
<li>程式碼解釋與重構建議</li>
</ul>
</li>
<li><p><strong>免費版本可用</strong></p>
<ul>
<li>基礎功能免費使用</li>
<li>付費版本提供更多 AI 功能額度</li>
</ul>
</li>
</ol>
<h2 id="Windsurf-特色"><a href="#Windsurf-特色" class="headerlink" title="Windsurf 特色"></a>Windsurf 特色</h2><img data-src="/2024/cursor-vs-windsurf-comparison/windsurf-interface.png" class="" title="Windsurf AI Flow 介面">

<p>Windsurf 是一個全新設計的 AI 編輯器，採用了不同的方向：</p>
<ol>
<li><p><strong>Flow 開發模式</strong></p>
<ul>
<li>獨特的 AI Flow 開發範式</li>
<li>更自然的對話式開發體驗</li>
<li>AI 主動提供建議和最佳實踐</li>
</ul>
</li>
<li><p><strong>強大的 AI 代理</strong></p>
<ul>
<li>Cascade AI 助手深度整合</li>
<li>更強的程式碼理解能力</li>
<li>主動偵測並解決潛在問題</li>
</ul>
</li>
<li><p><strong>專注 AI 優先體驗</strong></p>
<ul>
<li>從零開始設計的 AI 優先介面</li>
<li>更流暢的 AI 互動體驗</li>
<li>更智能的程式碼生成與修改</li>
</ul>
</li>
</ol>
<h2 id="主要差異比較"><a href="#主要差異比較" class="headerlink" title="主要差異比較"></a>主要差異比較</h2><table>
<thead>
<tr>
<th>比較面向</th>
<th>Cursor</th>
<th>Windsurf</th>
</tr>
</thead>
<tbody><tr>
<td><strong>基礎架構</strong></td>
<td>• 基於 VS Code<br>• 繼承完整 VS Code 生態系統<br>• 可使用現有擴充套件</td>
<td>• 全新設計架構<br>• AI 優先的設計理念<br>• 獨立的開發環境</td>
</tr>
<tr>
<td><strong>使用者體驗</strong></td>
<td>• 傳統 IDE + AI 功能<br>• 熟悉的開發環境<br>• 較低的學習曲線</td>
<td>• 重新定義開發流程<br>• 對話式開發體驗<br>• 需要適應新的工作模式</td>
</tr>
<tr>
<td><strong>AI 能力</strong></td>
<td>• 輔助性質<br>• 需要明確呼叫<br>• 專注於程式碼生成和補全</td>
<td>• 主動式協助<br>• 深度整合<br>• 全方位的 AI 協作</td>
</tr>
<tr>
<td><strong>適用場景</strong></td>
<td>• 傳統開發團隊<br>• VS Code 用戶<br>• 漸進式導入 AI</td>
<td>• 創新導向團隊<br>• AI 優先開發<br>• 全新項目開發</td>
</tr>
<tr>
<td><strong>價格模式</strong></td>
<td>• 基礎功能免費<br>• 進階功能付費訂閱</td>
<td>• 完整功能付費<br>• 企業版客製化</td>
</tr>
</tbody></table>
<h3 id="選擇建議"><a href="#選擇建議" class="headerlink" title="選擇建議"></a>選擇建議</h3><ol>
<li><p><strong>選擇 Cursor 的情況</strong></p>
<ul>
<li>習慣 VS Code 的開發者</li>
<li>需要大量 VS Code 擴充功能</li>
<li>偏好穩定的傳統開發體驗</li>
</ul>
</li>
<li><p><strong>選擇 Windsurf 的情況</strong></p>
<ul>
<li>願意嘗試新的開發方式</li>
<li>重視 AI 協作體驗</li>
<li>需要更深度的 AI 整合</li>
</ul>
</li>
</ol>
<h2 id="個人使用心得"><a href="#個人使用心得" class="headerlink" title="個人使用心得"></a>個人使用心得</h2><p>在實際使用這兩款編輯器後，我發現它們各自在不同場景下展現出獨特的優勢：</p>
<h3 id="程式碼補全體驗"><a href="#程式碼補全體驗" class="headerlink" title="程式碼補全體驗"></a>程式碼補全體驗</h3><p>Cursor 的自動補全功能特別出色，它能精準預測開發者的下一步操作。當你開始編寫程式碼時，Cursor 就會主動預判接下來的內容，讓你只需要按下 Tab 鍵就能快速完成任務，大幅提升開發效率。</p>
<h3 id="複雜任務處理"><a href="#複雜任務處理" class="headerlink" title="複雜任務處理"></a>複雜任務處理</h3><p>相較之下，Windsurf 則在處理複雜任務時表現優異。無論是生成測試案例或是進行程式碼重構，Windsurf 都能夠勝任。這種特性使它特別適合需要深度思考和系統性改動的開發工作。</p>
<h3 id="以-Pair-Programming-類比"><a href="#以-Pair-Programming-類比" class="headerlink" title="以 Pair Programming 類比"></a>以 Pair Programming 類比</h3><table>
<thead>
<tr>
<th>特性</th>
<th>Cursor</th>
<th>Windsurf</th>
</tr>
</thead>
<tbody><tr>
<td><strong>角色定位</strong></td>
<td>AI 作為 Navigator<br>開發者作為 Driver</td>
<td>AI 作為 Driver<br>開發者作為 Navigator</td>
</tr>
<tr>
<td><strong>互動方式</strong></td>
<td>• 適時提供建議<br>• 主動預判下一步<br>• 加速開發流程</td>
<td>• 執行具體編碼<br>• 處理實作細節<br>• 完成複雜任務</td>
</tr>
<tr>
<td><strong>開發者主導性</strong></td>
<td>較高，開發者是主要程式撰寫者</td>
<td>較低，開發者主要提供方向和想法</td>
</tr>
<tr>
<td><strong>適用場景</strong></td>
<td>• 快速編碼<br>• 需要即時建議<br>• 循序漸進的開發</td>
<td>• 系統重構<br>• 測試生成<br>• 複雜邏輯實作</td>
</tr>
</tbody></table>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>Cursor 和 Windsurf 代表了兩種不同的 AI 編輯器發展方向。Cursor 採用漸進式改良，將 AI 功能加入熟悉的開發環境；而 Windsurf 則是徹底重新思考 AI 時代的程式開發方式。選擇哪一個取決於個人的開發習慣和對 AI 協作的期待程度。</p>
<p>無論選擇哪一個工具，它們都代表了程式開發工具的未來趨勢 - AI 將不再只是一個附加功能，而是開發過程中不可或缺的夥伴。</p>
<h2 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h2><ul>
<li><a href="https://www.cursor.com/">Cursor 官方網站</a></li>
<li><a href="https://codeium.com/windsurf">Windsurf 官方網站</a></li>
</ul>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>IDE</tag>
        <tag>開發工具</tag>
      </tags>
  </entry>
  <entry>
    <title>XREAL One AR眼鏡：輕便隨身的擴增實境體驗</title>
    <url>/2024/xreal-one/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://i.imgur.com/u1dhQ1O.png?maxwidth=1200&maxheight=630"></p>
<!-- 前言 -->
<p>使用 XREAL One 之前，我曾用 Air 2 Pro 追劇和出差，雖然實用，但因固定畫面限制，看螢幕邊緣需特別用力，長時間容易導致眼睛疲勞。</p>
<h2 id="XREAL-One-的特色"><a href="#XREAL-One-的特色" class="headerlink" title="XREAL One 的特色"></a>XREAL One 的特色</h2><p>XREAL One 帶來許多改進，尤其是更大的視野角度（FOV）和更舒適的觀看體驗，提供了兩種模式：固定模式（Anchor Mode）和跟隨模式（Follow Mode）。</p>
<span id="more"></span>

<!-- 文章開始 -->

<p><strong>固定模式（Anchor Mode）：</strong></p>
<p>採用 3DoF 技術，畫面穩定不晃動，適合靜態場景如追劇或閱讀。</p>
<img data-src="/2024/xreal-one/anchor-mode.png" class="">

<p><strong>跟隨模式（Follow Mode）：</strong></p>
<p>畫面隨頭部平滑移動，適合互動性強的場景如遊戲，能顯著降低眼睛負擔。</p>
<img data-src="/2024/xreal-one/follow-mode.png" class="">

<p>此外，XREAL One 支援 32:9 超寬畫面比例，透過 Type-C 接口可連接手機、電腦和遊戲機，成為輕便的隨身大螢幕。</p>
<img data-src="/2024/xreal-one/ultrawide-mode.png" class="">

<p>三段式可調背景透明度</p>
<img data-src="/2024/xreal-one/adjust-bg.png" class="">

<h2 id="應用場景"><a href="#應用場景" class="headerlink" title="應用場景"></a>應用場景</h2><ul>
<li><strong>搭配手機：</strong> 像隨身螢幕一樣，能在家中任何地方追劇或進行遠端遊戲。</li>
<li><strong>配合電腦：</strong> 成為外出辦公的第二螢幕，32:9 的寬螢幕比例大幅提升工作效率。</li>
<li><strong>連接遊戲機：</strong> 提供更大的遊戲畫面，不用一直低頭看小螢幕。</li>
</ul>
<h2 id="缺點"><a href="#缺點" class="headerlink" title="缺點"></a>缺點</h2><p>雖然體驗提升不少，但仍有以下問題需要注意：</p>
<ul>
<li><strong>畫面反射：</strong> 由於 AR 成像原理，畫面可能反射使用者的衣服或手部，建議調整環境光線或穿深色衣物以減少影響。</li>
<li><strong>焦距切換不適：</strong> 虛擬畫面最短觀看距離約 4 公尺，而實體畫面通常較近，頻繁切換可能導致眼睛疲勞。</li>
<li><strong>透光率偏低：</strong> 即使調整到最透明模式，眼鏡遮光率仍高，長時間觀看實體畫面可能因光線不足引發眼部疲勞。</li>
</ul>
<p><strong>建議：</strong></p>
<p>在混合使用模式下，可將虛擬畫面作為主要顯示，實體畫面作為輔助，避免頻繁焦距切換。</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>XREAL One 作為輕便的 AR 眼鏡，透過改進的 FOV、3DoF 技術與多種觀看模式，解決了傳統 AR 眼鏡的使用痛點。不論是追劇、工作還是遊戲，都能靈活應用。</p>
<p>目前 AR 技術著重於輕便攜帶與多場景應用，雖然仍以外接螢幕為主，但這正是 AR 的優勢所在。未來隨著技術成熟，XREAL One 有望成為更多人工作與娛樂的隨身利器。</p>
]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>AR</tag>
      </tags>
  </entry>
  <entry>
    <title>與 AI 的 Pair Programming - 打造方便的 git 複雜指令</title>
    <url>/2024/pair-programming-with-ai-build-complex-git-command/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1530442788742-8a6beb2efb65?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在第一次學習到 Git Merge 功能時，覺得很反直覺，當自己開發的 branch 要合併至 develop 或是 master 時，還要 checkout 過去在做 merge。</p>
<p>只做一次倒還好，但這是每天都會用不只一次的指令，真的是蠻浪費的時間的，所以我想做 git 複雜指令是</p>
<blockquote>
<p>將當前 Branch 合併至目標 Branch 並 push</p>
</blockquote>
<p>聽起來很簡單，但其實隱含了幾個 git 指令</p>
<ul>
<li>git checkout {target_branch}</li>
<li>git reset —hard origin&#x2F;{target_branch}<ul>
<li>取代 git pull</li>
</ul>
</li>
<li>git merge {origin_branch}</li>
<li>git push</li>
<li>git checkout {origin_branch}</li>
</ul>
<p>分為不 push 和要 push 兩個指令</p>
<ul>
<li>Git Merge Into (gmi)</li>
<li>Git Merge Into and Push (gmip)</li>
</ul>
<p>用起來會像是</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">gmi &#123;target_branch&#125;</span><br><span class="line">gmip &#123;target_branch&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<!-- 文章開始 -->

<h3 id="最簡單的實作方法-Git-Alias"><a href="#最簡單的實作方法-Git-Alias" class="headerlink" title="最簡單的實作方法 Git Alias"></a>最簡單的實作方法 Git Alias</h3><p>這是我同事分享的 Git Alias</p>
<p><code>git config --edit --global</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">[alias]</span><br><span class="line">	co = checkout</span><br><span class="line">	br = branch</span><br><span class="line">	st = status</span><br><span class="line">	l = log --oneline --graph</span><br><span class="line">	ph = push</span><br><span class="line">	pl = pull</span><br><span class="line">	mi = !sh -c <span class="string">&#x27;_CURRENT_BRANCH=$(git symbolic-ref --short HEAD) &amp;&amp; git checkout $1 &amp;&amp; git pull &amp;&amp; git merge $_CURRENT_BRANCH &amp;&amp; git checkout $_CURRENT_BRANCH&#x27;</span> -</span><br><span class="line">	mip = !sh -c <span class="string">&#x27;_CURRENT_BRANCH=$(git symbolic-ref --short HEAD) &amp;&amp; git checkout $1 &amp;&amp; git pull &amp;&amp; git merge $_CURRENT_BRANCH &amp;&amp; git push &amp;&amp; git checkout $_CURRENT_BRANCH&#x27;</span> -</span><br></pre></td></tr></table></figure>

<p>使用 <code>git mi &#123;target_branch&#125;</code> 就能最簡單達到目的，但指令執行時有個前提是</p>
<blockquote>
<p>指令執行過程要一切順暢</p>
</blockquote>
<p>也就是這指令沒有防呆，也沒有 error handle，當 pull, merge, push 中間哪一段失敗了，就會強制中斷。</p>
<p>且會斷在 target branch 上，不會再 checkout 回來你原來的 branch，我使用了一陣子 Git Alias 才覺得這樣的體驗少了一個 UX 很重要的 undo 功能。</p>
<h3 id="Amazon-Q-前身-Fig-CLI-Completion"><a href="#Amazon-Q-前身-Fig-CLI-Completion" class="headerlink" title="Amazon Q (前身 Fig) CLI Completion"></a>Amazon Q (前身 Fig) CLI Completion</h3><p>CLI Completion 是個很好用的功能，可以提示指令下一個有什麼選擇，當他遇到 Alias 的話，會 Alias 的去做提示</p>
<p>像是上述的 <code>git co</code> 會以 <code>git checkout</code> 去提示</p>
<img data-src="/2024/pair-programming-with-ai-build-complex-git-command/1.png" class="">

<p>可是如果過於複雜是一個 script 就會認不得 (請忽略 develop 那是 zsh 的 autocomplete）</p>
<img data-src="/2024/pair-programming-with-ai-build-complex-git-command/2.png" class="">

<p>所以基於 git alias 體驗不好，且沒有 Completion 的情況下，我打算來自己打造 CLI</p>
<h2 id="語言與-Library-選擇"><a href="#語言與-Library-選擇" class="headerlink" title="語言與 Library 選擇"></a>語言與 Library 選擇</h2><p>記得我好久以前有寫過 CLI，但好久以前了，決定從零開始，並且與目前最會寫 code 的 AI Pair，一起來完成這項任務。</p>
<p>起初我請 AI 推薦要用哪個語言給我</p>
<img data-src="/2024/pair-programming-with-ai-build-complex-git-command/3.png" class="">

<p>AI 還是一樣熱情多話呢，推薦了我使用 Python 或是 Go，我是先選擇了我比較熟悉的 Python</p>
<p>再請 AI 起個頭，寫個範例程式，第一次 AI 使用了 argparse 這 Library</p>
<img data-src="/2024/pair-programming-with-ai-build-complex-git-command/4.png" class="">

<p>但是 AI 沒教我們怎麼 build 可立即執行的 bin，再請教他一次，這次他使用了 Click 來寫範例</p>
<img data-src="/2024/pair-programming-with-ai-build-complex-git-command/5.png" class="">

<p>我就想說怎麼兩次推薦的不一樣，就去找了一下 Python 的 Cli Library。</p>
<p>結果找到 argparse、docopt、click、fire …</p>
<p>也太多選擇了吧！這也太為難有選擇困難的人了。</p>
<p>只好問候一下最熟悉的 Google，看了一陣子，感覺最容易上手的就是 click，最終就選擇由 Python + Click 開始實作我的 CLI 工具</p>
<h2 id="現有程式轉換"><a href="#現有程式轉換" class="headerlink" title="現有程式轉換"></a>現有程式轉換</h2><p>我原本就有個 script 版本的程式，直接餵給 AI 請他幫我轉換</p>
<img data-src="/2024/pair-programming-with-ai-build-complex-git-command/6.png" class="">

<p>試著跑了一下…恩…不能用呢…</p>
<p>當然第一版會有問題是很常見的，畢竟我的 AI 智慧只有 3.5，只好叫他再檢查一下</p>
<img data-src="/2024/pair-programming-with-ai-build-complex-git-command/7.png" class="">

<p>恩…還不能用呢…</p>
<p>算了，我還是手動 debug，不然怎麼算是 Pair 呢</p>
<p>debug 完算是完成基本功能</p>
<p>之後就是</p>
<ol>
<li>程式可以動</li>
<li>有要加功能請 AI 產生 code</li>
<li>複製貼上</li>
<li>debug 和測試</li>
<li>程式可以動</li>
</ol>
<p>這樣反覆迭代後就完成了 CLI，前前後後大概只花了 3 個小時</p>
<p><a href="https://github.com/iml885203/gmip">https://github.com/iml885203/gmip</a></p>
<h2 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h2><h3 id="Success"><a href="#Success" class="headerlink" title="Success"></a>Success</h3><img data-src="/2024/pair-programming-with-ai-build-complex-git-command/8.png" class="">

<h3 id="Error-Handle-Uncommitted-changes"><a href="#Error-Handle-Uncommitted-changes" class="headerlink" title="Error Handle - Uncommitted changes"></a>Error Handle - Uncommitted changes</h3><img data-src="/2024/pair-programming-with-ai-build-complex-git-command/9.png" class="">

<h3 id="Error-Handle-Merge-conflict"><a href="#Error-Handle-Merge-conflict" class="headerlink" title="Error Handle - Merge conflict"></a>Error Handle - Merge conflict</h3><img data-src="/2024/pair-programming-with-ai-build-complex-git-command/10.png" class="">

<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>與 AI pair 的過程要避免直接相信他的程式碼，主導權還是要在自己身上，對於不熟悉的程式碼還是一段一段套用測試比較安全，直接整個貼上 AI 給的程式碼誰知道哪個功能又壞掉。</p>
<p>目前使用的還只是免費的 GPT 3.5，用得好的話已經能節省很多時間，將來 AI 只會越來越進步，產生出來的程式碼錯誤率也會越來越低，相信不久的將來 AI 能成為最好的夥伴。</p>
]]></content>
      <categories>
        <category>🤖 人工智慧</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>AI</tag>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>SOAP 與 WSDL：與現代網頁開發中常見的API規格有何不同？</title>
    <url>/2023/soap-and-wsdl/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1562654501-a0ccc0fc3fb1?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在現代網頁開發中，API（Application Programming Interface）規格扮演著關鍵的角色，讓不同的應用程式能夠互相通信和共享資源。在眾多API規格中，SOAP（Simple Object Access Protocol）和WSDL（Web Services Description Language）具有獨特的特點和歷史。本文將介紹SOAP和WSDL，並探討它們與現代API規格的區別。</p>
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="SOAP-和-WSDL-簡介"><a href="#SOAP-和-WSDL-簡介" class="headerlink" title="SOAP 和 WSDL 簡介"></a>SOAP 和 WSDL 簡介</h2><h3 id="WSDL-Web-Services-Description-Language"><a href="#WSDL-Web-Services-Description-Language" class="headerlink" title="WSDL(Web Services Description Language)"></a>WSDL(Web Services Description Language)</h3><p>WSDL 全名為 Web Services Description Language，是一種用於描述 Web 服務的語言，主要目的提供一種標準的描述方式，使得不同平台與程式語言之間可以互相理解與溝通。</p>
<p>範例：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">definitions</span> <span class="attr">name</span>=<span class="string">&quot;UserService&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">targetNamespace</span>=<span class="string">&quot;http://www.example.com/webservice&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:soap</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/soap/&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:tns</span>=<span class="string">&quot;http://www.example.com/webservice&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">&quot;GetUserInfoRequest&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">&quot;UserID&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xsd:string&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">&quot;GetUserInfoResponse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">&quot;UserInfo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xsd:string&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">portType</span> <span class="attr">name</span>=<span class="string">&quot;UserPortType&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">operation</span> <span class="attr">name</span>=<span class="string">&quot;GetUserInfo&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">message</span>=<span class="string">&quot;tns:GetUserInfoRequest&quot;</span>/&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">output</span> <span class="attr">message</span>=<span class="string">&quot;tns:GetUserInfoResponse&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">operation</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">portType</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">binding</span> <span class="attr">name</span>=<span class="string">&quot;UserBinding&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:UserPortType&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">soap:binding</span> <span class="attr">style</span>=<span class="string">&quot;document&quot;</span> <span class="attr">transport</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/http&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">operation</span> <span class="attr">name</span>=<span class="string">&quot;GetUserInfo&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">soap:operation</span> <span class="attr">soapAction</span>=<span class="string">&quot;http://www.example.com/webservice/GetUserInfo&quot;</span>/&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">&quot;literal&quot;</span>/&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">output</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">&quot;literal&quot;</span>/&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">operation</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">binding</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">service</span> <span class="attr">name</span>=<span class="string">&quot;UserService&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">port</span> <span class="attr">name</span>=<span class="string">&quot;UserPort&quot;</span> <span class="attr">binding</span>=<span class="string">&quot;tns:UserBinding&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">soap:address</span> <span class="attr">location</span>=<span class="string">&quot;http://www.example.com/webservice&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">definitions</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="SOAP-Simple-Object-Access-Protocol"><a href="#SOAP-Simple-Object-Access-Protocol" class="headerlink" title="SOAP(Simple Object Access Protocol)"></a>SOAP(Simple Object Access Protocol)</h3><p>SOAP 全名為 Simple Object Access Protocol，是一種網路通信協定，主要目的是讓不同平台上的應用程式能夠透過網際網路進行溝通和交互。</p>
<p>範例：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:soap</span>=<span class="string">&quot;http://www.w3.org/2003/05/soap-envelope&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:example</span>=<span class="string">&quot;http://www.example.com/webservice&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">soap:Header</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">example:GetUserInfo</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">example:UserID</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">example:UserID</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">example:GetUserInfo</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="與現代API規格差異"><a href="#與現代API規格差異" class="headerlink" title="與現代API規格差異"></a>與現代API規格差異</h2><p>SOAP和WSDL具有一些獨特的特點和限制。</p>
<p>首先，SOAP使用XML格式進行資料傳輸，而現代API規格更傾向於使用輕量級的資料交換格式，如JSON。</p>
<p>此外，SOAP的訊息結構相對複雜，而RESTful API更加簡潔和易於理解。</p>
<table>
<thead>
<tr>
<th></th>
<th>SOAP與WSDL</th>
<th>現代 API 規格 (Swagger &#x2F; OpenAPI)</th>
</tr>
</thead>
<tbody><tr>
<td>資料格式</td>
<td>使用XML格式</td>
<td>使用輕量級格式（如JSON、YAML）</td>
</tr>
<tr>
<td>資料交換</td>
<td>較為結構化，使用XML元素和命名空間</td>
<td>簡潔且易於解析的結構</td>
</tr>
<tr>
<td>資料描述語言</td>
<td>WSDL</td>
<td>使用Swagger &#x2F; OpenAPI規範描述API結構</td>
</tr>
<tr>
<td>可讀性與易用性</td>
<td>複雜且較難閱讀，需要熟悉XML概念</td>
<td>結構清晰且易於理解</td>
</tr>
<tr>
<td>擴展性</td>
<td>提供較多的標準化擴展機制</td>
<td>靈活且容易擴展</td>
</tr>
<tr>
<td>開發與維護成本</td>
<td>較高，需要額外的開發和配置工作</td>
<td>較低，較易於開發和維護</td>
</tr>
</tbody></table>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>隨著現代API規格的不斷發展，SOAP和WSDL在網頁開發中的使用情況可能會減少。然而，由於某些應用領域對於安全性和標準化的需求，SOAP和WSDL仍然會在一些特定領域中保持其重要性。</p>
]]></content>
      <categories>
        <category>🌐 網路</category>
      </categories>
      <tags>
        <tag>網路</tag>
        <tag>網頁開發</tag>
      </tags>
  </entry>
  <entry>
    <title>為什麼 OrbStack 可以比 Docker Desktop 還快</title>
    <url>/2023/why-orbstack-faster-than-docker-desktop/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1488666924014-71ccbf30e60f?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>最近，我的同事分享了一個酷東西：<a href="https://orbstack.dev/">OrbStack</a>。</p>
<p>這個工具號稱是 Docker Desktop 的替代品，使用起來更快、更輕量、更簡單。當我第一次聽到這個消息時，我心裡想著：底層都是透過 Docker Engine 執行 Docker，為什麼 OrbStack 可以比較快呢？</p>
<p>但是，當我去了解之後，才發現我對於 Docker 在 MacOS 上的認知有些落差。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Docker-on-MacOS"><a href="#Docker-on-MacOS" class="headerlink" title="Docker on MacOS"></a>Docker on MacOS</h2><h3 id="認知落差1-原來-Docker-Engine-on-MacOS-是執行在虛擬機上"><a href="#認知落差1-原來-Docker-Engine-on-MacOS-是執行在虛擬機上" class="headerlink" title="認知落差1 - 原來 Docker Engine  on MacOS 是執行在虛擬機上"></a>認知落差1 - 原來 Docker Engine  on MacOS 是執行在虛擬機上</h3><p>在 MacOS 上，Docker Engine 是透過虛擬機來執行的。這是由於 MacOS 使用的是 Darwin 內核，而 Docker Engine 需要在 Linux 內核上運行，因此在 MacOS 上執行 Docker Engine 需要透過虛擬機。</p>
<p>Docker Desktop 使用的是 HyperKit 虛擬化技術來運作 Docker Engine，HyperKit 與 VirtualBox 或 VMWare 類似，只是 HyperKit 是專門為 Docker 工作負載訂製的。</p>
<h3 id="認知落差2-Docker-Engine-可以裝多個，且可以透過指令切換"><a href="#認知落差2-Docker-Engine-可以裝多個，且可以透過指令切換" class="headerlink" title="認知落差2 - Docker Engine 可以裝多個，且可以透過指令切換"></a>認知落差2 - Docker Engine 可以裝多個，且可以透過指令切換</h3><p>早期，MacOS 可以直接安裝 Docker Engine 而不需要透過 Docker Desktop。現在官方只提供 Docker Desktop，唯一的不同點是它們使用不同的 Context。</p>
<p>Docker Context 允許您設置一個遠端 Docker 環境作為默認環境，以便在遠端 Docker 主機上運行 Docker 命令。</p>
<p>您可以使用以下指令來查看當前的 Context：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">docker context <span class="keyword">list</span></span><br></pre></td></tr></table></figure>

<p>如果您是透過 Docker Desktop 安裝的 Docker Engine，您將看到一個名為 <code>desktop-linux</code><br> 的 context。</p>
<p>如果您安裝了多個 Docker Engine，您可以使用 context 指令來切換 Docker 環境，而 image、container 等都是在 Docker 環境之下運行的。</p>
<h2 id="OrbStack-為什麼可以比-Docker-Desktop-還快"><a href="#OrbStack-為什麼可以比-Docker-Desktop-還快" class="headerlink" title="OrbStack 為什麼可以比 Docker Desktop 還快"></a>OrbStack 為什麼可以比 Docker Desktop 還快</h2><p>OrbStack 使用一種輕量級的 Linux 虛擬機，這種虛擬機具有共享內核，類似於 WSL2（Linux 的 Windows 子系統）。</p>
<p>因此，OrbStack 可以比 Docker Desktop 更快，這是由於它使用了一套自己的虛擬化技術，而非使用 HyperKit。這種虛擬化技術可以減少開銷並節省資源，從而提高性能。</p>
<h3 id="是免費的嗎？"><a href="#是免費的嗎？" class="headerlink" title="是免費的嗎？"></a>是免費的嗎？</h3><p>在測試期間，OrbStack 可以完全免費使用。不過，之後它將成為一個付費商品。</p>
<h2 id="虛擬機的差異-OrbStack-vs-HyperKit"><a href="#虛擬機的差異-OrbStack-vs-HyperKit" class="headerlink" title="虛擬機的差異(OrbStack vs HyperKit)"></a>虛擬機的差異(OrbStack vs HyperKit)</h2><p>由於 OrbStack 與 WSL2 類似，因此下表請 AI 整理了 WSL2 和 HyperKit 的虛擬化差異：</p>
<table>
<thead>
<tr>
<th></th>
<th>WSL2</th>
<th>HyperKit</th>
</tr>
</thead>
<tbody><tr>
<td>系統架構</td>
<td>在主機內核上直接運行 Linux 內核</td>
<td>是在 macOS 上運行的虛擬化引擎，可以運行 Docker 容器</td>
</tr>
<tr>
<td>性能</td>
<td>具有更好的性能，因爲他直接執行 Linux 內核，並與主機操作系統共享硬體資源</td>
<td>具有較低的性能開銷，因爲他是一種輕量級的虛擬化引擎，可以直接訪問主機操作系統的硬體資源</td>
</tr>
</tbody></table>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>在 MacOS 上，Docker 受限於仍然需要透過虛擬機來運行，速度上仍然不如在 Linux 上運行。</p>
<p>使用 OrbStack 可能會比較節省資源，如果只是輕量使用，可能使用 Docker Desktop 或 OrbStack 都一樣，剩下的就是看哪個應用程式介面使用上更順手了。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://docs.docker.com/desktop/faqs/macfaqs/">Frequently asked questions for Mac</a></li>
<li><a href="https://docs.orbstack.dev/architecture#architecture">OrbStack - Architecture</a></li>
</ul>
]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>MacOS</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>2023 最好用的 MacOS 個人生產力軟體</title>
    <url>/2023/best-macos-personal-productivity-software/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1511300636408-a63a89df3482?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>去年曾分享了一篇關於 <a href="/2022/macos-personal-productivity-software">MacOS 個人生產力軟體 2022</a>  的文章，探討了當時我在 MacOS 上使用的個人生產力軟體。</p>
<p>原本 2022 文章內我剩下 AirBuddy、BetterTouchTool、Middle 還有繼續使用，今年，我想要再更新這個話題，探討我在2023年所使用的軟體和工具。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Arc-瀏覽器"><a href="#Arc-瀏覽器" class="headerlink" title="Arc 瀏覽器"></a>Arc 瀏覽器</h2><blockquote>
<p>革命性的新一代瀏覽器<br><a href="https://arc.net/">https://arc.net/</a></p>
</blockquote>
<img data-src="/2023/best-macos-personal-productivity-software/arc.png" class="">

<p>自從在工作上使用 Arc 之後，就放棄使用 Chrome 了！</p>
<p>以下將簡單介紹幾個我很喜歡的功能</p>
<h3 id="Sidebar"><a href="#Sidebar" class="headerlink" title="Sidebar"></a>Sidebar</h3><img data-src="/2023/best-macos-personal-productivity-software/arc-sidebar.png" class="">

<p>將原本上方很容易爆炸的分頁改成左側的 Sidebar，並且分為三個區塊：</p>
<ul>
<li>Favorites(最愛)：最常用的頁面，固定在最上方，只會顯示 icon，有數量限制</li>
<li>Pinned Tabs(固定分頁)：中長期的頁面，可以建立資料夾管理</li>
<li>Today Tabs(今日分頁)：短期的頁面，固定時間會被清除</li>
</ul>
<p>除了改成 Sidebar 之外還移除了「書籤」的功能，對於使用者來說可能是一個轉移成 Arc 的痛點，但後來想想原本的書籤有點像是你的衣櫃，常常有放了好幾十年的衣服沒被穿過，移除了「書籤」算是強迫改善你的使用習慣，取而代之的是 Pinned Tabs 的管理方式。</p>
<h3 id="Space-工作區"><a href="#Space-工作區" class="headerlink" title="Space (工作區)"></a>Space (工作區)</h3><img data-src="/2023/best-macos-personal-productivity-software/arc-space.png" class="">

<p>快速切換工作區的 Sidebar，當接觸到 Arc 的 Space 功能之後，世界整個不一樣了！</p>
<p>平常會使用 Notion、Slack、Gmail、Google Calendar，而這幾個軟體都有分公司用、個人用，常常都要在個別軟體上切換帳號用久習慣後也沒覺得不方便。</p>
<p>上面軟體都有網頁版，都透過 Arc 打開固定在上面，輕輕一滑切換工作區，就能將整個帳號換過去，其實跟原本的 Chrome 多帳號有點類似，但操作起來順暢非常多。</p>
<h3 id="當初想用-Arc-原因"><a href="#當初想用-Arc-原因" class="headerlink" title="當初想用 Arc 原因"></a>當初想用 Arc 原因</h3><p>起初看到 Arc 只是覺得很有趣，畫面非常好看，沒想到最後會變成我的主力軟體，甚至還取代使用數十年的 Chrome。</p>
<p>以前用 Chrome 分頁爆炸時，就算已經用了分頁群組，那狹小的空間常常把分頁擠到看不到字，真的是浪費很多時間在找分頁。</p>
<p>Arc 自己使用下來覺得有別以往管理分頁的方式非常好用，特別是分頁還能自訂名稱。</p>
<h3 id="邀請制安裝"><a href="#邀請制安裝" class="headerlink" title="邀請制安裝"></a>邀請制安裝</h3><p>目前 Arc 還在邀請制的 Beta 階段，需要有連結才能加入使用，如果想要安裝的話，可以到 <a href="https://www.reddit.com/r/ArcBrowser/comments/11h2kq3/rarcbrowser_march_invite_megathread/">Reddit</a> 有分享連結的討論串可以找到網友分享的連結。</p>
<h2 id="Raycast"><a href="#Raycast" class="headerlink" title="Raycast"></a>Raycast</h2><blockquote>
<p>取代 Spotlight<br><a href="https://www.raycast.com/">https://www.raycast.com/</a></p>
</blockquote>
<p>比起 MacOS 內建的 Spotlight，Raycast 可以安裝很多 Extensions</p>
<img data-src="/2023/best-macos-personal-productivity-software/raycast.png" class="">

<h3 id="取代-Magnet"><a href="#取代-Magnet" class="headerlink" title="取代 Magnet"></a>取代 Magnet</h3><p>內建的 Window Management 直接取代我之前用 Magnet，而且快捷鍵可以直接設定成 Magnet 的方式，直接無痛轉移</p>


<h3 id="我使用的-Extensions"><a href="#我使用的-Extensions" class="headerlink" title="我使用的 Extensions"></a>我使用的 Extensions</h3><ul>
<li><a href="https://www.raycast.com/thomas/color-picker">Color Picker</a></li>
<li><a href="https://www.raycast.com/FezVrasta/emoji">Emoji Search</a></li>
</ul>
<p>更多 Extensions 可以去 <a href="https://www.raycast.com/store">Raycast Store</a> 查看</p>
<h3 id="自定義-Script"><a href="#自定義-Script" class="headerlink" title="自定義 Script"></a>自定義 Script</h3><p>最近發現 Raycast 的 Scripts，可以寫符合自己日常使用的腳本，就誕生了幾個腳本：</p>
<ul>
<li><a href="https://github.com/iml885203/helper_scripts/blob/master/RaycastScripts/music-meeting-bgm.applescript">會議用音樂</a></li>
<li><a href="https://github.com/iml885203/helper_scripts/blob/master/RaycastScripts/music-working-Anime-Piano-Instrumentals.applescript">工作用音樂</a></li>
<li><a href="https://github.com/iml885203/helper_scripts/blob/master/RaycastScripts/toggle-airpods.applescript">連線到 Airpods</a></li>
<li><a href="https://github.com/iml885203/helper_scripts/blob/master/RaycastScripts/toggle-vpn-(25sprout).sh">連線到 VPN</a></li>
</ul>
<h2 id="Bartender-4"><a href="#Bartender-4" class="headerlink" title="Bartender 4"></a>Bartender 4</h2><blockquote>
<p>整理工具列，需付費，$16.8 鎂<br><a href="https://www.macbartender.com/Bartender4/">https://www.macbartender.com/Bartender4/</a></p>
</blockquote>
<img data-src="/2023/best-macos-personal-productivity-software/bartender4.gif" class="">

<p>除了與之前 Hidden Bar 一樣可以收合工具列之外，有一個 Show For Updates 功能特別好用！</p>
<p>可以決定某些條件下，顯示被隱藏的工具列，像是：</p>
<ul>
<li>電量低於 20%，顯示電量</li>
<li>VPN 連線中，顯示 VPN</li>
<li>Wifi 無連線時，顯示 Wifi</li>
</ul>
<p>透過這些功能讓你的工具列更加的整潔！</p>
<h2 id="MonitorControl"><a href="#MonitorControl" class="headerlink" title="MonitorControl"></a><a href="https://github.com/MonitorControl/MonitorControl">MonitorControl</a></h2><blockquote>
<p>控制外接螢幕亮度&#x2F;音量<br><a href="https://github.com/MonitorControl/MonitorControl">https://github.com/MonitorControl/MonitorControl</a></p>
</blockquote>
<img data-src="/2023/best-macos-personal-productivity-software/monitor-control.png" class="">

<p>平時是透過螢幕再外接喇叭播放音樂，平常切換裝置時可以少接一條音源線，但 MacOS 內建無法控制外接螢幕的聲音，所以找到這個軟體可以控制螢幕的亮度和聲音。</p>
]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>動態設定 Git 多帳號管理</title>
    <url>/2023/dynamic-setting-for-git-multi-account-management/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1647166545674-ce28ce93bdca?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在使用 Git 提交代碼時，我們需要在配置文件中設置使用者名稱和電子郵件地址。通常，我們在一個倉庫中使用同一個 Git 賬戶來提交代碼。但是，有時候我們需要在同一臺電腦上使用不同的 Git 賬戶來提交代碼。例如，你可能需要在公司和個人項目之間切換，或者在參與不同團隊的多個項目時需要使用不同的 Git 賬戶。</p>
<p>為了避免每次切換項目時都手動更改 Git 配置文件，我們可以使用 <code>includeIf</code> 功能來實現動態配置 Git 使用者名稱和電子郵件地址。</p>
<p>以下是一些使用 <code>includeIf</code> 來動態配置 Git 使用者名稱和電子郵件地址的示例。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="配置-includeIf-選項"><a href="#配置-includeIf-選項" class="headerlink" title="配置 includeIf 選項"></a>配置 <code>includeIf</code> 選項</h2><p>在你的 Git 全局配置文件（通常為 <code>~/.gitconfig</code>）中，添加以下配置：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[includeIf <span class="string">&quot;gitdir/i:~/work/&quot;</span>]</span></span><br><span class="line">        path = ~/<span class="selector-class">.gitconfig-work</span></span><br><span class="line"><span class="selector-attr">[includeIf <span class="string">&quot;gitdir/i:~/personal/&quot;</span>]</span></span><br><span class="line">        path = ~/<span class="selector-class">.gitconfig-personal</span></span><br></pre></td></tr></table></figure>

<p>這裡，我們使用了 <code>includeIf</code> 選項，它會根據當前 Git 倉庫所在的目錄自動切換 Git 賬戶。</p>
<p>如果當前 Git 倉庫的路徑包含 <code>~/work/</code>，那麼 Git 將會加載 <code>~/.gitconfig-work</code> 文件，這個文件包含了你的工作項目所需的 Git 配置。同樣地，如果當前 Git 倉庫的路徑包含 <code>~/personal/</code>，那麼 Git 將會加載 <code>~/.gitconfig-personal</code> 文件，這個文件包含了你的個人項目所需的 Git 配置。</p>
<h2 id="配置不同的-Git-賬戶"><a href="#配置不同的-Git-賬戶" class="headerlink" title="配置不同的 Git 賬戶"></a>配置不同的 Git 賬戶</h2><p>現在，我們需要在兩個 Git 配置文件中分別設置不同的 Git 賬戶。</p>
<p>例如，你可以在 <code>~/.gitconfig-work</code> 文件中設置以下內容：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[user]</span></span><br><span class="line">        name = Your Name (Work)</span><br><span class="line">        email = your_email<span class="keyword">@work</span>.com</span><br></pre></td></tr></table></figure>

<p>而在 <code>~/.gitconfig-personal</code> 文件中，你可以設置以下內容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">        name = Your Name (Personal)</span><br><span class="line">        email = your_email@personal.com</span><br></pre></td></tr></table></figure>

<p>這樣，當你在 <code>~/work/</code> 目錄中的 Git 倉庫中提交代碼時，Git 將會使用 <code>~/.gitconfig-work</code> 文件中的配置，這包括使用你的工作電子郵件地址。而當你在 <code>~/personal/</code><br> 目錄中的 Git 倉庫中提交代碼時，Git 將會使用 <code>~/.gitconfig-personal</code><br> 文件中的配置，這包括使用你的個人電子郵件地址。</p>
<h2 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h2><p>現在，你可以在 <code>~/work/</code> 目錄中創建一個 Git 倉庫，並提交一些代碼。當你使用 <code>git log</code> 命令查看提交記錄時，你會看到提交者的名稱和電子郵件地址與 <code>~/.gitconfig-work</code> 中所定義的相同。</p>
<p>接著，在 <code>~/personal/</code> 目錄中創建一個 Git 倉庫，並提交一些代碼。當你使用 <code>git log</code> 命令查看提交記錄時，你會看到提交者的名稱和電子郵件地址與 <code>~/.gitconfig-personal</code> 中所定義的相同。</p>
<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a><strong>總結</strong></h2><p>通過使用 <code>includeIf</code> 選項，你可以根據當前 Git 倉庫的目錄動態配置 Git 使用者名稱和電子郵件地址，這可以幫助你輕鬆地在不同項目之間切換，並避免手動更改 Git 配置文件的麻煩。</p>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>Gitlab</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>【OpenAI 應用】ChatGPT 震驚全球！取代人類新聞標題寫手，究竟有多強？</title>
    <url>/2023/chatgpt-news-headline-generator/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1523995462485-3d171b5c8fa9?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在台灣，常常使用含糊不清且引人注目的方式以吸引眼球，這現象在 Wikipedia 的「<a href="https://zh.wikipedia.org/zh-hant/%E8%87%BA%E7%81%A3%E5%AA%92%E9%AB%94%E4%BA%82%E8%B1%A1">台灣媒體亂象</a>」一頁也有特別說明。</p>
<p>那麼，ChatGPT能否替代人類新聞標題寫手，並具有多強的能力呢？本文將深入探討。</p>
<span id="more"></span>

<!-- 文章開始 -->

<div class="note info"><p>🤖 此篇部分內容由 <a href="https://chat.openai.com/chat">ChatGPT</a> 協助產生</p>
</div>

<h2 id="詠唱過程"><a href="#詠唱過程" class="headerlink" title="詠唱過程"></a>詠唱過程</h2><img data-src="/2023/chatgpt-news-headline-generator/1.png" class="">

<img data-src="/2023/chatgpt-news-headline-generator/2.png" class="">

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://zh.wikipedia.org/zh-hant/%E8%87%BA%E7%81%A3%E5%AA%92%E9%AB%94%E4%BA%82%E8%B1%A1">Wiki: 台灣媒體亂象</a></li>
</ul>
]]></content>
      <categories>
        <category>🤖 人工智慧</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>GPT</tag>
        <tag>ChatGPT</tag>
      </tags>
  </entry>
  <entry>
    <title>【OpenAI 應用】取代 Siri 最智慧的語音助理 ChatGPT</title>
    <url>/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1623354582128-d8e232a8649e?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>本文將介紹如何利用 Siri 與 iOS 捷徑，連接 OpenAI API，製作出一個可以語音對話的 ChatGPT。</p>
<span id="more"></span>

<!-- 文章開始 -->

<div class="note info"><p>🤖 此篇部分內容由 <a href="https://chat.openai.com/chat">ChatGPT</a> 協助產生</p>
</div>

<h2 id="API-費用說明"><a href="#API-費用說明" class="headerlink" title="API 費用說明"></a>API 費用說明</h2><p>OpenAI API 不是完全免費的服務，但它提供了一些免費額度，讓使用者在額度內可以盡情試用 API 的功能。</p>
<p>每個帳號在註冊後都有 18 美元的免費額度，但需注意的是，這個額度會在三個月後到期。</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/price1.png" class="">

<p>使用 API 的費用是以使用 token 為計算基礎，1,000 個 token 的費用為 0.02 美元，也就是說，帶越多文字會使費用變得越高(廢話)。</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/price2.png" class="">

<h2 id="iOS-捷徑"><a href="#iOS-捷徑" class="headerlink" title="iOS 捷徑"></a>iOS 捷徑</h2><p>附上捷徑連結：<a href="https://www.icloud.com/shortcuts/4abaeeb59e3b444e9aecf946f2044b46">https://www.icloud.com/shortcuts/4abaeeb59e3b444e9aecf946f2044b46</a></p>
<p>使用此捷徑前需先編輯填入你的 API_KEY，可以在 OpenAI 網站上的「API Keys」頁面產生 API_KEY。</p>
<ol>
<li>去 OpenAI 網站 <a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a></li>
<li>登入會員，可以用 Google 登入最快</li>
<li>按下 Create new secret key</li>
<li>將 key 複製起來</li>
<li>編輯捷徑，將 key 貼過去</li>
</ol>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/shortcut6.png" class="">

<p>設定完成後就可以直接點擊，以文字方式跟 ChatGPT 互動</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/shortcut1.jpg" class="">

<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/shortcut2.jpg" class="">

<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/shortcut3.jpg" class="">

<p>也可以透過 Siri 以語音方式呼叫捷徑進行互動，只要對 Siri 說「Hey Siri {捷徑名字}」就可以啟動。</p>
<p>「寫一首七言絕句，關於 AI 取代人類」</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/shortcut4.jpg" class="">

<p>但好像不是七個字…看來 GPT3 目前對這塊還不是很熟悉。</p>
<p>既然可以透過 Siri 操作捷徑，那其他可以執行 Siri 的裝置也可以透過這捷徑跟 GPT 互動，像是 HomePod、Apple Watch、Apple TV。</p>
<p>像是我可以透過的 Apple Watch 跟 ChatGPT 說話。</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/shortcut5.png" class="">

<p><del>好吧，ChatGPT 講的笑話都不好笑</del></p>
<h2 id="API-使用技巧"><a href="#API-使用技巧" class="headerlink" title="API 使用技巧"></a>API 使用技巧</h2><p>在使用 API 的時候，有兩個使用技巧是透過詢問 ChatGPT 知道的。</p>
<h3 id="技巧1-禁止補齊文字"><a href="#技巧1-禁止補齊文字" class="headerlink" title="技巧1 - 禁止補齊文字"></a>技巧1 - 禁止補齊文字</h3><p>在測試 API 的時候發現，他有個很聰明的功能會自動補齊你的提詞(prompt)。</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/api1.png" class="">

<p>我只是輸入了「你好，可以」，他會自動幫我補齊後面的文字變成「你好可以幫你什麼？」</p>
<p>但是這樣在捷徑使用上會變成一個困擾，於是我去問了 ChatGPT…</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/api2.png" class="">

<p><strong>原來加上 [END] 就可以了！</strong></p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/api3.png" class="">

<h3 id="技巧2-指定繁體中文回答"><a href="#技巧2-指定繁體中文回答" class="headerlink" title="技巧2 - 指定繁體中文回答"></a>技巧2 - 指定繁體中文回答</h3><p>與 ChatGPT 聊天時，會發現用中文有時候會以簡體中文回答，用英文就會用英文回答，之前我都會前面加個「用繁體中文和我對話」為開頭，但想知道有沒有更簡單的方法，於是我又去問了 ChatGPT…</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/api4.png" class="">

<p><strong>開頭加上 #language:zh-tw 就可以讓他理解了！</strong></p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/api5.png" class="">

<p>用英文也可以讓他回答繁體中文</p>
<img data-src="/2023/the-most-intelligent-voice-assistant-chatgpt-to-replace-siri/api6.png" class="">]]></content>
      <categories>
        <category>🤖 人工智慧</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>GPT</tag>
        <tag>ChatGPT</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>軟體版本號哪種方式比較適合開發？(SemVer vs CalVer vs ZeroVer)</title>
    <url>/2022/software-versioning/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1608094921359-6a7a5d414fc6?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>軟體版本控制，通過使用特定的版本號格式來表示軟體版本，並且通過對版本號的變化來表示軟體中的改變。</p>
<p>常見的軟體版本號有 <strong>語意版本號(Semantic Versioning，簡稱 SemVer)</strong> 與 <strong>日期版本號(Calendar Versioning，簡稱CalVer)</strong> ，本篇將講解各種版本控制方式，並且於最後談論各種版本控制方式比較適合什麼樣的專案。</p>
<span id="more"></span>

<!-- 文章開始 -->

<div class="note info"><p>🤖 此篇部分內容由 <a href="https://chat.openai.com/chat">ChatGPT</a> 協助產生</p>
</div>

<h2 id="語意版本號（Semantic-Versioning）"><a href="#語意版本號（Semantic-Versioning）" class="headerlink" title="語意版本號（Semantic Versioning）"></a>語意版本號（Semantic Versioning）</h2><img data-src="/2022/software-versioning/SemVer.webp" class="">

<p>在 Semantic Versioning 中（簡稱 SemVer），軟件版本號的格式為 <strong><code>主版本號.次版本號.修訂號</code></strong> 。</p>
<ul>
<li>主版本號：用於表示軟體的大版本更新，例如 1.0.0、2.0.0 等，通常表示軟件中出現了重大的改變或新功能。</li>
<li>次版本號：用於表示軟體的小版本更新，例如 1.1.0、2.2.0 等，通常表示軟件中出現了一些新功能或改進。</li>
<li>修訂號：用於表示軟體的修訂版本，例如 1.0.1、2.2.3 等，通常表示軟體中出現了一些小的改變或修正。</li>
</ul>
<p>還有一些規則，用於確定軟體版本號的增加方式：</p>
<ul>
<li>在軟體的第一個版本中，主版本號應設為 0，當軟體進入生產階段時，主版本號應設為 1 或更大。</li>
<li>如果軟體的改變不會破壞向後相容性，則次版本號或修訂號應被增加。</li>
<li>如果軟體的改變會破壞向後相容性，則主版本號應被增加，次版本號和修訂號應被重置為 0。</li>
</ul>
<p>通過遵循這些規則，開發者可以通過軟體版本號來表示軟體中的改變，並讓用戶或是合作夥伴更清楚地了解軟體的新功能和更新狀況。</p>
<h2 id="日期版本號（Calendar-Versioning）"><a href="#日期版本號（Calendar-Versioning）" class="headerlink" title="日期版本號（Calendar Versioning）"></a>日期版本號（Calendar Versioning）</h2><img data-src="/2022/software-versioning/CalVer.webp" class="">

<p>在 Calendar Versioning 中（簡稱 CalVer），軟體版本號的格式為 <strong><code>年份.月份.建構號</code></strong> ，建構號由 1 開始累加，並且於下個月份重置。</p>
<p>例如，軟體版本號為 2022.12.3 表示軟體在 2022 年 12 月第 3 次建構的發佈。</p>
<p>CalVer 的優點在於，它可以讓開發者和用戶很清楚地知道軟體的版本更新時間，並且很容易追蹤軟體的更新進度。</p>
<p>但是 CalVer 在表示軟體版本中出現的改變方面，並不像 SemVer 那樣精確，只能從版本號中得知大約是在什麼時候更新的，並不能提供有關軟體實際改變的更多訊息。</p>
<h2 id="0-版本號（Zero-Versioning）"><a href="#0-版本號（Zero-Versioning）" class="headerlink" title="0 版本號（Zero Versioning）"></a>0 版本號（Zero Versioning）</h2><p>ZeroVer 很簡單，<strong>你的主要版本不應該超過計算中的第一個也是最重要的數字：零。</strong></p>
<p>例如：0.0.1、0.4.0、0.9999999</p>
<p>此方式被大量運用在各大專案上，可以於 <a href="https://0ver.org/#notable-zerover-projects">ZeroVer 的官網</a> 看到，第一個就是很有名的 <a href="https://github.com/facebook/react-native">React Native</a>。</p>
<p>個人猜測這些專案原本是想遵循 SemVer 規則，但由於開發者太多，無法輕易決定何時的版本算是 <code>Stable</code> 也就是 1.0.0，導致主版本號永遠處於 0 的狀態，變相的導致版本號的意義只被當作更新計數器，以便追蹤軟體更新進度。</p>
<h2 id="適合用在什麼樣的專案？"><a href="#適合用在什麼樣的專案？" class="headerlink" title="適合用在什麼樣的專案？"></a>適合用在什麼樣的專案？</h2><h3 id="語意版本號（Semantic-Versioning）-1"><a href="#語意版本號（Semantic-Versioning）-1" class="headerlink" title="語意版本號（Semantic Versioning）"></a>語意版本號（Semantic Versioning）</h3><p>規則嚴謹，好處是比較直觀，更貼近程式碼，但是如果沒有好好遵守規則，反而會變成 ZeroVer，版本號只是單純計數使用。</p>
<p>👉 <strong>適合專案：Library、Package 的專案。</strong></p>
<h3 id="日期版本號（Calendar-Versioning）-1"><a href="#日期版本號（Calendar-Versioning）-1" class="headerlink" title="日期版本號（Calendar Versioning）"></a>日期版本號（Calendar Versioning）</h3><p>規則簡單，且可以根據專案不同做調整，目前很多開源專案(HomeAssistant)或是大型專案(Ubuntu、Windows)，都是採用此方式。</p>
<p>因為大型開源專案通常有許多貢獻者，需要一種簡單易用的版本控制方式，會比 SemVer 還方便管理。</p>
<p>另外有專案如果是中途才決定採用版本號，也很適合 CalVer。</p>
<p>👉 <strong>適合專案：大型開源專案、不需要太嚴謹版本控制的應用程式專案。</strong></p>
<h3 id="0-版本號（Zero-Versioning）-1"><a href="#0-版本號（Zero-Versioning）-1" class="headerlink" title="0 版本號（Zero Versioning）"></a>0 版本號（Zero Versioning）</h3><p>通常使用 SemVer 的專案疏於管理，就會自動變成 ZeroVer，應該沒有專案在剛開始會想要主動使用 ZeroVer，除非真的只是單純當更新計數器使用。</p>
<p>比較推薦趕快更換到比較有意義的 CalVer，之前 Home Assistant 也是 ZeroVer 的項目之一，直到 2020 年才從 0.118 版本切換到 CalVer。</p>
<img data-src="/2022/software-versioning/ha.png" class="">

<p>👉 <strong>適合專案：無</strong></p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://frontside.com/blog/2022-02-09-semver-or-calver-by-project-type/">When to use use SEMVER or CALVER: project type considerations</a></li>
<li><a href="https://nehckl0.medium.com/semver-and-calver-2-popular-software-versioning-schemes-96be80efe36">SemVer and CalVer — 2 popular software versioning schemes</a></li>
<li><a href="https://semver.org/lang/zh-TW/">semver.org</a></li>
<li><a href="https://calver.org/overview_zhcn.html">calver.org</a></li>
<li><a href="https://0ver.org/">0ver.org</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>維護</tag>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>如何自製打造如 Philips Hue 電視沈浸式情境燈</title>
    <url>/2022/how-to-build-ambilight-tv-like-philips-hue/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1532529867795-3c83442c1e5c?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>電視背後貼上燈條，根據畫面即時顯示對應的燈光效果，提升觀看電視的沈浸式體驗，這就是 Philips Hue 情境燈，但是代價就是需要用很多鈔票去換取這的炫砲效果。</p>
<p>本篇將說明怎麼利用樹莓派與 ESP32 開發板弄出相同的效果。</p>
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="Philips-Hue-價格對比"><a href="#Philips-Hue-價格對比" class="headerlink" title="Philips Hue 價格對比"></a>Philips Hue 價格對比</h2><p>如果是用 Philips Hue 想要讓你的電視有動態情境燈光，需要有幾個設備</p>
<ul>
<li>Philips Hue Play HDMI影音燈光同步器</li>
<li>Philips Hue Play 漸變全彩情境燈帶</li>
<li>Philips Hue 智慧橋接器</li>
</ul>
<p>主要為同步器+燈帶，橋接器是為了加進去 Philips 智慧家庭系統，讓你的手機可以控制用的。</p>
<p>剛好 某 P 電商有賣整個套組，然後來讓我們看一下價格…</p>
<img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/philips-hue.png" class="">

<p><a href="https://24h.pchome.com.tw/store/DECN07">https://24h.pchome.com.tw/store/DECN07</a></p>
<p>只是讓我的電視後面會發光，就要價 2萬5！？</p>
<p>那如果你是自己用樹莓派做的話…</p>
<table>
<thead>
<tr>
<th></th>
<th>品項</th>
<th>價格</th>
<th>購買連結</th>
</tr>
</thead>
<tbody><tr>
<td>影音燈光同步器</td>
<td>樹莓派3</td>
<td>3,000</td>
<td><a href="https://reurl.cc/28LqDn">https://reurl.cc/28LqDn</a></td>
</tr>
<tr>
<td></td>
<td>HDMI 擷取盒</td>
<td>800</td>
<td><a href="https://reurl.cc/VRLbGQ">https://reurl.cc/VRLbGQ</a></td>
</tr>
<tr>
<td>燈條</td>
<td>ESP32 開發版</td>
<td>300</td>
<td><a href="https://reurl.cc/rZ5WdN">https://reurl.cc/rZ5WdN</a></td>
</tr>
<tr>
<td></td>
<td>燈條 WS2812B 5V 5M 300Leds</td>
<td>700</td>
<td><a href="https://reurl.cc/4Xo943">https://reurl.cc/4Xo943</a></td>
</tr>
<tr>
<td></td>
<td>3pin公母接頭</td>
<td>200</td>
<td><a href="https://reurl.cc/aaVyk7">https://reurl.cc/aaVyk7</a></td>
</tr>
</tbody></table>
<blockquote>
<p>於 2021 年初購買參考價格</p>
</blockquote>
<p>整個價格只要 $5,000，比起 Philips 來說真的便宜超級多！！</p>
<p>擷取盒部分也可以拆開買 <strong>HDMI 1進2出</strong>、<strong>HDMI 擷取線</strong>，穩定度會比較好，我本身是用這兩個</p>
<table>
<thead>
<tr>
<th>GZCOO HDMI 1進2出</th>
<th><a href="https://reurl.cc/qZLeX0">https://reurl.cc/qZLeX0</a></th>
</tr>
</thead>
<tbody><tr>
<td>IPXOZO 視訊擷取卡</td>
<td><a href="https://reurl.cc/bG9pdr">https://reurl.cc/bG9pdr</a></td>
</tr>
</tbody></table>
<h2 id="影音燈光同步器"><a href="#影音燈光同步器" class="headerlink" title="影音燈光同步器"></a>影音燈光同步器</h2><h3 id="【軟體】樹莓派上安裝-Hyperion"><a href="#【軟體】樹莓派上安裝-Hyperion" class="headerlink" title="【軟體】樹莓派上安裝 Hyperion"></a>【軟體】樹莓派上安裝 Hyperion</h3><p><a href="https://docs.hyperion-project.org/en/user/HyperBian.html#requirements">https://docs.hyperion-project.org/en/user/HyperBian.html#requirements</a></p>
<p>根據教學安裝 <code>HyperBian</code> 在樹莓派上，安裝完後接上電源，過一陣子於瀏覽器連上你的 Hyperion <code>http://IpOfYourPi:8090</code></p>
<p>安裝完成後，可以把 HDMI 擷取盒和樹莓派接上去你的電視，於 Capturing Hardware &gt; USB Capture 那邊打勾，選擇裝置，解析度建議不要開太高。</p>
<img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/hyperion-usb-capture.png" class="">

<p>點擊右上的電視 icon，打開 <code>Live video</code> ，可以看到樹莓派有沒有正確的截取到你的電視畫面。</p>
<img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/hyperion-live-video.png" class="">

<h2 id="情境燈條"><a href="#情境燈條" class="headerlink" title="情境燈條"></a>情境燈條</h2><h3 id="【硬體】ESP32-焊接-3pin-母頭"><a href="#【硬體】ESP32-焊接-3pin-母頭" class="headerlink" title="【硬體】ESP32 焊接 3pin 母頭"></a>【硬體】ESP32 焊接 3pin 母頭</h3><img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/esp32.jpg" class="">

<p>我們之後會安裝 <a href="https://kno.wled.ge/">WLED</a>，會用到 3 個腳位，5V、GND、GPIO2&#x2F;P2，5V 和 GND 就是負責供電給燈條，而 GPIO2&#x2F;P2 是傳輸資料告訴燈條需要顯示什麼顏色。</p>
<p>上圖是 ESP32 的，如果你是用 ESP8266 一樣是找 GPIO2&#x2F;D4。</p>
<img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/esp32-gpio.jpeg" class="">

<p>我醜陋的焊接 😂</p>
<p>上面有多和一顆電阻，是為了保護 LED 用的，但我也不知道有沒有用，反正就求個心安。</p>
<img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/wled.png" class="">

<p><a href="https://kno.wled.ge/basics/getting-started/">https://kno.wled.ge/basics/getting-started/</a></p>
<h3 id="【硬體】燈條裁剪、焊接-3pin-母頭"><a href="#【硬體】燈條裁剪、焊接-3pin-母頭" class="headerlink" title="【硬體】燈條裁剪、焊接 3pin 母頭"></a>【硬體】燈條裁剪、焊接 3pin 母頭</h3><p>把燈條找個膠帶黏貼在電視背後圍繞一圈，根據這尺裁剪下來，轉彎處部分可以直接繞，或是我一樣剪下來再焊接線上去。</p>
<p>燈條起點的地方焊接上 3pin 公頭，如果是剛買來的應該原本就會有 3pin 公頭就不需要焊接。</p>
<img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/led-turning-point.jpg" class="">

<h3 id="【軟體】安裝-WLED"><a href="#【軟體】安裝-WLED" class="headerlink" title="【軟體】安裝 WLED"></a>【軟體】安裝 WLED</h3><p>根據 <a href="https://kno.wled.ge/basics/install-binary/">WLED 安裝教學</a> 把 WLED 安裝進去你的 ESP32。</p>
<p>安裝完後，照著 <a href="https://kno.wled.ge/basics/getting-started/">WLED 設置教學</a> 設定你的 wifi</p>
<h2 id="Hyperion-設定-LED"><a href="#Hyperion-設定-LED" class="headerlink" title="Hyperion 設定 LED"></a>Hyperion 設定 LED</h2><blockquote>
<p>請先確保擷取畫面沒問題再進行 LED 設定</p>
</blockquote>
<p><strong>LED Controller</strong></p>
<ul>
<li>左邊選單選擇 LED Instances &gt; LED Output</li>
<li>在 LED Controller 區塊下的 Controller Type 選擇 wled</li>
<li>Devices Discovered 應該會列出你的 wled 裝置，如果沒有就選 Custom 並手動輸入 IP</li>
<li>然後點 Save settings 保存設定</li>
</ul>
<img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/hyperion-wled.png" class="">

<p><strong>LED Layout</strong></p>
<ul>
<li>左邊選單選擇 LED Instances &gt; LED Output</li>
<li>選擇 LED Layout</li>
<li>點擊展開 Classic Layout (LED Frame)</li>
<li>根據你的燈條擺放位置，去輸入各個方向有幾顆 LED</li>
<li>然後點 Save Layout 保存設定</li>
<li>如果轉彎處有幾顆 LED 不要亮的，可以加在下方的 Blacklist LEDs</li>
</ul>
<img data-src="/2022/how-to-build-ambilight-tv-like-philips-hue/hyperion-wled-layout.png" class="">

<p>Image Processing</p>
<ul>
<li>左邊選單選擇 LED Instances &gt; Image Processing</li>
<li>找到 Smoothing 區塊打勾 Activate，並且保存</li>
<li>找到 Blackbar detector 區塊打勾 Activate，並且保存</li>
</ul>
<p>以上設定好可以用 <a href="https://www.youtube.com/watch?v=8u4UzzJZAUg">這影片</a> 去測試一下，都沒問題就可以馬上去找一部影片享受你的沈浸式觀影體驗！！</p>
<h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>Hyperion 我原本在 2021 年初完成，事隔快兩年才補完這篇，內容可能會太過輕描淡寫 😂，不過還是希望可以紀錄一下自己的心路歷程。</p>
<p>另外如果對 ESP 開發板不熟，不懂那些腳位、焊接的，<a href="https://kno.wled.ge/basics/compatible-hardware/">WLED 官網</a> 也有提供一些已經預裝好且不需要焊接的開發板可以購買，買來就可以直接接上燈條使用，可以省去蠻多時間的。</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://www.youtube.com/watch?v=urOEHzbV48A">LEDs behind your screen that MATCH the video you’re watching.</a></li>
<li><a href="https://tynick.com/blog/11-03-2019/getting-started-with-wled-on-esp8266/">Getting Started With WLED on ESP8266</a></li>
</ul>
]]></content>
      <categories>
        <category>🏠 智慧家庭</category>
      </categories>
      <tags>
        <tag>智慧家庭</tag>
        <tag>經驗</tag>
      </tags>
  </entry>
  <entry>
    <title>設計模式 (DesignPattern) 與典範 (Pardiams)</title>
    <url>/2022/design-pattern-and-pardiams/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1581092459682-ccfffd6ddc37?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在閱讀 <a href="https://ithelp.ithome.com.tw/articles/10287567">致 JavaScript 開發者的 Functional Programming 指南</a> 文章時發現這部分知識快被忘光了，需要複習一下 <strong>設計模式 (Design pattern)</strong> 與 <strong>典範 (Paradigm)</strong> 的定義。</p>
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="什麼是設計模式-Design-Pattern"><a href="#什麼是設計模式-Design-Pattern" class="headerlink" title="什麼是設計模式(Design Pattern)"></a>什麼是設計模式(Design Pattern)</h2><blockquote>
<p>在<a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B">軟體工程</a>中，<strong>設計模式</strong>（design pattern）是對<a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E4%BB%B6%E8%A8%AD%E8%A8%88">軟體設計</a>中普遍存在（反覆出現）的各種問題，所提出的解決方案。這個術語是由<a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E9%87%8C%E5%B8%8C%C2%B7%E4%BC%BD%E7%91%AA">埃里希·伽瑪</a>（Erich Gamma）等人在1990年代從<a href="https://zh.wikipedia.org/wiki/%E5%BB%BA%E7%AD%91%E8%AE%BE%E8%AE%A1">建築設計</a>領域引入到<a href="https://zh.wikipedia.org/wiki/%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8">計算機科學</a>的。</p>
<p>設計模式並不直接用來完成<a href="https://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BC%8F%E7%A2%BC">程式碼</a>的編寫，而是描述在各種不同情況下，要怎麼解決問題的一種方案。<a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1">物件導向</a>設計模式通常以<a href="https://zh.wikipedia.org/wiki/%E7%B1%BB_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)">類別</a>或<a href="https://zh.wikipedia.org/wiki/%E7%89%A9%E4%BB%B6_(%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8)">物件</a>來描述其中的關係和相互作用，但不涉及用來完成應用程式的特定類別或物件。設計模式能使不穩定依賴於相對穩定、具體依賴於相對抽象，避免會引起麻煩的緊耦合，以增強軟體設計面對並適應變化的能力。</p>
<p>並非所有的軟體模式都是設計模式，設計模式特指軟體「設計」層次上的問題。還有其他非設計模式的模式，如<a href="https://zh.wikipedia.org/wiki/%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F">架構模式</a>。同時，<a href="https://zh.wikipedia.org/wiki/%E6%BC%94%E7%AE%97%E6%B3%95">演算法</a>不能算是一種設計模式，因為演算法主要是用來解決計算上的問題，而非設計上的問題。</p>
<p>From <a href="https://zh.m.wikipedia.org/zh-tw/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_(%E8%AE%A1%E7%AE%97%E6%9C%BA)">Wiki</a></p>
</blockquote>
<p>狹義而言是指 Gof 的 23 個設計模式，廣義而言就是指一些程式元件實作時的模式。</p>
<p>Gof 的 23 個設計模式有些使用時機並不多，有些因為太常用了，已經變成許多程式或框架內建的一部分，像是</p>
<ul>
<li>Javascript 語言的 Proxy、Observer</li>
<li>Laravel 框架的 Builder、Factory</li>
</ul>
<p>這些都已經是內建的功能。</p>
<p>其實有點像是程式語言的歷史，你可以不懂 Observer 怎麼出現的，只要懂的怎麼用也可以寫出你想要的功能，只是學習了設計模式，就可以了解他設計的來源與想法，或許哪天<strong>你也可以開發出屬於你自己的設計模式</strong>。</p>
<h2 id="什麼是典範-Paradigm"><a href="#什麼是典範-Paradigm" class="headerlink" title="什麼是典範(Paradigm)"></a>什麼是典範(Paradigm)</h2><p>典範 (Paradigm) 意指的是：<strong>特定的程式設計風格。</strong></p>
<p>常見的典範有：物件導向程式設計 (Object-oriented Programming，簡稱 OOP)、函式程式設計 (Functional Programming，簡稱 FP)，兩者最大差別在於，<strong>OOP 是以實作物件為基礎，而 FP 是以函式來解決所有的問題。</strong></p>
<p>目前主流還是 OOP，如果你有機會實作 FP 的話，要注意到在實作 FP 時會<strong>犧牲效能與記憶體</strong>，但是他的優點是：</p>
<ul>
<li>讓邏輯變小更容易測試</li>
<li>減少達成目的所需要的程式狀態數量</li>
<li>更動程式狀態要用簡單且容易察覺的方式來做</li>
<li>減少不必要的程式的執行順序以及調用次數和細節的思考</li>
<li>減低程式碼的閱讀成本，快速的讓 Reviewer 知道你要做什麼，而且不用擔心有問題</li>
</ul>
<h2 id="設計模式與典範可否混用？"><a href="#設計模式與典範可否混用？" class="headerlink" title="設計模式與典範可否混用？"></a>設計模式與典範可否混用？</h2><blockquote>
<p>設計模式與規範混用是常態</p>
</blockquote>
<p>一個專案可能出現各種設計模式與典範，像是常見的 Laravel 框架，內建就包含了很多設計模式，如：</p>
<ul>
<li>Builder Pattern</li>
<li>Factory pattern</li>
<li>Strategy pattern</li>
<li>Provider pattern</li>
<li>Repository pattern</li>
<li>Facade pattern</li>
</ul>
<!-- 詳細可以看 [TODO: Laravel 中使用的設計模式](https://www.notion.so/TODO-Laravel-5f325c01bd8f487fb2032d7124c09b81) 。 -->

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10287567">致 JavaScript 開發者的 Functional Programming 指南</a></li>
<li><a href="http://teddy-chen-tw.blogspot.com/2013/05/gof23design-patterns2.html">GoF的23個Design Patterns要學幾個（2）？</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>程式</tag>
        <tag>筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>【居家辦公】午餐吃什麼的自動化通知</title>
    <url>/2022/ha-lunch-notify/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1591522811280-a8759970b03f?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>一個會自動通知你午餐要吃什麼的小功能。</p>
<p>自從開始居家工作之後，更注重於時間管理，準時的上下班、午餐時間，固定的<strong>儀式感，</strong>才不會模糊掉<strong>工作與生活的界線</strong>。</p>
<p>然而除了自己的儀式感之外，也在自家的 HomeAssistant 上簡單的拉了一個自動提醒午餐的功能，減少自己每天花在「想午餐」這件事情上的時間。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="發想"><a href="#發想" class="headerlink" title="發想"></a>發想</h2><p>每次午餐都不知道吃什麼，都要花時間想，原先只是想說有個簡單的工具可以每次亂數抽一下午餐要吃什麼，上網找了幾個工具，可以使用沒錯，但是好像還是不那麼理想。</p>
<p>後來就想到，不就是簡單的亂數，乾脆直接在 HA 拉一個功能，還可以自動化幾個規則：</p>
<ul>
<li>固定 12 點鐘觸發</li>
<li>判斷是否為上班日</li>
<li>發送抽午餐通知，順便提醒午餐時間到了</li>
</ul>
<blockquote>
<p>判斷是否為上班日：這是我另一個根據行事曆唯依據的判斷邏輯，簡單的可以用是否為平日判斷即可</p>
</blockquote>
<h2 id="設定流程"><a href="#設定流程" class="headerlink" title="設定流程"></a>設定流程</h2><p>在 packages 資料夾底下，創建一個 <code>random_lunkch.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">input_select:</span></span><br><span class="line">  <span class="attr">my_lunch:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">午餐</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">mdi:food</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">鍋貼</span></span><br><span class="line"></span><br><span class="line"><span class="attr">input_text:</span></span><br><span class="line">  <span class="attr">new_lunch:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">新增午餐文字</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">mdi:food</span></span><br><span class="line">  <span class="attr">today_lunch:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">今日午餐文字</span></span><br><span class="line">  <span class="attr">lunch_options_temp:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">午餐選項暫存</span></span><br><span class="line"></span><br><span class="line"><span class="attr">input_button:</span></span><br><span class="line">  <span class="attr">new_lunch:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">新增午餐</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">mdi:playlist-plus</span></span><br><span class="line">  <span class="attr">remove_lunch:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">移除午餐</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">mdi:playlist-minus</span></span><br><span class="line">  <span class="attr">get_lunch:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">抽午餐</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">mdi:bullseye-arrow</span></span><br></pre></td></tr></table></figure>

<p>然後在 NodeRed 上拉個流程</p>
<details class="note info no-icon"><summary><p>NodeRed 流程 JSON</p>
</summary>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;8248c2f95714d25a&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;server-state-changed&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;新增午餐&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;exposeToHomeAssistant&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;haConfig&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;name&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;icon&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityidfilter&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_button.new_lunch&quot;</span><span class="punctuation">,</span><span class="attr">&quot;entityidfiltertype&quot;</span><span class="punctuation">:</span><span class="string">&quot;exact&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputinitially&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;state_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;haltifstate&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_compare&quot;</span><span class="punctuation">:</span><span class="string">&quot;is&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;output_only_on_state_change&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;for&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;forType&quot;</span><span class="punctuation">:</span><span class="string">&quot;num&quot;</span><span class="punctuation">,</span><span class="attr">&quot;forUnits&quot;</span><span class="punctuation">:</span><span class="string">&quot;minutes&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateNull&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateUnknown&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateUnavailable&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignoreCurrentStateUnknown&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignoreCurrentStateUnavailable&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;entityState&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;data&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;eventData&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;topic&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;triggerId&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">140</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">180</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;fbf4d4e147736104&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;123abf5769aeead2&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-call-service&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;新增午餐選項&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;debugenabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_select&quot;</span><span class="punctuation">,</span><span class="attr">&quot;service&quot;</span><span class="punctuation">:</span><span class="string">&quot;set_options&quot;</span><span class="punctuation">,</span><span class="attr">&quot;areaId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;input_select.my_lunch&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span><span class="string">&quot;jsonata&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mergeContext&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mustacheAltTags&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">500</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">140</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;56c93a49b987bb42&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;fbf4d4e147736104&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;function&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;新午餐選項&quot;</span><span class="punctuation">,</span><span class="attr">&quot;func&quot;</span><span class="punctuation">:</span><span class="string">&quot;const ha = global.get(&#x27;homeassistant&#x27;).homeAssistant;\n\n// 取得資料\nlet newOption = ha.states[&#x27;input_text.new_lunch&#x27;].state;\nlet options = ha.states[&#x27;input_select.my_lunch&#x27;].attributes.options;\n\n// 新選項為空 或是 已經在選項內\nif (!newOption || options.includes(newOption)) &#123;\n    return [null, msg];\n&#125;\n\n// 加入到選項中\nlet newOptions = [...options, newOption];\n\n// 設定 msg\nmsg.payload = &#123;\n    \&quot;options\&quot;: newOptions\n&#125;;\n\nreturn [msg, null];&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;noerr&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;initialize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;finalize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;libs&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">310</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">180</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;123abf5769aeead2&quot;</span><span class="punctuation">,</span><span class="string">&quot;2e38fb4c7b4e8e61&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="punctuation">[</span><span class="string">&quot;56c93a49b987bb42&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;56c93a49b987bb42&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-call-service&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;清除文字&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;debugenabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_text&quot;</span><span class="punctuation">,</span><span class="attr">&quot;service&quot;</span><span class="punctuation">:</span><span class="string">&quot;set_value&quot;</span><span class="punctuation">,</span><span class="attr">&quot;areaId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;input_text.new_lunch&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="string">&quot;&#123;\&quot;value\&quot;:\&quot;\&quot;&#125;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span><span class="string">&quot;jsonata&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mergeContext&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mustacheAltTags&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">680</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">180</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;21a9c2ae23f0fab0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;server-state-changed&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;移除午餐&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;exposeToHomeAssistant&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;haConfig&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;name&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;icon&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityidfilter&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_button.remove_lunch&quot;</span><span class="punctuation">,</span><span class="attr">&quot;entityidfiltertype&quot;</span><span class="punctuation">:</span><span class="string">&quot;exact&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputinitially&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;state_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;haltifstate&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_compare&quot;</span><span class="punctuation">:</span><span class="string">&quot;is&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;output_only_on_state_change&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;for&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;forType&quot;</span><span class="punctuation">:</span><span class="string">&quot;num&quot;</span><span class="punctuation">,</span><span class="attr">&quot;forUnits&quot;</span><span class="punctuation">:</span><span class="string">&quot;minutes&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateNull&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateUnknown&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateUnavailable&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignoreCurrentStateUnknown&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignoreCurrentStateUnavailable&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;entityState&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;data&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;eventData&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;topic&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;triggerId&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">140</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">300</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;33cac9de44ec1ce8&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;33cac9de44ec1ce8&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;function&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;新午餐選項&quot;</span><span class="punctuation">,</span><span class="attr">&quot;func&quot;</span><span class="punctuation">:</span><span class="string">&quot;const ha = global.get(&#x27;homeassistant&#x27;).homeAssistant;\n\n// helpers functions\nlet arrRemove = (arr, value) =&gt; arr.filter((ele) =&gt; ele != value);\n\n// 取得資料\nlet currentOption = ha.states[&#x27;input_select.my_lunch&#x27;].state;\nlet options = ha.states[&#x27;input_select.my_lunch&#x27;].attributes.options;\n\n// 複製選項，避免改到原本資料\nlet newOptions = [...options];\n\n// 刪除後要選擇下一個選項\nlet nextOptionIdx = newOptions.indexOf(currentOption) + 1;\nlet nextOption = null;\nif (nextOptionIdx &lt; newOptions.length) &#123;\n    nextOption = newOptions[nextOptionIdx]\n&#125;\n\n// 刪除選項\nnewOptions = arrRemove(newOptions, currentOption);\n\n// 設定 msg\nmsg.payload = &#123;\n    \&quot;options\&quot;: newOptions\n&#125;;\nmsg.nextOption = nextOption;\n\nreturn msg;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;noerr&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;initialize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;finalize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;libs&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">310</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">300</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;38184ea529abe72b&quot;</span><span class="punctuation">,</span><span class="string">&quot;2e38fb4c7b4e8e61&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;38184ea529abe72b&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-call-service&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;新增午餐選項&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;debugenabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_select&quot;</span><span class="punctuation">,</span><span class="attr">&quot;service&quot;</span><span class="punctuation">:</span><span class="string">&quot;set_options&quot;</span><span class="punctuation">,</span><span class="attr">&quot;areaId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;input_select.my_lunch&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span><span class="string">&quot;jsonata&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mergeContext&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mustacheAltTags&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;nextOption&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;nextOption&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">500</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">300</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;a125dce5821db944&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;a001cfe9e0764ffc&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;function&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;抽籤&quot;</span><span class="punctuation">,</span><span class="attr">&quot;func&quot;</span><span class="punctuation">:</span><span class="string">&quot;const ha = global.get(&#x27;homeassistant&#x27;).homeAssistant;\n\nlet options = [...ha.states[&#x27;input_select.my_lunch&#x27;].attributes.options];\n\n// helpers functions\nlet arrRemove = (arr, value) =&gt; arr.filter((ele) =&gt; ele != value);\nlet getRandomInt = (min, max) =&gt; &#123;\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n&#125;;\nlet getRandomOption = () =&gt; &#123;\n    if (!options.length) &#123;\n        return null;\n    &#125;\n    let randOption = options[getRandomInt(0, options.length -1)];\n    options = arrRemove(options, randOption);\n    return randOption;\n&#125;;\n\n// get options\nmsg.payload = [\n    getRandomOption(),\n    getRandomOption()\n]\n\nreturn msg;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;noerr&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;initialize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;finalize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;libs&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">670</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">440</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;a35fcec7caecaf8d&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;a35fcec7caecaf8d&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;template&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;文字&quot;</span><span class="punctuation">,</span><span class="attr">&quot;field&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;fieldType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;format&quot;</span><span class="punctuation">:</span><span class="string">&quot;handlebars&quot;</span><span class="punctuation">,</span><span class="attr">&quot;syntax&quot;</span><span class="punctuation">:</span><span class="string">&quot;mustache&quot;</span><span class="punctuation">,</span><span class="attr">&quot;template&quot;</span><span class="punctuation">:</span><span class="string">&quot;今天午餐吃 &#123;&#123;payload.0&#125;&#125;，或是 &#123;&#123;payload.1&#125;&#125;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;output&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">810</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">440</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;97935d0e9c5aad56&quot;</span><span class="punctuation">,</span><span class="string">&quot;5b22215072849558&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;5b22215072849558&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-call-service&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;手機通知&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;debugenabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;notify&quot;</span><span class="punctuation">,</span><span class="attr">&quot;service&quot;</span><span class="punctuation">:</span><span class="string">&quot;mobile_app_longiphone&quot;</span><span class="punctuation">,</span><span class="attr">&quot;areaId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="string">&quot;&#123;\&quot;title\&quot;: \&quot;今日午餐\&quot;,\&quot;message\&quot;:\&quot;&#123;&#123;payload&#125;&#125;\&quot;&#125;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span><span class="string">&quot;json&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mergeContext&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mustacheAltTags&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">960</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">440</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;97935d0e9c5aad56&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-call-service&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;儲存文字&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;debugenabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_text&quot;</span><span class="punctuation">,</span><span class="attr">&quot;service&quot;</span><span class="punctuation">:</span><span class="string">&quot;set_value&quot;</span><span class="punctuation">,</span><span class="attr">&quot;areaId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;input_text.today_lunch&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="string">&quot;&#123;\&quot;value\&quot;:\&quot;&#123;&#123;payload&#125;&#125;\&quot;&#125;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span><span class="string">&quot;json&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mergeContext&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mustacheAltTags&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">960</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">500</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;df86347c9a1e2308&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;inject&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;props&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;p&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;p&quot;</span><span class="punctuation">:</span><span class="string">&quot;topic&quot;</span><span class="punctuation">,</span><span class="attr">&quot;vt&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;repeat&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;crontab&quot;</span><span class="punctuation">:</span><span class="string">&quot;00 12 * * *&quot;</span><span class="punctuation">,</span><span class="attr">&quot;once&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;onceDelay&quot;</span><span class="punctuation">:</span><span class="number">0.1</span><span class="punctuation">,</span><span class="attr">&quot;topic&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;payload&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;payloadType&quot;</span><span class="punctuation">:</span><span class="string">&quot;date&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">160</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">440</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;9c45aebc1d29e211&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;6765a3d308380d08&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;server-state-changed&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;手動抽午餐&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;exposeToHomeAssistant&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;haConfig&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;name&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;icon&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityidfilter&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_button.get_lunch&quot;</span><span class="punctuation">,</span><span class="attr">&quot;entityidfiltertype&quot;</span><span class="punctuation">:</span><span class="string">&quot;exact&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputinitially&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;state_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;haltifstate&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_compare&quot;</span><span class="punctuation">:</span><span class="string">&quot;is&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;output_only_on_state_change&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;for&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;forType&quot;</span><span class="punctuation">:</span><span class="string">&quot;num&quot;</span><span class="punctuation">,</span><span class="attr">&quot;forUnits&quot;</span><span class="punctuation">:</span><span class="string">&quot;minutes&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateNull&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateUnknown&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignorePrevStateUnavailable&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignoreCurrentStateUnknown&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ignoreCurrentStateUnavailable&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;entityState&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;data&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;eventData&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;topic&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;triggerId&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">480</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">520</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;a001cfe9e0764ffc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;9c45aebc1d29e211&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-current-state&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;為上班日&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;halt_if&quot;</span><span class="punctuation">:</span><span class="string">&quot;True&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_compare&quot;</span><span class="punctuation">:</span><span class="string">&quot;is&quot;</span><span class="punctuation">,</span><span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;sensor.workday&quot;</span><span class="punctuation">,</span><span class="attr">&quot;state_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;blockInputOverrides&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;entityState&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;data&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;entity&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;for&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;forType&quot;</span><span class="punctuation">:</span><span class="string">&quot;num&quot;</span><span class="punctuation">,</span><span class="attr">&quot;forUnits&quot;</span><span class="punctuation">:</span><span class="string">&quot;minutes&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">300</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">440</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;d4ebf9ce07268bfe&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;d4ebf9ce07268bfe&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-current-state&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;在家?&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;halt_if&quot;</span><span class="punctuation">:</span><span class="string">&quot;home&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;halt_if_compare&quot;</span><span class="punctuation">:</span><span class="string">&quot;is&quot;</span><span class="punctuation">,</span><span class="attr">&quot;entity_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;person.long&quot;</span><span class="punctuation">,</span><span class="attr">&quot;state_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;str&quot;</span><span class="punctuation">,</span><span class="attr">&quot;blockInputOverrides&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;data&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;entity&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;for&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;forType&quot;</span><span class="punctuation">:</span><span class="string">&quot;num&quot;</span><span class="punctuation">,</span><span class="attr">&quot;forUnits&quot;</span><span class="punctuation">:</span><span class="string">&quot;minutes&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">450</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">440</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;a001cfe9e0764ffc&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;a125dce5821db944&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-call-service&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;設定午餐選項為下一個&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;debugenabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_select&quot;</span><span class="punctuation">,</span><span class="attr">&quot;service&quot;</span><span class="punctuation">:</span><span class="string">&quot;select_option&quot;</span><span class="punctuation">,</span><span class="attr">&quot;areaId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;input_select.my_lunch&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="string">&quot;&#123;\&quot;option\&quot;:\&quot;&#123;&#123;nextOption&#125;&#125;\&quot;&#125;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span><span class="string">&quot;json&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mergeContext&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mustacheAltTags&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">720</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">300</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;200c42378c8756f3&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-call-service&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;重置午餐選項&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;debugenabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_select&quot;</span><span class="punctuation">,</span><span class="attr">&quot;service&quot;</span><span class="punctuation">:</span><span class="string">&quot;set_options&quot;</span><span class="punctuation">,</span><span class="attr">&quot;areaId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;input_select.my_lunch&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span><span class="string">&quot;jsonata&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mergeContext&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mustacheAltTags&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;property&quot;</span><span class="punctuation">:</span><span class="string">&quot;nextOption&quot;</span><span class="punctuation">,</span><span class="attr">&quot;propertyType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span><span class="string">&quot;nextOption&quot;</span><span class="punctuation">,</span><span class="attr">&quot;valueType&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">640</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">660</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;6a795a0d9e9b5171&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;function&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;抓取暫存午餐選項&quot;</span><span class="punctuation">,</span><span class="attr">&quot;func&quot;</span><span class="punctuation">:</span><span class="string">&quot;const ha = global.get(&#x27;homeassistant&#x27;).homeAssistant;\n\n\n// 取得資料\nlet options = ha.states[&#x27;input_text.lunch_options_temp&#x27;].state;\n\n// 設定 msg\nmsg.payload = &#123;\n    \&quot;options\&quot;: options.split(&#x27;,&#x27;),\n&#125;;\n\nreturn msg;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;noerr&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;initialize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;finalize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;libs&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">430</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">660</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;200c42378c8756f3&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;2e38fb4c7b4e8e61&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;function&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;暫存選項&quot;</span><span class="punctuation">,</span><span class="attr">&quot;func&quot;</span><span class="punctuation">:</span><span class="string">&quot;msg.payload = &#123;\n    \&quot;value\&quot;: msg.payload.options.join(&#x27;,&#x27;)\n&#125;\nreturn msg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;noerr&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;initialize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;finalize&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;libs&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">480</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">240</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;92da02e3390b285e&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;92da02e3390b285e&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;api-call-service&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;暫存選項&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;debugenabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;input_text&quot;</span><span class="punctuation">,</span><span class="attr">&quot;service&quot;</span><span class="punctuation">:</span><span class="string">&quot;set_value&quot;</span><span class="punctuation">,</span><span class="attr">&quot;areaId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;input_text.lunch_options_temp&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="string">&quot;payload&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span><span class="string">&quot;jsonata&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mergeContext&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;mustacheAltTags&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">640</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">240</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;fb8fdd1a7bbdeb3d&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;link in&quot;</span><span class="punctuation">,</span><span class="attr">&quot;z&quot;</span><span class="punctuation">:</span><span class="string">&quot;64a9473eb44f7864&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Home Assistant Restarted&quot;</span><span class="punctuation">,</span><span class="attr">&quot;links&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;3754cbf709193071&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;x&quot;</span><span class="punctuation">:</span><span class="number">190</span><span class="punctuation">,</span><span class="attr">&quot;y&quot;</span><span class="punctuation">:</span><span class="number">660</span><span class="punctuation">,</span><span class="attr">&quot;wires&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;6a795a0d9e9b5171&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;l&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;e6c3e1a5.acb55&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;server&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Home Assistant&quot;</span><span class="punctuation">,</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;addon&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;rejectUnauthorizedCerts&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;ha_boolean&quot;</span><span class="punctuation">:</span><span class="string">&quot;y|yes|true|on|home|open&quot;</span><span class="punctuation">,</span><span class="attr">&quot;connectionDelay&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;cacheJson&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;heartbeat&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;heartbeatInterval&quot;</span><span class="punctuation">:</span><span class="number">30</span><span class="punctuation">,</span><span class="attr">&quot;areaSelector&quot;</span><span class="punctuation">:</span><span class="string">&quot;friendlyName&quot;</span><span class="punctuation">,</span><span class="attr">&quot;deviceSelector&quot;</span><span class="punctuation">:</span><span class="string">&quot;friendlyName&quot;</span><span class="punctuation">,</span><span class="attr">&quot;entitySelector&quot;</span><span class="punctuation">:</span><span class="string">&quot;friendlyName&quot;</span><span class="punctuation">,</span><span class="attr">&quot;statusSeparator&quot;</span><span class="punctuation">:</span><span class="string">&quot;at: &quot;</span><span class="punctuation">,</span><span class="attr">&quot;statusYear&quot;</span><span class="punctuation">:</span><span class="string">&quot;hidden&quot;</span><span class="punctuation">,</span><span class="attr">&quot;statusMonth&quot;</span><span class="punctuation">:</span><span class="string">&quot;short&quot;</span><span class="punctuation">,</span><span class="attr">&quot;statusDay&quot;</span><span class="punctuation">:</span><span class="string">&quot;numeric&quot;</span><span class="punctuation">,</span><span class="attr">&quot;statusHourCycle&quot;</span><span class="punctuation">:</span><span class="string">&quot;h23&quot;</span><span class="punctuation">,</span><span class="attr">&quot;statusTimeFormat&quot;</span><span class="punctuation">:</span><span class="string">&quot;h:m&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
</details>

<img data-src="/2022/ha-lunch-notify/nodered.png" class="">

<p>由於 HA 再重新啟動後，input_select 的選項會被重置，所以圖片中最下面那個是需要搭配 <a href="https://zachowj.github.io/node-red-contrib-home-assistant-websocket/cookbook/starting-flow-after-home-assistant-restart.html">Starting a flow after a Home Assistant restart</a> 把暫存的選項抓回來。</p>
<p>之後再把那些元件放在 HA 的總覽上，就可以在這邊新增&#x2F;刪除選項，或是手動觸發。</p>
<img data-src="/2022/ha-lunch-notify/ui.png" class="">

<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2>

<p>之後每天就會有固定收到通知，提醒你午餐時間，並幫你想好午餐可以吃什麼。</p>
<p>這是第一次完整在 HA 上弄不是串接硬體裝置的功能，還蠻有趣的，透過這個功能每天省下的時間，可以拿去做更多想做的事情～</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://zachowj.github.io/node-red-contrib-home-assistant-websocket/cookbook/starting-flow-after-home-assistant-restart.html">Starting a flow after a Home Assistant restart</a></li>
</ul>
]]></content>
      <categories>
        <category>🏠 智慧家庭</category>
      </categories>
      <tags>
        <tag>Home Assistant</tag>
        <tag>居家辦公</tag>
      </tags>
  </entry>
  <entry>
    <title>當 Laravel 軟刪除 (SofeDelete) 遇到 Unique 欄位</title>
    <url>/2022/laravel-soft-delete-with-unique-column/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/flagged/photo-1578728890856-8bbf3883aa6d?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>當 軟刪除(SoftDelete) 刪除後，遇到被軟刪除的 Unique 欄位與新的值發生衝突該怎麼辦？</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="軟刪除-SoftDelete"><a href="#軟刪除-SoftDelete" class="headerlink" title="軟刪除 (SoftDelete)"></a>軟刪除 (SoftDelete)</h2><p><a href="https://laravel.com/docs/9.x/eloquent#soft-deleting">Laravel 的 SoftDelete</a> 在資料刪除時，不會真的刪除資料，而是在 <code>deleted_at</code> 寫入刪除的時間。</p>
<p>常見的問題會發生在刪除用戶資料，假設我們有一張表 <code>users.email</code> 為 unique 的</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> users (</span><br><span class="line">	email <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">	deleted_at <span class="type">TIMESTAMP</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> email 設為 <span class="keyword">unique</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX users_email_uniq <span class="keyword">on</span> users (email);</span><br></pre></td></tr></table></figure>

<p>遇到軟刪除時就會出現問題：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span> 新增 <span class="keyword">user</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, NOW());</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 新增重複 <span class="keyword">user</span>，將出現錯誤</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> Query <span class="number">1</span> ERROR: Duplicate entry <span class="string">&#x27;a@email.com&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;users.users_email_uniq&#x27;</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure>

<h2 id="解決辦法-MySQL-8-複合索引與-IF"><a href="#解決辦法-MySQL-8-複合索引與-IF" class="headerlink" title="解決辦法(MySQL 8+) - 複合索引與 IF"></a>解決辦法(MySQL 8+) - 複合索引與 IF</h2><blockquote>
<p>MySQL 需要用到 <a href="/2022/mysql-composite-index/">MySQL 複合索引 (Composite Index)</a> 去處理。</p>
</blockquote>
<p>將索引改為複合索引：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX users_email_uniq <span class="keyword">on</span> users (</span><br><span class="line">	email,</span><br><span class="line">	(IF(deleted_at, <span class="keyword">NULL</span>, <span class="number">1</span>))</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>由於 MySQL 的索引在欄位為 null 的時候，<strong>不會被視為重複值</strong>，所以要加上 IF 讓 null 變為 1。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, NOW());</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, NOW());</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, <span class="keyword">null</span>); <span class="operator">/</span><span class="operator">/</span> 重複值被阻擋</span><br></pre></td></tr></table></figure>

<img data-src="/2022/laravel-soft-delete-with-unique-column/mysql8.png" class="">

<h2 id="解決辦法-MySQL-5-x-復合索引與-unix-timestamp"><a href="#解決辦法-MySQL-5-x-復合索引與-unix-timestamp" class="headerlink" title="解決辦法(MySQL 5.x) - 復合索引與 unix_timestamp"></a>解決辦法(MySQL 5.x) - 復合索引與 unix_timestamp</h2><p>複合索引裡面使用 IF，需要到 8 版本以上才能支援，那 5.x 版本的話需要從資料上處理。</p>
<p>根據上面可以知道 <strong>索引欄位為 null 的時候不會被視為重複值</strong>，那麼只要讓該欄位不要有 null 的狀況出現就好了，但因為使用 Laravel 框架，不能直接更動 <code>deleted_at</code> 這個欄位，所以要再創另一個 <code>deleted_at_unix</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> users (</span><br><span class="line">	email <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">	deleted_at <span class="type">TIMESTAMP</span>,</span><br><span class="line">	deleted_at_unix <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>建立復合索引</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX users_email_uniq <span class="keyword">on</span> users (email, deleted_at_unix);</span><br></pre></td></tr></table></figure>

<p>之後於 SoftDelete 的時候，同步更新 <code>deleted_at_unix</code> 欄位，可以用 <a href="https://laravel.com/docs/9.x/eloquent#observers">Observer</a> 去實作這功能</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, NOW(), UNIX_TIMESTAMP());</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, NOW(), UNIX_TIMESTAMP());</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, <span class="keyword">null</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users <span class="keyword">values</span> (<span class="string">&#x27;a@email.com&#x27;</span>, <span class="keyword">null</span>, <span class="number">0</span>); <span class="operator">/</span><span class="operator">/</span> 重複值被阻擋</span><br></pre></td></tr></table></figure>

<img data-src="/2022/laravel-soft-delete-with-unique-column/mysql5.png" class="">

<p>另外有一方法是<a href="https://dev.to/mmollick/using-unique-columns-and-soft-deletes-in-laravel-470p">把 unix_timestamp 直接寫在 email 欄位上</a>，就不需要用到復合索引，概念上是一樣的事情，就看當時的使用情境去決定怎麼去使用。</p>
<h2 id="解決辦法-PostgreSQL-部分索引"><a href="#解決辦法-PostgreSQL-部分索引" class="headerlink" title="解決辦法(PostgreSQL) - 部分索引"></a>解決辦法(PostgreSQL) - 部分索引</h2><p>PostgreSQL 支援 <a href="https://www.postgresql.org/docs/current/indexes-partial.html">部分索引</a>，也就是後面可以加上 <code>where</code> 語法，有這東西就可以輕鬆解決這問題：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX users_email_uniq <span class="keyword">ON</span> users (</span><br><span class="line">  email</span><br><span class="line">) <span class="keyword">WHERE</span> deleted_at <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure>

<p>不用像是 MySQL 那樣用複合索引再搭配一些處理去解決，使用上又更方便了，看來可以考慮試試看使用 PostgreSQL 了</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://sqlfordevs.com/unique-index-ignore-some-rows">Unique Indexes With Some Rows Excluded</a></li>
<li><a href="https://blog.staynoob.cn/post/2019/05/when-soft-delete-meets-unique-index/">When “Soft Delete” Meets “Unique Index”</a></li>
<li><a href="https://dev.to/mmollick/using-unique-columns-and-soft-deletes-in-laravel-470p">Using Unique Columns with Soft Deletes in Laravel</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>網頁開發</tag>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 複合索引 (Composite Index)</title>
    <url>/2022/mysql-composite-index/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1483736762161-1d107f3c78e1?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>簡單介紹 MySQL 復合索引用法與注意事項</p>
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="何謂複合索引-Composite-Index"><a href="#何謂複合索引-Composite-Index" class="headerlink" title="何謂複合索引 (Composite Index)"></a>何謂複合索引 (Composite Index)</h2><p>複合索引 (Composite Index) 又稱 Multiple-Column Indexes，永許你在多個欄位上建立 index。</p>
<p>用法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name (</span><br><span class="line">    c1 data_type <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    c2 data_type,</span><br><span class="line">    c3 data_type,</span><br><span class="line">    c4 data_type,</span><br><span class="line">    INDEX index_name (c2,c3,c4)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>創建完上述的 index，將在將在以下的組合具有索引搜尋功能：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">(c2)</span><br><span class="line">(c2,c3)</span><br><span class="line">(c2,c3,c4)</span><br></pre></td></tr></table></figure>

<p>換成 SQL 語法就是：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> c2 <span class="operator">=</span> v2;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> c2 <span class="operator">=</span> v2 <span class="keyword">AND</span> c3 <span class="operator">=</span> v3;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> c2 <span class="operator">=</span> v2 <span class="keyword">AND</span> c3 <span class="operator">=</span> v3 <span class="keyword">AND</span> c4 <span class="operator">=</span> v4;</span><br></pre></td></tr></table></figure>

<p>沒錯，只有這幾種組合會有索引功能，其他的組合將不會有效果，例如 (c2,c4)：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> c2 <span class="operator">=</span> v2 <span class="keyword">AND</span> c4 <span class="operator">=</span> v4;</span><br></pre></td></tr></table></figure>

<h2 id="EXPLAIN-驗證"><a href="#EXPLAIN-驗證" class="headerlink" title="EXPLAIN 驗證"></a>EXPLAIN 驗證</h2><p>可以前面加上 <code>EXPLAIN</code> 去驗證有沒有透過索引搜尋：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> c2 <span class="operator">=</span> v2;</span><br></pre></td></tr></table></figure>

<img data-src="/2022/mysql-composite-index/explain.png" class="">

<p>主要看這幾個欄位即可</p>
<ul>
<li>possible_keys: 能在該表中使用哪些索引有助於查詢</li>
<li>key: 實際使用的索引</li>
<li>key_len: 索引的長度，在不損失精確性的情況下，越短越好</li>
<li>ref: 索引的哪一列被使用</li>
</ul>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://www.mysqltutorial.org/mysql-index/mysql-composite-index/">MySQL Composite Index</a></li>
<li><a href="https://medium.com/@david.liu.950627/mysql-%E8%A4%87%E5%90%88%E7%B4%A2%E5%BC%95-multiple-column-indexes-%E6%9C%89%E9%A0%86%E5%BA%8F%E6%80%A7-268b434c04e">MySQL 複合索引 (Multiple-Column Indexes) 有順序性</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>Database</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL 基本觀念：外鍵(Foreign Key)約束條件</title>
    <url>/2022/sql-foreign-key/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/flagged/photo-1561023367-50a6e054d890?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>因為受到了在關聯式資料庫設定外鍵(Foreign key)的約束，在刪除資料的時候失敗，由於自己常常忘記這基本的東西，常常每次寫完又回來改約束的設定，所以紀錄一下，增加自己的印象。</p>
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="約束範圍"><a href="#約束範圍" class="headerlink" title="約束範圍"></a>約束範圍</h2><p>約束的用法在設定外鍵時後面加上 <code>ON UPDATE</code> 或 <code>ON DELETE</code>，通常都是用到 <code>ON DELETE</code> 比較多。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> parent (</span><br><span class="line">    id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> child (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    parent_id <span class="type">INT</span>,</span><br><span class="line">    INDEX par_ind (parent_id),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (parent_id)</span><br><span class="line">        <span class="keyword">REFERENCES</span> parent(id)</span><br><span class="line">        <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h2 id="約束規則"><a href="#約束規則" class="headerlink" title="約束規則"></a>約束規則</h2><h3 id="RESTRICT-Mysql-預設"><a href="#RESTRICT-Mysql-預設" class="headerlink" title="RESTRICT (Mysql 預設)"></a>RESTRICT (Mysql 預設)</h3><p>當父表 update&#x2F;delete 時，如有對應子表資料，則不允許 update&#x2F;delete</p>
<h3 id="CASCADE"><a href="#CASCADE" class="headerlink" title="CASCADE"></a>CASCADE</h3><p>在父表上 update&#x2F;delete 時，同步 update&#x2F;delete 子表</p>
<h3 id="SET-NULL"><a href="#SET-NULL" class="headerlink" title="SET NULL"></a>SET NULL</h3><p>在父表上 update&#x2F;delete 時，將子表上的欄位設為 null (要注意此外鍵不能為 not null)</p>
<h3 id="NO-ACTION"><a href="#NO-ACTION" class="headerlink" title="NO ACTION"></a>NO ACTION</h3><p>與 RESTRICT 相同，功能為 <strong>延遲檢查</strong>，但在 Mysql 中 NO ACTION 與 RESTRICT 都是為立即檢查約束。</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://b-l-u-e-b-e-r-r-y.github.io/post/ForeignKey/">以 MySQL 為例解釋外鍵（Foreign Key）</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html">13.1.20.5 FOREIGN KEY Constraints</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>筆記</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>白話文 Gitlab 升級操作指南</title>
    <url>/2022/gitlab-upgrade/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1600074169098-16a54d791d0d?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>此篇用白話文說明怎麼升級 Gitlab 版本 (Linux packages)。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Gitlab 升級說明在官方寫得非常清楚，但也是因為 “非常清楚” 導致文字量非常多，所以趁著這次升級 Gitlab 用白話文重新說明一下。</p>
<ul>
<li>系統：Ubuntu 20.04</li>
<li>Gitlab 版本：Gitlab CE</li>
<li>Gitlab 安裝方式：Linux packages</li>
</ul>
<h2 id="先了解安裝方式"><a href="#先了解安裝方式" class="headerlink" title="先了解安裝方式"></a>先了解安裝方式</h2><p>Gitlab 的安裝方式有幾種：</p>
<ul>
<li>Linux packages(Omnibus GitLab)</li>
<li>Source installations</li>
<li>Docker installations</li>
<li>Kubernetes (Helm) installations</li>
</ul>
<p>本篇主要著重於 Linux packages 安裝方式的升級</p>
<h2 id="事前檢查"><a href="#事前檢查" class="headerlink" title="事前檢查"></a>事前檢查</h2><ul>
<li><a href="https://docs.gitlab.com/ee/update/index.html#upgrade-paths">查看升級路徑</a></li>
<li>檢查一般配置</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo gitlab-rake gitlab:check</span><br></pre></td></tr></table></figure>

<ul>
<li>確認可以解密加密的資料庫</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo gitlab-rake gitlab:doctor:secrets</span><br></pre></td></tr></table></figure>

<h2 id="升級前備份"><a href="#升級前備份" class="headerlink" title="升級前備份"></a>升級前備份</h2><p>執行備份</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo gitlab-backup create</span><br></pre></td></tr></table></figure>

<p>此時看到一個警告</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">Warning: Your gitlab<span class="variable">.rb</span> <span class="keyword">and</span> gitlab-secrets<span class="variable">.json</span> files contain sensitive data</span><br><span class="line"><span class="keyword">and</span> are <span class="keyword">not</span> included in <span class="keyword">this</span> backup. You will need these files to restore a backup.</span><br><span class="line">Please back them up manually.</span><br></pre></td></tr></table></figure>

<p><code>gitlab.rb</code> 和 <code>gitlab-secrets.json</code> 這兩個檔案包含敏感訊息，需要手動備份</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/gitlab/gitlab.rb $(<span class="built_in">date</span> +<span class="string">&quot;%Y_%m_%d_gitlab.rb.backup&quot;</span>)</span><br><span class="line">sudo <span class="built_in">cp</span> /etc/gitlab/gitlab-secrets.json $(<span class="built_in">date</span> +<span class="string">&quot;%Y_%m_%d_gitlab-secrets.json.backup&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>確認一下剛剛的備份檔案</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">ls</span> /var/opt/gitlab/backups</span><br></pre></td></tr></table></figure>

<h2 id="開始升級"><a href="#開始升級" class="headerlink" title="開始升級"></a>開始升級</h2><p>gitlab 分為 <code>gitlab-ee</code> 和 <code>gitlab-ce</code> 可以去 <code>https://yourgitlab/help</code> 看一下你的版本是 ee 還是 ce<br>因為我使用 ce 版本，如果是 ee 下方指令就自動替換成 ee</p>
<h3 id="A-升級到最新版本"><a href="#A-升級到最新版本" class="headerlink" title="A. 升級到最新版本"></a>A. 升級到最新版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install gitlab-ce</span><br></pre></td></tr></table></figure>

<h3 id="B-升級到特定版本"><a href="#B-升級到特定版本" class="headerlink" title="B. 升級到特定版本"></a>B. 升級到特定版本</h3><p>根據<a href="https://docs.gitlab.com/ee/update/index.html#upgrade-paths">升級路徑</a>，可能需要先升級到特定版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<p>查看 apt 裡面 gitlab 可以安裝的版本號</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-cache madison gitlab-ce</span><br></pre></td></tr></table></figure>

<p>安裝特定版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install gitlab-ce=&lt;version&gt;</span><br></pre></td></tr></table></figure>

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://docs.gitlab.com/ee/update/">Upgrading Gitlab</a></li>
</ul>
]]></content>
      <categories>
        <category>🏗 Infra</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Database Sharding 概念</title>
    <url>/2022/database-sharding/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1544383835-bda2bc66a55d?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>筆記一下 Database Sharding 概念</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="為什麼需要-DB-Sharding"><a href="#為什麼需要-DB-Sharding" class="headerlink" title="為什麼需要 DB Sharding?"></a>為什麼需要 DB Sharding?</h2><p>在海量資料的儲存情境下，DB 的效能會受到影響，透過垂直擴充架構無法滿足，因此需要資料分片(shard)，以水平擴展的方式來提升效能。</p>
<h2 id="DB-水平擴展"><a href="#DB-水平擴展" class="headerlink" title="DB 水平擴展"></a>DB 水平擴展</h2><p>分為 Horizontal Partitioning 與 Sharding，前者是在同一資料庫中將 table 拆成數個小 table，後者是將 table 放到數個資料庫中。</p>
<p>Horizontal Partitioning 的 table 與 schema 可能會改變，而 Sharding 的 schema 則是相同，但分散在不同資料庫中。</p>
<img data-src="/2022/database-sharding/horizontal-scaling.png" class="">

<p>Sharding，右邊兩個 table 會儲存在不同的資料庫中</p>
<h2 id="Sharding-的方式"><a href="#Sharding-的方式" class="headerlink" title="Sharding 的方式"></a>Sharding 的方式</h2><p>常見的 Sharding 方式有以下：</p>
<ul>
<li>Range-based partitioning</li>
<li>Hash partitioning</li>
</ul>
<h2 id="Range-based-partitioning"><a href="#Range-based-partitioning" class="headerlink" title="Range-based partitioning"></a>Range-based partitioning</h2><img data-src="/2022/database-sharding/partitioning-range-based.png" class="">

<p>會根據某個 key 的範圍分區，key 的選擇非常重要，如果選擇不好，將會有分佈不均勻的問題，以上圖為例，年齡分為 0-30、30-40、&gt;40，將會個別存在於不同資料庫。</p>
<h2 id="Hash-partitioning"><a href="#Hash-partitioning" class="headerlink" title="Hash partitioning"></a>Hash partitioning</h2><img data-src="/2022/database-sharding/partitioning-hash.png" class="">

<p>將特定的 key (例如：id) 丟到 hash function 中，得出要存取的目標資料庫，hash function 必須確保資料在分區中均勻分佈。</p>
<h2 id="如何實現-Sharding"><a href="#如何實現-Sharding" class="headerlink" title="如何實現 Sharding?"></a>如何實現 Sharding?</h2><p>有兩種方式可以實現 Sharding：</p>
<ul>
<li>Client-side partitioning</li>
<li>Proxy-assisted partitioning</li>
</ul>
<h2 id="Client-side-partitioning"><a href="#Client-side-partitioning" class="headerlink" title="Client-side partitioning"></a>Client-side partitioning</h2><img data-src="/2022/database-sharding/implement-client-side.png" class="">

<p>Client-side 知道資料怎麼分區，直接選擇分區來讀寫資料。</p>
<p>優點：</p>
<ul>
<li>沒有中間層</li>
</ul>
<p>缺點：</p>
<ul>
<li>實現後分區數不容易更改，因為所有 Client-side 程式碼都需要做調整</li>
</ul>
<h2 id="Proxy-assisted-partitioning"><a href="#Proxy-assisted-partitioning" class="headerlink" title="Proxy-assisted partitioning"></a>Proxy-assisted partitioning</h2><img data-src="/2022/database-sharding/implement-proxy.png" class="">

<p>Client-side 不是直接調用分區，而是向 Proxy server 發出請求，Proxy server 根據分區的方式將請求轉發到正確的資料庫。</p>
<p>優點是 Client-side 不用知道任何關於 Sharding 的邏輯，並且可以比 Client-side partitioning 更容易地更改分區和數量。</p>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>對於海量數據的資料庫，Sharding 是一個很好的解決方案，有助於將負載從單個拆分到多個節點，但是，他也給應用程式增加了很多複雜性。</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://betterprogramming.pub/an-introduction-to-database-sharding-b6abde73d04f">An Introduction to Database Sharding</a></li>
<li><a href="https://oldmo860617.medium.com/%E7%AD%86%E8%A8%98-database-sharding-22e22f0809c0">【筆記】Database Sharding</a></li>
</ul>
]]></content>
      <categories>
        <category>🏗 Infra</category>
      </categories>
      <tags>
        <tag>Database</tag>
        <tag>學習筆記</tag>
        <tag>水平擃展</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS 個人生產力軟體 2022</title>
    <url>/2022/macos-personal-productivity-software/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1618005182384-a83a8bd57fbe?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>欽點一下個人在 MacOS 上常用的一些生產力軟體，其中包含一些付費軟體。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Hidden-Bar"><a href="#Hidden-Bar" class="headerlink" title="Hidden Bar"></a>Hidden Bar</h2><p>收合工具列</p>
<p><a href="https://apps.apple.com/tw/app/hidden-bar/id1452453066?mt=12">https://apps.apple.com/tw/app/hidden-bar/id1452453066?mt=12</a></p>
<img data-src="/2022/macos-personal-productivity-software/hidden-bar.png" class="">

<h2 id="Magnet"><a href="#Magnet" class="headerlink" title="Magnet"></a>Magnet</h2><blockquote>
<p>需付費，台幣 $270</p>
</blockquote>
<p>視窗排版</p>
<p><a href="https://apps.apple.com/tw/app/magnet/id441258766?mt=12">https://apps.apple.com/tw/app/magnet/id441258766?mt=12</a></p>
<img data-src="/2022/macos-personal-productivity-software/magnet.png" class="">

<h2 id="TimeMachineEditor"><a href="#TimeMachineEditor" class="headerlink" title="TimeMachineEditor"></a><strong>TimeMachineEditor</strong></h2><p>指定 TimeMachine 備份時間</p>
<p><a href="https://tclementdev.com/timemachineeditor/">https://tclementdev.com/timemachineeditor/</a></p>
<img data-src="/2022/macos-personal-productivity-software/time-machine-editor.png" class="">

<h2 id="AirBuddy"><a href="#AirBuddy" class="headerlink" title="AirBuddy"></a>AirBuddy</h2><blockquote>
<p>需付費，$9.99 鎂</p>
</blockquote>
<p>AirPods 進階管理工具，快捷鍵切換降噪&#x2F;通透非常方便</p>
<p><a href="https://v2.airbuddy.app/">https://v2.airbuddy.app/</a></p>
<img data-src="/2022/macos-personal-productivity-software/air-buddy.png" class="">

<h2 id="BetterTouchTool"><a href="#BetterTouchTool" class="headerlink" title="BetterTouchTool"></a>BetterTouchTool</h2><blockquote>
<p>需付費，$10 鎂(2年內可更新)、 $22 鎂(終生)</p>
</blockquote>
<p>自定義快捷鍵工具，可搭配 AirBuddy 實現切換 <code>降噪功能</code> 與 <code>音樂</code> 同時開關</p>
<p><a href="https://folivora.ai/">https://folivora.ai/</a></p>
<img data-src="/2022/macos-personal-productivity-software/better-touch-tool.png" class="">

<h2 id="Middle"><a href="#Middle" class="headerlink" title="Middle"></a>Middle</h2><blockquote>
<p>需付費，約 $10 鎂</p>
</blockquote>
<p>觸控板三指觸發中鍵點擊，習慣中鍵開新分頁&#x2F;關閉分頁</p>
<p><a href="https://middleclick.app/">https://middleclick.app/</a></p>
<img data-src="/2022/macos-personal-productivity-software/middle.png" class="">

<h2 id="SteerMouse"><a href="#SteerMouse" class="headerlink" title="SteerMouse"></a>SteerMouse</h2><blockquote>
<p>需付費， $19.99 鎂</p>
</blockquote>
<p>修正非原廠滑鼠滾動速度</p>
<p><a href="https://plentycom.jp/en/steermouse/">https://plentycom.jp/en/steermouse/</a></p>
<img data-src="/2022/macos-personal-productivity-software/steer-mouse.png" class="">

]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>【Python】 Module 與 Package 不應該拿來比較</title>
    <url>/2022/python-module-with-package/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1512314889357-e157c22f938d?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>網路上充斥著很多 <strong>Module and Package</strong> 的說明文章，會讓初學者誤以為這兩個是同層級的東西，但其實不是。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="什麼是-Module"><a href="#什麼是-Module" class="headerlink" title="什麼是 Module"></a>什麼是 Module</h2><p> 一個 py 檔，宣告的 Variable、Function、Class，可以被其他檔案引用。</p>
<p>post.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Post</span>:</span><br><span class="line">    <span class="comment"># 建構式</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.titles = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 新增文章</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_post</span>(<span class="params">self, title</span>):</span><br><span class="line">        self.titles.append(title)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 刪除文章</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_post</span>(<span class="params">self, title</span>):</span><br><span class="line">        self.titles.remove(title)</span><br></pre></td></tr></table></figure>

<p>about.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">readme = <span class="string">&quot;this is about.py&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#取得作者</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_author</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Logan&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#取得電子郵件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_email</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;iml885203@gmail.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>main.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Module</span></span><br><span class="line"><span class="keyword">from</span> post <span class="keyword">import</span> Post</span><br><span class="line"><span class="keyword">from</span> about <span class="keyword">import</span> (get_author, get_email)</span><br><span class="line"></span><br><span class="line">new_post = Post()</span><br><span class="line">new_post.add_post(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(new_post.titles) <span class="comment"># [&#x27;Hello World&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(get_author()) <span class="comment"># Logan</span></span><br><span class="line"><span class="built_in">print</span>(get_email()) <span class="comment"># iml885203@gmail.com</span></span><br></pre></td></tr></table></figure>

<p>也可以用 <code>from ... import *</code> 引用模組內的所有物件，但這這樣的寫法，可能會發生命名衝突而被覆寫(overwrite)的風險。</p>
<p>main.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Module</span></span><br><span class="line"><span class="keyword">from</span> about <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(readme) <span class="comment"># this is about.py</span></span><br><span class="line"><span class="built_in">print</span>(get_author()) <span class="comment"># Logan</span></span><br><span class="line"><span class="built_in">print</span>(get_email()) <span class="comment"># iml885203@gmail.com</span></span><br></pre></td></tr></table></figure>

<h2 id="Package-用法"><a href="#Package-用法" class="headerlink" title="Package 用法"></a>Package 用法</h2><p>當 Module 越來越多，需要將相似的 Module 組織為 Package，而 Package 就是一個容器(資料夾)，包含一個或多個 Module，並且擁有 <code>__init__.py</code> 的檔案。</p>
<p>嘗試將剛剛的兩個檔案打包成一個 Package，結構如下。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/</span></span><br><span class="line"><span class="string">├─</span> <span class="string">main.py</span></span><br><span class="line"><span class="string">└─</span> <span class="string">blog/</span></span><br><span class="line">   <span class="string">├──</span> <span class="string">__init__.py</span></span><br><span class="line">   <span class="string">├──</span> <span class="string">about.py</span></span><br><span class="line">   <span class="string">└──</span> <span class="string">post.py</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Package</span></span><br><span class="line"><span class="keyword">from</span> blog <span class="keyword">import</span> post</span><br><span class="line"><span class="keyword">from</span> blog <span class="keyword">import</span> about</span><br><span class="line"></span><br><span class="line">new_post = post.Post()</span><br><span class="line">new_post.add_post(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(new_post.titles) <span class="comment"># [&#x27;Hello World&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(about.readme) <span class="comment"># this is about.py</span></span><br><span class="line"><span class="built_in">print</span>(about.get_author()) <span class="comment"># Logan</span></span><br><span class="line"><span class="built_in">print</span>(about.get_email()) <span class="comment"># iml885203@gmail.com</span></span><br></pre></td></tr></table></figure>

<h2 id="Package-觀念"><a href="#Package-觀念" class="headerlink" title="Package 觀念"></a>Package 觀念</h2><p>從 <a href="https://docs.python.org/3/tutorial/modules.html#packages">官方文件</a> 來看，Package 是 Ｍodule 的一種用法。</p>
<blockquote>
<p>Package 是 Module 組織化的一種用法。</p>
</blockquote>
<p>透過 <code>type</code> 印出 Module 會是一個 module 的資料型態(data type)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="built_in">type</span>(random)</span><br><span class="line"><span class="comment"># &lt;class &#x27;module&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p>但是如果透過 <code>type</code> 印出 Package，他還是一個 Module</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> blog</span><br><span class="line"><span class="built_in">type</span>(blog)</span><br><span class="line"><span class="comment"># &lt;class &#x27;module&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Dir-function"><a href="#Dir-function" class="headerlink" title="Dir function"></a>Dir function</h2><p>Python 提供了一個 <code>dir</code> function，用來顯示物件的屬性(Attribute)與方法(Method)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> blog <span class="keyword">import</span> about</span><br><span class="line"><span class="built_in">dir</span>(about)</span><br><span class="line"><span class="comment"># [&#x27;__builtins__&#x27;, &#x27;__cached__&#x27;, &#x27;__doc__&#x27;, &#x27;__file__&#x27;, &#x27;__loader__&#x27;, &#x27;__name__&#x27;, &#x27;__package__&#x27;, &#x27;__spec__&#x27;, &#x27;get_author&#x27;, &#x27;get_email&#x27;, &#x27;readme&#x27;]</span></span><br></pre></td></tr></table></figure>

<h2 id="Import-的各種寫法"><a href="#Import-的各種寫法" class="headerlink" title="Import 的各種寫法"></a>Import 的各種寫法</h2><h3 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h3><p><code>import [module]</code></p>
<p>import 整個 random，可以使用 random 底下的 function</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="built_in">print</span>(random.randint(<span class="number">0</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure>

<p><code>from [module] import [name1, name2]</code></p>
<p>從 random 裡 import 其中的 function</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="built_in">print</span>(randint(<span class="number">0</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure>

<p><code>import [module] as [new_name]</code></p>
<p>把 random 重新命名為 rd</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> rd</span><br><span class="line"><span class="built_in">print</span>(rd.randint(<span class="number">0</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure>

<p><code>from [module] import *</code></p>
<p><strong>不推薦用法</strong>，import random 底下的東西，會有 Overwrite 風險</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="built_in">print</span>(randint(<span class="number">0</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>程式</tag>
        <tag>Python</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub Copilot 與 Tabnine 實戰心得</title>
    <url>/2022/github-copilot-vs-tabnine/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1519337718347-749509f114a8?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>自 GitHub Copilot 問世以來，也試用了一陣子，談一下我同時使用 GitHub Copilot 與 Tabnine(免費版) 在實際使用上的心得。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Tabnine-免費版"><a href="#Tabnine-免費版" class="headerlink" title="Tabnine (免費版)"></a>Tabnine (免費版)</h2><img data-src="/2022/github-copilot-vs-tabnine/tabnine.png" class="">

<p>Tabnine 是透過本地端訓練 AI 模型，偏向單句的程式碼補齊，在寫程式時常常有一些變數宣告、函數宣告需要重複寫的東西，Tabnine 就可以自動幫你補齊這些，用習慣後可以加速寫程式的速度。</p>
<h2 id="GitHub-Copilot"><a href="#GitHub-Copilot" class="headerlink" title="GitHub Copilot"></a>GitHub Copilot</h2>

<p>而 Github Copilot 是在雲端上做 AI 的模型訓練，比較專注於完整的程式碼補齊，只要打完 Funtion name 後面就交給 Copilot 處理，使用上會真的感覺到有一個「助手」在協助你寫程式，跟 Tabnine 比起來更擅長給人靈感啟發，真正可以幫助你減少思考程式碼的 Loading 。</p>
<h2 id="是否會繼續付費使用-GitHub-Copilot"><a href="#是否會繼續付費使用-GitHub-Copilot" class="headerlink" title="是否會繼續付費使用 GitHub Copilot"></a>是否會繼續付費使用 GitHub Copilot</h2><blockquote>
<p>暫時不會</p>
</blockquote>
<p>以目前價格來說 $10美金&#x2F;月，等於是一個月付 300 台幣養一個寫程式小助手，試用這 60 天，是真的有幫助到我寫程式的速度與思考，但是我的話還是會暫時停用看看，還是多比較看看沒有 Copilot 會差多少。</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://blog.darkthread.net/blog/github-copilot/">小試 Github Copilot</a></li>
<li><a href="https://baiyue.one/archives/1782.html">AI编程神器哪家强？Github Copilot vs Tabnine</a></li>
</ul>
]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>AI</tag>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>租屋打通任督二脈的智慧家庭</title>
    <url>/2022/rent-smart-home/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1488229297570-58520851e868?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>租屋比較困難的是不方便更換牆壁開關，但還是弄出很完整的智慧家庭。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="架構圖"><a href="#架構圖" class="headerlink" title="架構圖"></a>架構圖</h2><p>先附上一張裝置架構圖</p>
<img data-src="/2022/rent-smart-home/mind-map.png" class="">

<p>我有架設 HomeAssistant 為了要打通智慧裝置的任督二脈，後續才能做更多的自動化，自動化才是智慧家庭的精髓啊！</p>
<h2 id="燈具"><a href="#燈具" class="headerlink" title="燈具"></a>燈具</h2><p>燈具由簡單到困難的解決方案有幾種方式：</p>
<ol>
<li>外掛開關上的觸手系開關?<ul>
<li>👍 優點：用於傳統開關、安裝方便</li>
<li>👎 缺點：外掛有點醜、無法得知目前開關狀態(沒用過不確定)</li>
<li>代表產品：SwitchBot</li>
</ul>
</li>
<li>智慧燈泡 + 智慧開關<ul>
<li>👍 優點：不用動家中電路、可自己調色溫</li>
<li>👎 缺點：不能斷電、要封印傳統開關</li>
<li>代表產品：Yeelight 燈泡、Zigbee 米家智慧開關</li>
</ul>
</li>
<li>智慧牆壁開關<ul>
<li>👍 優點：更換牆壁開關即可</li>
<li>👎 缺點：須考慮家中電路有無中性線、是否會挑燈具等問題</li>
<li>代表產品：Aqara 牆壁開關</li>
</ul>
</li>
<li>繼電器開關<ul>
<li>👍 優點：可以傳統開關搭配</li>
<li>👎 缺點：不好安裝</li>
<li>代表產品：Shelly 2.5</li>
</ul>
</li>
</ol>
<p>因為租屋關係，不太方便換牆壁開關，換了之後要退租還要換回來，太麻煩了，所以就用 <code>智慧燈泡 + 智慧開關</code> ，缺點就是要封印傳統開關，並且在旁邊用 3M 無痕膠黏智慧開關。</p>
<img data-src="/2022/rent-smart-home/light-btn.jpg" class="">

<p>雖然感覺有點脫褲子放屁，但這是為了之後的自動化！</p>
<h2 id="紅外線遙控"><a href="#紅外線遙控" class="headerlink" title="紅外線遙控"></a>紅外線遙控</h2><p>用 Broadlink 學習風扇、電視、冷氣的控制碼去做控制。</p>
<h2 id="電力監控"><a href="#電力監控" class="headerlink" title="電力監控"></a>電力監控</h2><p>控制紅外線裝置最大問題就是不知道裝置到底有沒有開啟，所以用了 Kasa 電力監控去得知電視是否開啟，也可以用在洗衣機上判斷是否洗好衣服。</p>
<h2 id="門窗感應器"><a href="#門窗感應器" class="headerlink" title="門窗感應器"></a>門窗感應器</h2><p>除了裝在門上，也可以用在冷氣葉片上，就可以知道冷氣的開關狀態。</p>
<h2 id="溫濕度感測"><a href="#溫濕度感測" class="headerlink" title="溫濕度感測"></a>溫濕度感測</h2><img data-src="/2022/rent-smart-home/tuya.jpg" class="">

<p>Tuya 溫濕度，這個會顯示溫度數字，黏在牆壁上可即時知道現在溫濕度。</p>
<h2 id="公寓大門"><a href="#公寓大門" class="headerlink" title="公寓大門"></a>公寓大門</h2><p>Sonoff DC5V 接上公寓大門室內機，以後出門不用帶鑰匙。</p>
<h2 id="自製-NTP-時鐘"><a href="#自製-NTP-時鐘" class="headerlink" title="自製 NTP 時鐘"></a>自製 NTP 時鐘</h2><img data-src="/2022/rent-smart-home/ntp-clock.jpg" class="">

<p><a href="https://github.com/iml885203/7-Segment-Clock">7-Segment-Clock</a></p>
<p>市面上一直找不到可以 NTP 自動對時的時鐘，只好自己做一個…<br>用燈條做的可以控制顏色和亮度，晚上剛好可以充當小夜燈。</p>
<h2 id="智慧音響"><a href="#智慧音響" class="headerlink" title="智慧音響"></a>智慧音響</h2><p>以上裝置已經都整合進智慧家庭，要用語音控制需要一個智慧音響，我用的 Apple 裝置比較多，當然選擇 HomePod mini，平時為 AppleTV 的喇叭，有事就叫一下 Siri 幫我做事。</p>
<h2 id="Hyperion-與智慧燈條"><a href="#Hyperion-與智慧燈條" class="headerlink" title="Hyperion 與智慧燈條"></a>Hyperion 與智慧燈條</h2><p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2021%2Fmy-smart-home%2Ftv-ambient-lighting.gif?alt=media&token=6a3aff3a-b269-4393-9cbc-26ad181c3c9e"></p>
<p>根據電視邊緣畫面顯示對應顏色，追劇有感提升！</p>
<p>不確定這是否跟智慧家庭有關，但有智慧部分，應該扯得上邊吧XD</p>
<ul>
<li>樹莓派 裝 <a href="https://docs.hyperion-project.org/en/user/HyperBian.html">HyperBian</a></li>
<li>ESP 8266 裝 <a href="https://github.com/Aircoookie/WLED">WLED</a></li>
<li>LED 燈條</li>
<li>HDMI 擷取棒</li>
</ul>
<h2 id="智慧家庭的精髓-自動化"><a href="#智慧家庭的精髓-自動化" class="headerlink" title="智慧家庭的精髓 - 自動化"></a>智慧家庭的精髓 - 自動化</h2><p>把所有東西串接再一起，就是為了這一刻！</p>
<blockquote>
<p>💡 到家不用開燈，出門自己關燈</p>
</blockquote>
<p>燈具已經連網，在搭配 <a href="https://www.home-assistant.io/getting-started/presence-detection/">HomeAssistant 的存在偵測</a> (透過 GPS 或 WiFi) 、人體傳感器抓取戶外亮度，自動判斷開關燈，舒服！</p>
<blockquote>
<p>❄️ 冷氣不需定時，半夜切換風扇</p>
</blockquote>
<p>每天半夜固定時間關冷氣，並且切換成風扇，安穩睡過一天，舒服！</p>
<blockquote>
<p>👣 走出陽台自動開燈</p>
</blockquote>
<p>使用人體傳感器當有人出陽台自動開燈，門窗感應放陽台門，關門時關燈，舒服！</p>
<blockquote>
<p>💡 洗衣服提示</p>
</blockquote>
<p>電力監控洗衣機判斷衣服洗好，用 HomePod mini 提示音和客廳智慧燈泡提示燈，提醒衣服洗好了，舒服！</p>
<blockquote>
<p>💤 睡覺說晚安</p>
</blockquote>
<p>睡前躺在床上跟 Siri 說晚安，關閉電燈、關閉電腦、打開小夜燈，舒服！</p>
<h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p><a href="https://www.home-assistant.io/">HomeAssistant</a> 入門門檻很高，需要有一些軟硬體知識背景的才比較好上手，且需要後續的維護，比較浪費時間和精力，目前沒有快速建置智慧家庭的方式，根據各家中情境不一樣，解決方案也會不同，除非等之後 Matter 標準發布後看有沒有新一步的突破，想了解更多可以去看另一篇：</p>
<p><a href="/2022/smart-home-and-matter/">淺談智慧家庭與 Matter 新標準</a></p>
]]></content>
      <categories>
        <category>🏠 智慧家庭</category>
      </categories>
      <tags>
        <tag>智慧家庭</tag>
      </tags>
  </entry>
  <entry>
    <title>【Synology】安裝 Watchtower 自動更新 Docker Image</title>
    <url>/2022/synology-install-watchtower/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1533630018502-93824e440009?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在 DSM 裡面用 Docker 執行一些服務也一陣子了，一直以來都是固定每三個月手動更新 Docker 的 image 版本： <a href="/2021/synology-manual-update-docker-image">Synology手動更新Docker Image</a></p>
<p>後來發現一個自動升級 Image 的工具：<a href="https://github.com/containrrr/watchtower">Watchtower</a>，今天就來教學怎麼透過 <code>任務排程表</code> 安裝 Watchtower。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="安裝步驟"><a href="#安裝步驟" class="headerlink" title="安裝步驟"></a>安裝步驟</h2><ol>
<li><p>打開控制台</p>
</li>
<li><p>任務排程表 &gt; 新增 &gt; 排程任務 &gt; 使用者定義指令碼</p>
 <img data-src="/2022/synology-install-watchtower/step1.png" class="">
</li>
<li><p>一般：輸入名稱、選擇帳號 <code>root</code> 、取消勾選 <code>已啟用</code></p>
 <img data-src="/2022/synology-install-watchtower/step2.png" class="">
</li>
<li><p>排程：選擇 <code>在以下日期執行</code></p>
 <img data-src="/2022/synology-install-watchtower/step3.png" class="">
</li>
<li><p>任務設定：勾選 <code>透過電子郵件傳送執行細節</code> ，輸入你的電子郵件，等一下可以收信確認指令結果</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=watchtower \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">-e TZ=Asia/Taipei \</span><br><span class="line">--restart=always \</span><br><span class="line">containrrr/watchtower --cleanup</span><br></pre></td></tr></table></figure>

<img data-src="/2022/synology-install-watchtower/step4.png" class="">

<ol start="6">
<li><p>確定警告</p>
 <img data-src="/2022/synology-install-watchtower/step5.png" class="">
</li>
<li><p>手動執行腳本</p>
 <img data-src="/2022/synology-install-watchtower/step6.png" class="">
</li>
<li><p>打開 Docker ，確認成功</p>
 <img data-src="/2022/synology-install-watchtower/step7.png" class=""></li>
</ol>
<h2 id="指令說明"><a href="#指令說明" class="headerlink" title="指令說明"></a>指令說明</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=watchtower \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">-e TZ=Asia/Taipei \</span><br><span class="line">--restart=always \</span><br><span class="line">containrrr/watchtower --cleanup</span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>-e TZ=Asia/Taipei</code> : 設定時區，讓 log 顯示的時間為 Asia&#x2F;Taipei</p>
</li>
<li><p><code>--cleanup</code> : 更新時，自動刪除舊的 image ，不然會留很多舊的 image</p>
</li>
</ul>
<p>如果想要只監聽某些 container 可以在 <code>cleanup</code> 後面加上 container name</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=watchtower \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">-e TZ=Asia/Taipei \</span><br><span class="line">--restart=always \</span><br><span class="line">containrrr/watchtower --cleanup adguard bitwarden</span><br></pre></td></tr></table></figure>

<p>在 Watchtower 起來後，log 可以看到只檢查這幾個 container</p>
<img data-src="/2022/synology-install-watchtower/log.png" class="">

<p>想了解更多 Watchtower 指令可以看 <a href="https://containrrr.dev/watchtower/">官方文件</a> 。</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://www.jkg.tw/p3318/">Docker 全自動無人值守升級 WatchTower</a></li>
<li><a href="https://mariushosting.com/synology-30-second-watchtower-install-using-task-scheduler-docker/">Synology: 30 Second Watchtower Install Using Task Scheduler &amp; Docker</a></li>
</ul>
]]></content>
      <categories>
        <category>💾 Synology</category>
      </categories>
      <tags>
        <tag>維護</tag>
        <tag>Synology</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Cordova 與 InAppBrowser 之間分享資料</title>
    <url>/2022/share-data-between-cordova-and-inappbrowser/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1585282263861-f55e341878f8?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>Cordova 是一個 Hybrid App 可以使用 <a href="https://github.com/apache/cordova-plugin-inappbrowser">InAppBrowser</a> 去打開一個網頁，但是他們之間要怎麼共享資料？</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Cordova-架構"><a href="#Cordova-架構" class="headerlink" title="Cordova 架構"></a>Cordova 架構</h2><img data-src="/2022/share-data-between-cordova-and-inappbrowser/cordova.png" class="">

<p>Cordova 有很多 Plugin 可以安裝，其中一個就是 <a href="https://github.com/apache/cordova-plugin-inappbrowser">InAppBrowser</a>，可以開啟遠端的網頁，但是透過這網頁是無法直接使用其他 Plugin 的功能，像是 Camera、Push Notification，需要先讓 Cordova 和 InAppBrowser 之間可以互相溝通分享資料。</p>
<h2 id="了解-InAppBrowser"><a href="#了解-InAppBrowser" class="headerlink" title="了解 InAppBrowser"></a>了解 InAppBrowser</h2><p>再開始之前，讓我們來了解一下 InAppBrowser ，InAppBrowser 允許在 App 內打開的網頁，而不用離開 App，如果不是用 InAppBrowser打開的網頁，則將會用默認的瀏覽器打開。</p>
<p>打開網頁非常簡單，安裝 InAppBrowser 之後只要只用 <code>window.open</code> 。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> win = <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;http://google.com&quot;</span>, <span class="string">&quot;_blank&quot;</span>, <span class="string">&quot;location=yes&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>InAppBrowser 不支援 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage">postMessage</a>，但有4個事件可以使用：</p>
<ul>
<li>loadstart – 當 InAppBrowser 開始加載 URL 時觸發事件。</li>
<li>loadstop – 當 InAppBrowser 完成加載 URL 時觸發事件。</li>
<li>loaderror – 當 InAppBrowser 在加載 URL 時遇到錯誤時觸發事件。</li>
<li>exit – InAppBrowser 窗口關閉時觸發事件。</li>
</ul>
<h2 id="executeScript"><a href="#executeScript" class="headerlink" title="executeScript"></a>executeScript</h2><p>InAppBrowser 有一個 <a href="https://github.com/apache/cordova-plugin-inappbrowser#inappbrowserexecutescript">executeScript</a> function，可以在 InAppBrowser 上直接執行 Javascript，並且可以取得結果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> win = <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;http://google.com&quot;</span>, <span class="string">&quot;_blank&quot;</span>, <span class="string">&quot;location=yes&quot;</span>);</span><br><span class="line">win.<span class="title function_">addEventListener</span>(<span class="string">&quot;loadstop&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//code goes here</span></span><br><span class="line">  win.<span class="title function_">executeScript</span>(&#123; <span class="attr">code</span>: <span class="string">&quot;localStorage.setItem(&#x27;name&#x27;, &#x27;Test&#x27;)&quot;</span> &#125;);</span><br><span class="line">  win.<span class="title function_">executeScript</span>(&#123; <span class="attr">code</span>: <span class="string">&quot;localStorage.getItem(&#x27;name&#x27;)&quot;</span> &#125;, <span class="function">(<span class="params">[val]</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(val);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><strong>Cordova 傳遞資料給 InAppBrowser</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> myName = <span class="string">&#x27;John&#x27;</span>;</span><br><span class="line">win.<span class="title function_">executeScript</span>(&#123; <span class="attr">code</span>: <span class="string">`localStorage.setItem(&#x27;name&#x27;, &#x27;<span class="subst">$&#123;myName&#125;</span>&#x27;)`</span> &#125;);</span><br></pre></td></tr></table></figure>

<p><strong>InAppBrowser 傳遞資料給 Cordova</strong></p>
<p>由於 InAppBrowser 內沒有任何方法可以直接送資料給 Cordova，但可以透過創一個定期執行的函數，此函數將從 InAppBrowser 的 LocalStorage 中獲取資料。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> name;</span><br><span class="line"><span class="keyword">let</span> nameInterval;</span><br><span class="line"><span class="keyword">let</span> win = <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;http://google.com&quot;</span>, <span class="string">&quot;_blank&quot;</span>, <span class="string">&quot;location=yes&quot;</span>);</span><br><span class="line"></span><br><span class="line">win.<span class="title function_">addEventListener</span>(<span class="string">&quot;loadstop&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  nameInterval = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    win.<span class="title function_">executeScript</span>(&#123; <span class="attr">code</span>: <span class="string">&quot;localStorage.getItem(&#x27;name&#x27;)&quot;</span> &#125;, <span class="function">(<span class="params">[val]</span>) =&gt;</span> &#123;</span><br><span class="line">      name = val;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, <span class="number">100</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">win.<span class="title function_">addEventListener</span>(<span class="string">&quot;exit&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">clearInterval</span>(nameInterval);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>這樣在 InAppBrowser 內就能透過 LocalStorage 傳資料給 Cordova</p>
<h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>為方便使用，可以將這方法實作成一個 EventBus 去處理兩方之間大量資料的溝通。</p>
<blockquote>
<p>以下為範例用法，而非實際功能實作。</p>
</blockquote>
<h3 id="Cordova-→-InAppBrowser"><a href="#Cordova-→-InAppBrowser" class="headerlink" title="Cordova → InAppBrowser"></a>Cordova → InAppBrowser</h3><p>Cordova端</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">bus.<span class="title function_">emit</span>(<span class="string">&#x27;show-alert&#x27;</span>, <span class="string">&#x27;Hello World.&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>InAppBrowser端</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">bus.<span class="title function_">on</span>(<span class="string">&#x27;show-alert&#x27;</span>, <span class="function">(<span class="params">text</span>) =&gt;</span> <span class="title function_">alert</span>(text));</span><br></pre></td></tr></table></figure>

<h3 id="InAppBrowser-→-Cordova"><a href="#InAppBrowser-→-Cordova" class="headerlink" title="InAppBrowser → Cordova"></a>InAppBrowser → Cordova</h3><p>搭配 <code>PushNotification</code> 的plugin: <a href="https://github.com/andrehtissot/cordova-plugin-fcm-with-dependecy-updated">cordova-plugin-fcm-with-dependecy-updated</a></p>
<p>Cordova端</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">bus.<span class="title function_">on</span>(<span class="string">&#x27;fcb-subscribe-topic&#x27;</span>, <span class="function">(<span class="params">topic</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable constant_">FCM</span>.<span class="title function_">subscribeToTopic</span>(topic)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>InAppBrowser端</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">bus.<span class="title function_">emit</span>(<span class="string">&#x27;fcb-subscribe-topic&#x27;</span>, <span class="string">&#x27;vip&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://dbwriteups.wordpress.com/2016/01/24/sharing-data-between-hybrid-app-and-inapp-browser/">Sharing Data between Hybrid App and InAppBrowser</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>Cordova</tag>
        <tag>Hybrid App</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】心路歷程 - 打造屬於自己的 Blog</title>
    <url>/2022/build-my-hexo/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/uploads/14122810486321888a497/1b0cc699?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>我知道網路上的 Hexo 教學文章超級無敵爆炸多！<br>雖然有用 Git 紀錄每一次的更動，但這邊還是想要紀錄一下我設定 Hexo 的一些想法，給以後的自己看。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="主題選擇"><a href="#主題選擇" class="headerlink" title="主題選擇"></a>主題選擇</h2><p><a href="https://hexo.io/zh-tw/">Hexo</a> 最常見的主題為 <a href="https://theme-next.js.org/">Next</a>，資源最多需要踩雷當然也減少，所以我也是選擇這樣組合，另外還有些主題也不錯功能蠻多的：</p>
<ul>
<li><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></li>
</ul>
<h2 id="Hexo-設定"><a href="#Hexo-設定" class="headerlink" title="Hexo 設定"></a>Hexo 設定</h2><blockquote>
<p>以下設定沒特別說明將會是 <code>_config.yml</code> Hexo 設定檔案。</p>
</blockquote>
<h3 id="語系"><a href="#語系" class="headerlink" title="語系"></a>語系</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-TW</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Taipei&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="Permalink-與-Post-檔案分類原則"><a href="#Permalink-與-Post-檔案分類原則" class="headerlink" title="Permalink 與 Post 檔案分類原則"></a>Permalink 與 Post 檔案分類原則</h3><p>Permalink 預設非常的長，為了簡化網址需要調整一下。</p>
<p>文章按照年份去分類，像是 <code>source/_posts/2022/vscode-plugins.md</code> ，由於文章已經有資料夾，而資料夾也會顯示在網址上， Permalink 就不需要有 <code>year</code> 了，只要設定為：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:title/</span></span><br></pre></td></tr></table></figure>

<h3 id="分類與標籤"><a href="#分類與標籤" class="headerlink" title="分類與標籤"></a>分類與標籤</h3><p><code>category_map</code> 和 <code>tag_map</code> 會對應網址連結，沒特別設定會有變中文網址，對 seo 不太友善</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">category_map:</span></span><br><span class="line">  <span class="string">🌐</span> <span class="string">網路:</span> <span class="string">network</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line">  <span class="attr">Home Assistant:</span> <span class="string">home-assistant</span></span><br></pre></td></tr></table></figure>

<h2 id="Hexo-Plugin"><a href="#Hexo-Plugin" class="headerlink" title="Hexo Plugin"></a>Hexo Plugin</h2><h3 id="Sitemap"><a href="#Sitemap" class="headerlink" title="Sitemap"></a>Sitemap</h3><p><a href="https://github.com/ludoviclefevre/hexo-generator-seo-friendly-sitemap">https://github.com/ludoviclefevre/hexo-generator-seo-friendly-sitemap</a></p>
<p>產生 Sitemap，記得上傳到 Google Search Console</p>
<h3 id="SearchDB-網站搜尋功能"><a href="#SearchDB-網站搜尋功能" class="headerlink" title="SearchDB - 網站搜尋功能"></a>SearchDB - 網站搜尋功能</h3><p><a href="https://github.com/next-theme/hexo-generator-searchdb">https://github.com/next-theme/hexo-generator-searchdb</a></p>
<p>網站搜尋功能</p>
<p>Next 選單打開 search 連結 <code>_config.next.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Optimize-優化-js-css"><a href="#Optimize-優化-js-css" class="headerlink" title="Optimize - 優化 js, css"></a>Optimize - 優化 js, css</h3><p><a href="https://github.com/next-theme/hexo-optimize">https://github.com/next-theme/hexo-optimize</a></p>
<p>預設 js 和 css 都不會處理過，優化一下加快速度和 seo</p>
<h3 id="Related-Posts-相關文章"><a href="#Related-Posts-相關文章" class="headerlink" title="Related Posts - 相關文章"></a>Related Posts - 相關文章</h3><p><a href="https://github.com/sergeyzwezdin/hexo-related-posts">https://github.com/sergeyzwezdin/hexo-related-posts</a></p>
<p>由 Next 推薦的 plugin，顯示設定都預設在 Next 設定檔內了</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Related popular posts</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/sergeyzwezdin/hexo-related-posts</span></span><br><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">title:</span> <span class="comment"># Custom header, leave empty to use the default one</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>但是 Next 顯示的連結有問題，且會顯示日期、標題、預覽，顯示太多資訊，所以改為自訂義顯示</p>
<p><code>_config.next.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">postBodyEnd:</span> <span class="string">source/_data/post-body-end.njk</span></span><br><span class="line"></span><br><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># custom show on post-body-end.njk</span></span><br></pre></td></tr></table></figure>

<p><code>source/_data/post-body-end.njk</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;# 顯示相關文章 #&#125;</span><br><span class="line">&#123;# 編輯於：_partials/post/post-related.njk #&#125;</span><br><span class="line">&#123;%- if page.related_posts and page.related_posts.length &gt; 0 %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;popular-posts-header&quot;</span>&gt;</span>&#123;&#123; theme.related_posts.title or __(&#x27;post.related_posts&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;popular-posts&quot;</span>&gt;</span></span><br><span class="line">&#123;%- for path in page.related_posts %&#125;</span><br><span class="line">    &#123;%- set popular_post = site.posts.findOne(&#123; path: path &#125;) %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;popular-posts-item&quot;</span>&gt;</span></span><br><span class="line">    &#123;# &#123;%- if popular_post.date %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;popular-posts-date&quot;</span>&gt;</span>&#123;&#123; date(popular_post.date) &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;%- endif %&#125; #&#125;</span><br><span class="line">    &#123;# &#123;%- if popular_post.img %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;popular-posts-img&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; popular_post.img &#125;&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&#123;&#123; popular_post.title &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;%- endif %&#125; #&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;popular-posts-title&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&#123;&#123; popular_post.path &#125;&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;bookmark&quot;</span>&gt;</span>&#123;&#123; popular_post.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;# &#123;%- if popular_post.excerpt and popular_post.excerpt != &#x27;&#x27; %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;popular-posts-excerpt&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; popular_post.excerpt &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;%- endif %&#125; #&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;%- endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Pin-Top-置頂文章"><a href="#Pin-Top-置頂文章" class="headerlink" title="Pin Top 置頂文章"></a>Pin Top 置頂文章</h3><p><a href="https://github.com/netcan/hexo-generator-index-pin-top">https://github.com/netcan/hexo-generator-index-pin-top</a></p>
<p>移除原本的 index 套件，安裝 pin top 套件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">yarn remove hexo-generator-index</span><br><span class="line">yarn add hexo-generator-index-pin-top</span><br></pre></td></tr></table></figure>

<p>在文章上方加上 <code>top</code> ，順序以降序排序，也可以都設為 true，將以日期排序</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 🏡 My Smart Home</span><br><span class="line">date: 2021-12-04 16:20:00</span><br><span class="line">categories: 🏠 智慧家庭</span><br><span class="line">tags: [智慧家庭]</span><br><span class="line"><span class="section">top: 2</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<p><strong>Next 主題顯示置頂</strong></p>
<img data-src="/2022/build-my-hexo/plugin-pin-top.png" class="">

<p>於 <code>_config.next.yml</code> 打開 custom_file_path 的 postMeta：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">  postMeta: source/_data/post-meta.njk</span><br></pre></td></tr></table></figure>

<p><code>source/_data/post-meta.njk</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;%- if post.top %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-top-bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-top&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-thumbtack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p><code>source/_data/styles.styl</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Post Top</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-meta-top-bg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">50px</span> solid <span class="built_in">var</span>(--theme-color);</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-meta-top</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--brand-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Next-主題"><a href="#Next-主題" class="headerlink" title="Next 主題"></a>Next 主題</h2><p>主要以提升使用者體驗為主，為了畫面簡潔我會移除一些我認為使用者不需要知道的資訊。</p>
<blockquote>
<p>以下設定沒特別說明將會是 <code>_config.next.yml</code> 主題設定檔案。</p>
</blockquote>
<h3 id="關閉-Site-State"><a href="#關閉-Site-State" class="headerlink" title="關閉 Site State"></a>關閉 Site State</h3><img data-src="/2022/build-my-hexo/site-state.png" class="">

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">site_state:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="顯示-License"><a href="#顯示-License" class="headerlink" title="顯示 License"></a>顯示 License</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="歸檔-archives-其實是文章列表"><a href="#歸檔-archives-其實是文章列表" class="headerlink" title="歸檔(archives)其實是文章列表"></a>歸檔(archives)其實是文章列表</h3><p>歸檔頁面就是照年份列出所有文章，很多用 hexo 建置都會有這頁，但根本看不懂這頁的用途，沒有使用者會想要點 <code>歸檔</code> 頁面，所以我將其改名為 <code>文章列表</code> 。</p>
<p>更改 icon，調整順序第2個</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-list</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br></pre></td></tr></table></figure>

<p>設定語系檔案 <code>source/_data/languages.yml</code></p>
<p><a href="https://theme-next.js.org/docs/theme-settings/internationalization.html">https://theme-next.js.org/docs/theme-settings/internationalization.html</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># node_modules/hexo-theme-next/languages/zh-TW.yml</span></span><br><span class="line"><span class="attr">zh-TW:</span></span><br><span class="line">  <span class="attr">title:</span></span><br><span class="line">    <span class="attr">archive:</span> <span class="string">文章列表</span></span><br><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="attr">archives:</span> <span class="string">文章列表</span></span><br></pre></td></tr></table></figure>

<h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>設定年份、開啟動畫(跳動)、關閉強力驅動</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2022</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="主題色"><a href="#主題色" class="headerlink" title="主題色"></a>主題色</h3><p>#1CAE9F</p>
<p><strong>Theme Color</strong></p>
<p>會更改 header 背景的顏色和 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color">theme-color</a> 的 meta tag</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Browser header panel color.</span></span><br><span class="line"><span class="attr">theme_color:</span></span><br><span class="line">  <span class="attr">light:</span> <span class="string">&quot;#1CAE9F&quot;</span></span><br><span class="line">  <span class="attr">dark:</span> <span class="string">&quot;#1CAE9F&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>Footer icon color</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#1CAE9F&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>Sidebar color</strong></p>
<img data-src="/2022/build-my-hexo/sidebar-color.png" class="">

<p>這個沒有參數可以改，要用 <a href="https://theme-next.js.org/docs/advanced-settings/custom-files.html?highlight=variable">Custom Files</a> 去更改</p>
<p><code>source/_data/variables.styl</code></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$primary</span> = <span class="selector-id">#1CAE9F</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * overwrite theme variables</span></span><br><span class="line"><span class="comment"> * @see node_modules/hexo-theme-next/source/css/_variables/Pisces.styl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// Sidebar</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="variable">$sidebar-nav-hover-color</span> = <span class="variable">$primary</span></span><br><span class="line"><span class="variable">$sidebar-highlight</span> = <span class="variable">$primary</span></span><br></pre></td></tr></table></figure>

<h3 id="文章-Meta"><a href="#文章-Meta" class="headerlink" title="文章 Meta"></a>文章 Meta</h3><p>顯示於文章下方的資訊，關閉更新時間</p>
<img data-src="/2022/build-my-hexo/post-meta.png" class="">

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">updated_at:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="文字置左"><a href="#文字置左" class="headerlink" title="文字置左"></a>文字置左</h3><p>預設 <code>justify</code> 常常會出現奇怪的排版</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">text_align:</span></span><br><span class="line">  <span class="attr">desktop:</span> <span class="string">left</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="string">left</span></span><br></pre></td></tr></table></figure>

<h3 id="Mobile-畫面間距"><a href="#Mobile-畫面間距" class="headerlink" title="Mobile 畫面間距"></a>Mobile 畫面間距</h3><p>減少文章顯示的左右間距</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reduce padding / margin indents on devices with narrow width.</span></span><br><span class="line"><span class="attr">mobile_layout_economy:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Codeblock"><a href="#Codeblock" class="headerlink" title="Codeblock"></a>Codeblock</h3><p>還是習慣使用 <code>onedark</code> 的樣式，Hexo 那邊有可選擇用 <code>highlight</code> 或是 <code>prismjs</code> 渲染</p>
<blockquote>
<p>渲染選擇 highlight</p>
</blockquote>
<p>prismjs 會讓字體變大成 18px，而且不能使用 Next 的 mac style</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">base16/onedark</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">base16/onedark</span></span><br><span class="line">  <span class="attr">prism:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">prism</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">mac</span></span><br></pre></td></tr></table></figure>

<h3 id="顯示滾動百分比顯示在-back2top-上"><a href="#顯示滾動百分比顯示在-back2top-上" class="headerlink" title="顯示滾動百分比顯示在 back2top 上"></a>顯示滾動百分比顯示在 back2top 上</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="圖片預覽-Fancybox"><a href="#圖片預覽-Fancybox" class="headerlink" title="圖片預覽 - Fancybox"></a>圖片預覽 - Fancybox</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="留言功能選擇-disques"><a href="#留言功能選擇-disques" class="headerlink" title="留言功能選擇 - disques"></a>留言功能選擇 - disques</h3><ul>
<li>Disqus<ul>
<li>登入選擇多 FB&#x2F;Google</li>
<li>版面雜亂</li>
</ul>
</li>
<li><strong><a href="https://github.com/gitalk/gitalk">Gitalk</a></strong><ul>
<li>需要登入 Github，綁定 Github issue</li>
<li>畫面簡潔，功能方便，但要由權限過多</li>
</ul>
</li>
<li><strong><a href="https://github.com/utterance/utterances">utterances</a></strong><ul>
<li>需要登入 Github，綁定 Github issue</li>
<li>畫面簡潔，適合單純的留言</li>
</ul>
</li>
</ul>
<p>我選擇登入選擇多的 Disqus</p>
<h3 id="關閉動畫"><a href="#關閉動畫" class="headerlink" title="關閉動畫"></a>關閉動畫</h3><p>動畫會增加從進來網站到看到文章的時間，Next 無法調整動畫順序和時間，所以乾脆關掉</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">motion:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="載入進度條"><a href="#載入進度條" class="headerlink" title="載入進度條"></a>載入進度條</h3><p>載入時網頁上方顯示的進度條</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">black</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">flash</span></span><br></pre></td></tr></table></figure>

<h3 id="CDN-設定"><a href="#CDN-設定" class="headerlink" title="CDN 設定"></a>CDN 設定</h3><p>啟用 CDN 載入一些第三方套件，會加快很多</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="attr">internal:</span> <span class="string">cdnjs</span></span><br></pre></td></tr></table></figure>

<h3 id="預載入-優化-SEO-LCP"><a href="#預載入-優化-SEO-LCP" class="headerlink" title="預載入 - 優化 SEO LCP"></a>預載入 - 優化 SEO LCP</h3><p>加入 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preconnect">preconnect</a> 加速第三方資源載入</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Preconnect CDN for fonts and plugins.</span></span><br><span class="line"><span class="comment"># For more information: https://www.w3.org/TR/resource-hints/#preconnect</span></span><br><span class="line"><span class="attr">preconnect:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>常常用圖片來源 unsplash 也加進去</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">head:</span> <span class="string">source/_data/</span></span><br></pre></td></tr></table></figure>

<p><code>source/_data/head.njk</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;# SEO #&#125;</span><br><span class="line">&#123;# improve LCP(Largest Contentful Paint) #&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preconnect&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://images.unsplash.com&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="動態背景"><a href="#動態背景" class="headerlink" title="動態背景"></a>動態背景</h3><p><a href="https://github.com/hustcc/canvas-nest.js">canvas-nest.js</a> 自 v8.0.0 後就因為 <a href="https://github.com/next-theme/hexo-theme-next/commit/632768cc1f320ec5eafbb814eb378ca8ad88324f#commitcomment-71302165">太消耗 CPU</a> 被移除了，可以手動在 <code>footer.njk</code> 加入</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.njk</span></span><br></pre></td></tr></table></figure>

<p><code>source/_data/footer.njk</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;# canvas-nest #&#125;</span><br><span class="line">&#123;# https://github.com/theme-next/theme-next-canvas-nest #&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">color</span>=<span class="string">&quot;34,34,34&quot;</span> <span class="attr">opacity</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">count</span>=<span class="string">&quot;99&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/canvas-nest.js/1.0.1/canvas-nest.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>或者是使用新的 <a href="https://github.com/hustcc/ribbon.js">ribbon.js</a> ，但是預設會有 <code>點擊更換背景</code> 的奇怪功能，還是需要手動引入把這功能取消掉，Next 的設定則不需要打開</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p><code>source/_data/footer.njk</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;# ribbon.js without click #&#125;</span><br><span class="line">&#123;# https://github.com/hustcc/ribbon.js #&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">removeRibbonClick</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">onclick</span> = <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">ontouchstart</span> = <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">size</span>=<span class="string">&quot;150&quot;</span> <span class="attr">alpha</span>=<span class="string">&#x27;0.4&#x27;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/ribbon.js/1.0.2/ribbon.min.js&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;removeRibbonClick()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Next-客製化調整"><a href="#Next-客製化調整" class="headerlink" title="Next 客製化調整"></a>Next 客製化調整</h2><h3 id="Global-PaddingTop-圓角…"><a href="#Global-PaddingTop-圓角…" class="headerlink" title="Global - PaddingTop, 圓角…"></a>Global - PaddingTop, 圓角…</h3><p>因應圓角設計，上方增加間距</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// padding-top for main</span></span><br><span class="line">+<span class="built_in">desktop</span>() &#123;</span><br><span class="line">  <span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">12px</span>; <span class="comment">// same as sidebar margin-top</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>預設太過方正，增加圓角讓畫面更加舒服<br>延伸閱讀： <a href="https://hching-lin.medium.com/ui-ux-%E4%B8%8B%E6%AC%A1%E4%B8%BB%E7%AE%A1%E5%95%8F%E4%BD%A0%E7%82%BA%E4%BB%80%E9%BA%BC-ui-%E8%A6%81%E7%94%A8%E5%9C%93%E8%A7%92%E7%9A%84%E6%99%82%E5%80%99-a5bf52cfdc1c">UI&#x2F;UX｜下次主管問你為什麼 UI 要用圓角的時候</a></p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// rounded corners</span></span><br><span class="line">+<span class="selector-tag">desktop</span>() &#123;</span><br><span class="line">  <span class="selector-class">.header-inner</span>, <span class="selector-class">.sidebar-inner</span>, <span class="selector-class">.post-block</span>, <span class="selector-class">.comments</span>, <span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>移除最上方的 headband</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// remove headband</span></span><br><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>mobile 顯示 subtitle 時會讓 header 看起來過高，所以隱藏讓版面看起來更舒服</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// hide subtitle for mobile</span></span><br><span class="line">+<span class="selector-tag">tablet-mobile</span>() &#123;</span><br><span class="line">  <span class="selector-class">.site-subtitle</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="列表-Archive-Page-隱藏-繼續努力-Keep-on-posting"><a href="#列表-Archive-Page-隱藏-繼續努力-Keep-on-posting" class="headerlink" title="列表(Archive Page) 隱藏 繼續努力(Keep on posting)"></a>列表(Archive Page) 隱藏 繼續努力(Keep on posting)</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hide &quot;Keep on posting&quot;</span></span><br><span class="line"><span class="selector-class">.archive</span> <span class="selector-class">.collection-title</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="文章頁面-Post-Page-h3-不要顯示底線"><a href="#文章頁面-Post-Page-h3-不要顯示底線" class="headerlink" title="文章頁面(Post Page) h3 不要顯示底線"></a>文章頁面(Post Page) h3 不要顯示底線</h3><p>h1 過多會影響SEO，我的內文子標題通常是用 h2 和 h3，但是預設 h3 會有底線，不太好辨識是 h2 還是 h3，所以把 h3 的底線隱藏</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://blog.kyomind.tw/hexo-blog-reply/">Hexo 新增 utterances 留言板與方案選擇思路</a></li>
<li><a href="https://hching-lin.medium.com/ui-ux-%E4%B8%8B%E6%AC%A1%E4%B8%BB%E7%AE%A1%E5%95%8F%E4%BD%A0%E7%82%BA%E4%BB%80%E9%BA%BC-ui-%E8%A6%81%E7%94%A8%E5%9C%93%E8%A7%92%E7%9A%84%E6%99%82%E5%80%99-a5bf52cfdc1c">UI&#x2F;UX｜下次主管問你為什麼 UI 要用圓角的時候</a></li>
<li><a href="https://theme-next.js.org/docs/advanced-settings/custom-files.html?highlight=hide+keep#Hide-quot-Keep-on-posting-quot-in-Archive-Page">Hide “Keep on posting” in Archive Page</a></li>
</ul>
]]></content>
      <categories>
        <category>📖 Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Imgur</tag>
        <tag>Firebase</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】圖片免費空間的抉擇</title>
    <url>/2022/hexo-free-storage/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1636390785258-f59cd6883a03?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>Hexo 雖然可以直接使用 <a href="https://hexo.io/zh-tw/docs/asset-folders.html">asset image</a> 去直接引入圖片，但是 Github Pages 有<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#:~:text=Published%20GitHub%20Pages%20sites%20may%20be%20no%20larger%20than%201%20GB">限制專案大小 1GB</a>，而且透過 Github Pages 載入圖片的速度沒有很快。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Imgur"><a href="#Imgur" class="headerlink" title="Imgur"></a>Imgur</h2><p>imgur 是一個很好用的免費空間，而且支援很多套件可以直接在編輯器<a href="https://marketplace.visualstudio.com/items?itemName=MaxfieldWalker.vscode-imgur">上傳到 imgur</a> ，非常方便，而且本身沒有任何流量限制。</p>
<p>但是 imgur 除了方便之外，上傳的圖片是沒有任何保障，可能會因為他的機制，像是太久沒人訪問，而被 imgur 刪除。</p>
<h2 id="Firebase-Storage"><a href="#Firebase-Storage" class="headerlink" title="Firebase Storage"></a>Firebase Storage</h2><p>Firebase Storage 有免費的使用空間，但會有一些限制</p>
<ul>
<li>空間: 1G</li>
<li>流量限制: 每月 10G</li>
<li>文件讀取: 每天 50,000個</li>
</ul>
<p>這個限制以一個小部落格是相當足夠的，能超過這限制代表你的網站有一定的流量了，可以考慮付費。</p>
<h2 id="載入速度"><a href="#載入速度" class="headerlink" title="載入速度"></a>載入速度</h2><p>前面說 imgur 很方便但沒保障之外，還有一個缺點，就是圖片載入沒有比 Github Pages 快多少。</p>
<p>稍微用 ab 來測試一下 <code>ab -n 10 -c 5 &#123;url&#125;</code></p>
<img data-src="/2022/hexo-free-storage/abtest.png" class="">

<ul>
<li>Github Pages: 7.3s</li>
<li>Imgur: 13.5s 😢</li>
<li>Firebase storage: 5.4s 👑</li>
</ul>
<p>很明顯是 Firebase storage 略勝一點，另外有做個體感測試，在 Chrome 用 <code>cmd + shift + r</code> 避免快取的方式開圖去測試，體感上也是 Firebase storage 比較快一點。</p>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>免費空間都各有優缺點，如果使用 imgur 載入速度沒有變快且圖片沒保障，我還是暫時以 Github Pages 為主，畢竟要把 1G 用光還是需要一陣子。</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://israynotarray.com/hexo/20201012/473855281/">(29) 試著學 Hexo - 奇淫技巧 - 快速上傳你的圖片到 imgur</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10241647">(9) 試著學 Hexo - 圖片空間的挑選</a></li>
<li><a href="https://echocarrie.com/hexo/20220615/2433171521/">Hexo 使用 Firebase 當圖片空間操作方式</a></li>
<li><a href="https://firebase.google.com/docs/firestore/quotas">Firebase Storage 使用和限制</a></li>
</ul>
]]></content>
      <categories>
        <category>📖 Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Imgur</tag>
        <tag>Firebase</tag>
      </tags>
  </entry>
  <entry>
    <title>淺談智慧家庭與 Matter 新標準</title>
    <url>/2022/smart-home-and-matter/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1519558260268-cde7e03a0152?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>市面上所謂的「智慧」家庭裝置，其實都很「智障」。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="理想中的智慧家庭"><a href="#理想中的智慧家庭" class="headerlink" title="理想中的智慧家庭"></a>理想中的智慧家庭</h2><blockquote>
<p>一到家自動打開電燈、窗簾、播放音樂。</p>
</blockquote>
<p>「黑鏡」的影集中，充滿了智慧家庭的理想畫面，而在物聯網發展到現在現實中有辦法實現這樣的理想畫面嗎？</p>
<p>答案是 <strong>可以，但沒那麼簡單。</strong></p>
<h2 id="生態圈破碎，三國鼎立"><a href="#生態圈破碎，三國鼎立" class="headerlink" title="生態圈破碎，三國鼎立"></a>生態圈破碎，三國鼎立</h2><img data-src="/2022/smart-home-and-matter/stupid-home.jpeg" class="">

<p>目前智慧家庭各個品牌都有著各自的生態圈，他們無法互相串接控制。</p>
<p>比如我買了 Aqara 的「智慧」按鈕，卻不能控制 Yeelight 的「智慧」燈泡，或是控制之前很紅的 SwitchBot 去關閉我的電燈。</p>
<p>我一定要透過手機去控制這些裝置，而且智障的是他們都在不同的 App，而且很容易因為延遲時間造成焦慮，到頭來比原本走過去關燈還浪費時間…</p>
<p>目前有幾個比較大的生態圈有如三國鼎立各自為政，像是 <a href="https://buy.mi.com/tw/accessories/227">米家</a>, <a href="https://www.apple.com/tw/shop/accessories/all/homekit">Homekit</a>, <a href="https://www.winmostore.com/categories/okgoogle">Google Home</a>，這些都是無法跨生態圈互相控制的。</p>
<h2 id="要怎麼突破生態圈"><a href="#要怎麼突破生態圈" class="headerlink" title="要怎麼突破生態圈"></a>要怎麼突破生態圈</h2><img data-src="/2022/smart-home-and-matter/home-assistant.jpg" class="">

<blockquote>
<p><a href="https://www.home-assistant.io/">HomeAssistant</a> 是目前唯一跨生態圈從「智障」家庭裝置變「智慧」的方式。</p>
</blockquote>
<p>這是由社群寫出來的一個開源專案，需要用 <code>樹莓派</code> 之類的硬體架設服務在自己家中，入門門檻很高，需要有一些軟硬體知識背景的才比較好上手。</p>
<h2 id="Matter-智慧家庭新標準"><a href="#Matter-智慧家庭新標準" class="headerlink" title="Matter - 智慧家庭新標準"></a>Matter - 智慧家庭新標準</h2><img data-src="/2022/smart-home-and-matter/matter.png" class="">

<p><a href="https://zh.wikipedia.org/zh-tw/Matter">Matter</a> 是一個新的智慧家庭標準，由各業者如: IKEA, Google, Apple 共同努力中，目標就是打破特定平台或生態圈的限制預計在2022年秋季發表。</p>
<h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>要真正打破三國鼎立，實現統一的那一天可能還需要好一陣子，就算 <code>Matter</code> 發布後，<code>Homekit</code> 要可以支援 <code>米家</code> 也是要等米家的裝置有支援 <code>Matter</code> 新標準，如果你家原本就是買米家全套，之後也可能要全部換掉。</p>
<p>但是 <code>Matter</code> 的確是之後打破生態圈的唯一解決方案，畢竟 HomeAssistant 不是一般使用者可以使用的，期待 <code>Matter</code> 發布的那天，看看能帶給物聯網什麼樣的發展。</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://zh.wikipedia.org/zh-tw/Matter">Wiki - Matter</a></li>
<li><a href="https://www.home-assistant.io/blog/2022/05/29/matter-in-home-assistant-workshop-announcement/">Matter in Home Assistant workshop announcement</a></li>
<li><a href="https://www.digitimes.com.tw/iot/article.asp?cat=158&cat1=20&id=0000626331_ERM2MOAB43TDXZ0AT35ZD">2022智慧家庭條條大路通Matter？大廠排名進了家門不一樣</a></li>
</ul>
]]></content>
      <categories>
        <category>🏠 智慧家庭</category>
      </categories>
      <tags>
        <tag>智慧家庭</tag>
      </tags>
  </entry>
  <entry>
    <title>【Python】Flash 要上線了，先準備一下威士忌(WSGI)</title>
    <url>/2022/python-web-prepare-wsgi/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1529264978834-666a0e99f884?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>認識一下 WSGI (備註：發音跟英文的威士忌一樣)</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Flask</code> 這個輕量級的框架很適合拿來「快速」建立網頁或是API，也有不少第三方工具可以支援，例如透過 <code>Flask-login</code> 來處理會員登入&#x2F;登出功能。</p>
<p>不過 <code>Flask</code> 的負載是個考驗，在本地端測試通常沒有問題，但要上線讓多人使用時，心中總是忐忑不安。</p>
<h2 id="Flask-可以直接處理-Request，為什麼需要-WSGI-呢？"><a href="#Flask-可以直接處理-Request，為什麼需要-WSGI-呢？" class="headerlink" title="Flask 可以直接處理 Request，為什麼需要 WSGI 呢？"></a>Flask 可以直接處理 Request，為什麼需要 WSGI 呢？</h2><p><code>Flask</code> 身為一個輕量級的框架，為了讓使用者不需要進行過多設定就能使用，所以已內建較為陽春的 <code>WSGI Server</code> (<code>Werkzeug</code>)，負責處理 <code>HTTP Request</code> 及 <code>Flask</code> 間資料的轉換。</p>
<p>Flask 官方文件有提到 <code>Werkzeug</code> 過於簡陋，只能算是 <code>WSGI</code> 工具包(Toolkit)，所以在處理「短時間多個 Request」時的負載能力不佳，所以如果有較大的流量需求，建議使用額外的 <code>WSGI Server</code> 。</p>
<p>接下來讓我們從 <code>Flask</code> 為起點，依序介紹 <code>Application Server</code> , <code>WSGI Server</code> , <code>Web Server</code> 的概念，以及如何設定服務，提高 <code>Flask</code> 的負載率。</p>
<h2 id="Application-Server"><a href="#Application-Server" class="headerlink" title="Application Server"></a>Application Server</h2><p>常見的 <code>Flask</code> , <code>Django</code> 框架都屬於這個層級，主要負責：</p>
<blockquote>
<p>接受客製化的Request，執行程式碼後，回傳客製化的Response</p>
</blockquote>
<img data-src="/2022/python-web-prepare-wsgi/app-server.png" class="">

<h2 id="WSGI-Server"><a href="#WSGI-Server" class="headerlink" title="WSGI Server"></a>WSGI Server</h2><p>用來處理 <code>WSGI</code> 協定的伺服器</p>
<img data-src="/2022/python-web-prepare-wsgi/wsgi-server.png" class="">

<p>WSGI 是一種「協定」，全名是 <strong>Python Web Server Gateway Interface</strong></p>
<blockquote>
<p>定義 HTTP Request 如何與 Application Server 互動</p>
</blockquote>
<p>可以將 <code>WSGI Server</code> 理解成處理 <code>HTTP Request</code> 與 <code>Python 可理解的 Input/Output</code> 的中繼站(Middleware)。</p>
<p>所有支援 <code>WSGI</code> 協定的都可以稱為 <code>WSGI Server</code> ，現在比較常見的是 <code>gunicorn</code> 與 <code>uwsgi</code> 。</p>
<h2 id="Web-Server"><a href="#Web-Server" class="headerlink" title="Web Server"></a>Web Server</h2><img data-src="/2022/python-web-prepare-wsgi/web-server.png" class="">

<p>放在 <code>WSGI Server</code> 前方的 <code>Web Server</code>，常見的 <code>Apache</code> , <code>Nginx</code> 都是屬於 <code>Web Server</code> 的範疇，它的功能有下列：</p>
<ol>
<li><p>靜態檔案快取</p>
<p> 透過 Http Header 讓瀏覽器知道要將「大型靜態文件」暫存在使用者的瀏覽器，降低重複造訪時的讀取時間</p>
</li>
<li><p>負載平衡(Load Balancer)</p>
<p> 當流量太高時，單靠一台 Server 不足以負載，會同時有多台 Server 提供服務，Web Server 會扮演門神，將 Requset 指引到該去的地方</p>
</li>
<li><p>反向代理</p>
<p> 隱藏真正的 Server 位置，對於使用者來說，所有 Request 都是同一台 Server 在處理 (Web Server)，不需要也不會知道背後真正處理的 Server (Application Server) 是哪一台</p>
</li>
</ol>
<h2 id="統整"><a href="#統整" class="headerlink" title="統整"></a>統整</h2><ol>
<li>Application Server<ul>
<li>代表服務: <code>Flask</code> , <code>Django</code></li>
<li>特色: 負責處理商業邏輯</li>
</ul>
</li>
<li>WSGI Server<ul>
<li>代表服務: <code>gunicorn</code> , <code>uwsgi</code></li>
<li>特色：根據 <code>WSGI</code> 協定，負責「HTTP Request」和「Application Server 能理解的內容」之間的轉換</li>
</ul>
</li>
<li>Web Server<ul>
<li>代表服務: <code>Nginx</code> , <code>Apache</code></li>
<li>特色：靜態檔案快取、負載平衡、反向代理</li>
</ul>
</li>
</ol>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://www.minglunwu.com/notes/2021/flask_plus_wsgi.html#0">Flask想上線? 你還需要一些酷東西</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Flask</tag>
      </tags>
  </entry>
  <entry>
    <title>GCP 上安裝 Ubuntu Desktop</title>
    <url>/2022/gcp-install-ubuntu-desktop/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1569428034239-f9565e32e224?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>雲端平台(GCP、AWS)通常使用 VM 都是只有 Terminal 介面<br>但總是有些特殊形況需要用到 Desktop UI，像是財政部的開發票軟體 Turnkey，只能透過 GUI 去操作。</p>
<p>所以就記錄一下，怎麼在GCP上安裝 Ubuntu Desktop。</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>以下操作都是在 Ubuntu 20.04 上執行，需要先在 GCP 上開一個 VM 並進入 Terminal</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get upgrade -y</span><br><span class="line">sudo apt-get install gnome-shell -y</span><br><span class="line">sudo apt-get install ubuntu-gnome-desktop -y</span><br><span class="line">sudo apt-get install autocutsel -y</span><br><span class="line">sudo apt-get install gnome-core -y</span><br><span class="line">sudo apt-get install gnome-panel -y</span><br><span class="line">sudo apt-get install gnome-themes-standard -y</span><br><span class="line">sudo apt-get install tightvncserver -y</span><br><span class="line"><span class="built_in">touch</span> ~/.Xresources</span><br><span class="line">tightvncserver</span><br><span class="line"><span class="comment"># Set password first time.</span></span><br><span class="line"><span class="comment"># When asked to a view-only password, type n for not now.</span></span><br><span class="line">vncserver -<span class="built_in">kill</span> :1</span><br><span class="line">nano ~/.vnc/xstartup</span><br></pre></td></tr></table></figure>

<p>編輯 <code>~/.vnc/xstartup</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">autocutsel -fork</span><br><span class="line">xrdb <span class="variable">$HOME</span>/.Xresources</span><br><span class="line">xsetroot -solid grey</span><br><span class="line"><span class="built_in">export</span> XKL_XMODMAP_DISABLE=1</span><br><span class="line"><span class="built_in">export</span> XDG_CURRENT_DESKTOP=<span class="string">&quot;GNOME-Flashback:Unity&quot;</span></span><br><span class="line"><span class="built_in">export</span> XDG_MENU_PREFIX=<span class="string">&quot;gnome-flashback-&quot;</span></span><br><span class="line"><span class="built_in">unset</span> DBUS_SESSION_BUS_ADDRESS</span><br><span class="line">gnome-session --session=gnome-flashback-metacity --disable-acceleration-check --debug &amp;</span><br></pre></td></tr></table></figure>

<p>啟動vnc server</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vncserver -geometry 1440x900 -localhost</span><br><span class="line"><span class="comment"># listen on ports 5901, 6001</span></span><br></pre></td></tr></table></figure>

<h2 id="Change-port"><a href="#Change-port" class="headerlink" title="Change port"></a>Change port</h2><p>可使用 <code>:&#123;port number&#125;</code> 會累加5900，控制監聽的port</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vncserver -geometry 1440x900 :2 -localhost <span class="comment"># listen on 5902</span></span><br><span class="line">vncserver -<span class="built_in">kill</span> :2 <span class="comment"># stop vnc</span></span><br><span class="line"></span><br><span class="line">vncserver -geometry 1440x900 :9 -localhost <span class="comment"># listen on 5909</span></span><br><span class="line">vncserver -<span class="built_in">kill</span> :9 <span class="comment"># stop vnc</span></span><br></pre></td></tr></table></figure>

<h2 id="Reset-password"><a href="#Reset-password" class="headerlink" title="Reset password"></a><strong>Reset password</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vncpasswd</span><br></pre></td></tr></table></figure>

<h2 id="Connect"><a href="#Connect" class="headerlink" title="Connect"></a><strong>Connect</strong></h2><p>直接連到 VNC server： <code>&#123;ip&#125;:&#123;port&#125;</code> 但 VNC 連線沒有加密，非常不安全，安全的做法是透過 ssh tunnel</p>
<blockquote>
<p>要直接連線記得先去防火牆設定打開 VPC 的 Port，但還是建議透過 ssh tunnel 去連線</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -NL 5901:localhost:5901 &#123;user@vnc_server&#125; &#123;-p vnc_server_ssh_port&#125; &#123;-i ssh_key&#125;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>參數</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td>-N</td>
<td>不執行遠端指令，僅做封包重新導向</td>
</tr>
<tr>
<td>-L port:host:hostport</td>
<td>設定本機的 port, 連到 host (主機)的 host port</td>
</tr>
</tbody></table>
<p>ssh tunnel建立後，可透過 <code>localhost:5901</code> 安全連線到vnc server</p>
<h2 id="VNC-Client"><a href="#VNC-Client" class="headerlink" title="VNC Client"></a>VNC Client</h2><h3 id="MAC"><a href="#MAC" class="headerlink" title="MAC"></a>MAC</h3><p>可用VNC Viewer連線</p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://subscription.packtpub.com/book/big-data-and-business-intelligence/9781788474221/1/ch01lvl1sec15/installing-and-configuring-ubuntu-desktop-for-google-cloud-platform">Installing and configuring Ubuntu Desktop for Google Cloud Platform</a></li>
<li><a href="https://educosta.dev/blog/install-and-configure-the-ubuntu-desktop-ui-on-google-cloud-platform/">Install and Configure the Ubuntu Desktop UI on Google Cloud Platform</a></li>
</ul>
]]></content>
      <categories>
        <category>☁️ 雲端平台</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>GCP</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】Object Deep Copy 推薦用法比較</title>
    <url>/2022/js-object-deep-copy/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1627398242454-45a1465c2479?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>Object 因為 Call by sharing 的特性，無法直接用 <code>=</code> 複製 Object，今天來講解 Object 的幾種複製方式。</p>
<h2 id="懶人包"><a href="#懶人包" class="headerlink" title="懶人包"></a>懶人包</h2><ul>
<li>正常Object(單層)： <code>...</code></li>
<li>Nested Object(多層)：Lodash <code>cloneDeep</code></li>
</ul>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="何謂shallow-copy-淺複製"><a href="#何謂shallow-copy-淺複製" class="headerlink" title="何謂shallow copy(淺複製)"></a>何謂shallow copy(淺複製)</h2><p>因Javascript特性對於Object會是call by reference，直接用 <code>=</code> 會是shallow copy</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">a = &#123; <span class="attr">b</span>:<span class="number">1</span>, <span class="attr">c</span>:<span class="number">2</span> &#125;</span><br><span class="line">copy = a</span><br><span class="line">copy.<span class="property">b</span> = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// shallow copy</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">b</span>) <span class="comment">// 100</span></span><br></pre></td></tr></table></figure>

<h2 id="copy用法差異"><a href="#copy用法差異" class="headerlink" title="copy用法差異"></a>copy用法差異</h2><table>
<thead>
<tr>
<th>Method</th>
<th>Pros</th>
<th>Cons</th>
</tr>
</thead>
<tbody><tr>
<td>&#x3D;</td>
<td>直接明瞭，預設用法</td>
<td>shallow copy(淺複製)</td>
</tr>
<tr>
<td>JSON.stringify() and JSON.parse()</td>
<td>deep copy nested objects(多層Object)</td>
<td>不能複製物件型別(Function, Date)</td>
</tr>
<tr>
<td>Object.assign()</td>
<td>deep copy 第一層</td>
<td>不能deep copy nested objects</td>
</tr>
<tr>
<td>… spread operator</td>
<td>同上，語法簡單，複製單層object首選</td>
<td>不能deep copy nested objects</td>
</tr>
<tr>
<td>Lodash cloneDeep</td>
<td>複製nested objects包含functions</td>
<td>外部package依賴</td>
</tr>
<tr>
<td>structuredClone()</td>
<td>deep copy nested objects(多層Object)</td>
<td>僅支持可結構化的變數，遇到 Error 和 Function 會拋出 DOMException</td>
</tr>
</tbody></table>
<h3 id=""><a href="#" class="headerlink" title="="></a><code>=</code></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> john = &#123;<span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>, <span class="attr">age</span>: <span class="number">28</span>&#125;</span><br><span class="line"><span class="keyword">let</span> ken = john</span><br><span class="line">ken.<span class="property">name</span> = <span class="string">&#x27;ken&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ❌ Bad: can&#x27;t deep copy</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">name</span>) <span class="comment">// ken</span></span><br></pre></td></tr></table></figure>

<h3 id="JSON-stringify-and-JSON-parse"><a href="#JSON-stringify-and-JSON-parse" class="headerlink" title="JSON.stringify() and JSON.parse()"></a>JSON.stringify() and JSON.parse()</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> john = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">28</span>,</span><br><span class="line">  <span class="attr">job</span>: <span class="function">() =&gt;</span> <span class="string">&#x27;Web Developer&#x27;</span>,</span><br><span class="line">  <span class="attr">address</span>: &#123;</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&#x27;taipei&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> ken = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(john))</span><br><span class="line">ken.<span class="property">name</span> = <span class="string">&#x27;ken&#x27;</span></span><br><span class="line">ken.<span class="property">address</span>.<span class="property">city</span> = <span class="string">&#x27;new taipei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ✅ Good: deep copy</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">name</span>) <span class="comment">// john</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">address</span>.<span class="property">city</span>) <span class="comment">// taipei</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ❌ Bad: function missing</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ken.<span class="property">job</span>) <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>

<h3 id="Object-assign"><a href="#Object-assign" class="headerlink" title="Object.assign()"></a>Object.assign()</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> john = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">28</span>,</span><br><span class="line">  <span class="attr">job</span>: <span class="function">() =&gt;</span> <span class="string">&#x27;Web Developer&#x27;</span>,</span><br><span class="line">  <span class="attr">address</span>: &#123;</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&#x27;taipei&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> ken = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, john)</span><br><span class="line">ken.<span class="property">name</span> = <span class="string">&#x27;ken&#x27;</span></span><br><span class="line">ken.<span class="property">address</span>.<span class="property">city</span> = <span class="string">&#x27;new taipei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ✅ Good</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">name</span>) <span class="comment">// john</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ken.<span class="title function_">job</span>()) <span class="comment">// Web Developer</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ❌ Bad: can&#x27;t deep copy nested objects</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">address</span>.<span class="property">city</span>) <span class="comment">// new taipei</span></span><br></pre></td></tr></table></figure>

<h3 id="spread-operator"><a href="#spread-operator" class="headerlink" title="... spread operator"></a><code>...</code> spread operator</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> john = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">28</span>,</span><br><span class="line">  <span class="attr">job</span>: <span class="function">() =&gt;</span> <span class="string">&#x27;Web Developer&#x27;</span>,</span><br><span class="line">  <span class="attr">address</span>: &#123;</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&#x27;taipei&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> ken = &#123;...john&#125;</span><br><span class="line">ken.<span class="property">name</span> = <span class="string">&#x27;ken&#x27;</span></span><br><span class="line">ken.<span class="property">address</span>.<span class="property">city</span> = <span class="string">&#x27;new taipei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ✅ Good: deep copy</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">name</span>) <span class="comment">// john</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ken.<span class="title function_">job</span>()) <span class="comment">// WebDeveloper</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ❌ Bad: not deep copy nested object</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">address</span>.<span class="property">city</span>) <span class="comment">// new taipei</span></span><br></pre></td></tr></table></figure>

<h3 id="Lodash-cloneDeep"><a href="#Lodash-cloneDeep" class="headerlink" title="Lodash cloneDeep"></a>Lodash <code>cloneDeep</code></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> john = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">28</span>,</span><br><span class="line">  <span class="attr">job</span>: <span class="function">() =&gt;</span> <span class="string">&#x27;Web Developer&#x27;</span>,</span><br><span class="line">  <span class="attr">address</span>: &#123;</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&#x27;taipei&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> ken = _.<span class="title function_">cloneDeep</span>(john)</span><br><span class="line">ken.<span class="property">name</span> = <span class="string">&#x27;ken&#x27;</span></span><br><span class="line">ken.<span class="property">address</span>.<span class="property">city</span> = <span class="string">&#x27;new taipei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ✅ Good: deep copy</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">name</span>) <span class="comment">// john</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">address</span>.<span class="property">city</span>) <span class="comment">// taipei</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ken.<span class="title function_">job</span>()) <span class="comment">// WebDeveloper</span></span><br></pre></td></tr></table></figure>

<h3 id="structuredClone"><a href="#structuredClone" class="headerlink" title="structuredClone()"></a>structuredClone()</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> john = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">28</span>,</span><br><span class="line">  <span class="attr">birthday</span>: <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2022-08-08&#x27;</span>),</span><br><span class="line">  <span class="attr">address</span>: &#123;</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&#x27;taipei&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> ken = <span class="title function_">structuredClone</span>(john)</span><br><span class="line">ken.<span class="property">name</span> = <span class="string">&#x27;ken&#x27;</span></span><br><span class="line">ken.<span class="property">address</span>.<span class="property">city</span> = <span class="string">&#x27;new taipei&#x27;</span></span><br><span class="line">ken.<span class="property">birthday</span>.<span class="title function_">setDate</span>(<span class="string">&#x27;30&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ✅ Good: deep copy</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">name</span>) <span class="comment">// john</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">address</span>.<span class="property">city</span>) <span class="comment">// taipei</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">birthday</span>.<span class="title function_">toDateString</span>()) <span class="comment">// Mon Aug 08 2022</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ken.<span class="property">name</span>) <span class="comment">// ken</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ken.<span class="property">address</span>.<span class="property">city</span>) <span class="comment">// new taipei</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ken.<span class="property">birthday</span>.<span class="title function_">toDateString</span>()) <span class="comment">// Tue Aug 30 2022</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ❌ Bad: not support Function</span></span><br><span class="line"><span class="keyword">let</span> amy = &#123;</span><br><span class="line">  <span class="attr">job</span>: <span class="function">() =&gt;</span> <span class="string">&#x27;designer&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">structuredClone</span>(amy) <span class="comment">// Throw DOMException</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://www.programfarmer.com/articles/javaScript/javascript-shallow-copy-deep-copy">JS 中的淺拷貝 (Shallow copy) 與深拷貝 (Deep copy) 原理與實作</a></li>
<li><a href="https://code.tutsplus.com/articles/the-best-way-to-deep-copy-an-object-in-javascript--cms-39655">The Best Way to Deep Copy an Object in JavaScript</a></li>
<li><a href="https://www.codingem.com/javascript-clone-object/">Clone an Object in JavaScript: 4 Best Ways [Updated 2022]</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>程式</tag>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>網頁開發 VS Code 常用套件整理</title>
    <url>/2022/vscode-plugins/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1590130382404-36dcbb666a3d?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="必裝"><a href="#必裝" class="headerlink" title="必裝"></a>必裝</h2><h4 id="Remote-SSH"><a href="#Remote-SSH" class="headerlink" title="Remote - SSH"></a><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh">Remote - SSH</a></h4><p>透過ssh連到遠端server編輯檔案</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fr-remote-ssh.gif?alt=media&token=0d31b1f7-0a62-4f97-84ea-39e9a6641bd3"></p>
<h4 id="Remote-SSH-Editing-Configuration-Files"><a href="#Remote-SSH-Editing-Configuration-Files" class="headerlink" title="Remote - SSH: Editing Configuration Files"></a><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh-edit">Remote - SSH: Editing Configuration Files</a></h4><p>ssh config檔案的語法高亮</p>
<h4 id="EditorConfig-for-VS-Code"><a href="#EditorConfig-for-VS-Code" class="headerlink" title="EditorConfig for VS Code"></a><a href="https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig">EditorConfig for VS Code</a></h4><p>讀取 <code>.editorconfig</code> 程式碼規範</p>
<h4 id="Gitmoji"><a href="#Gitmoji" class="headerlink" title="Gitmoji"></a><a href="https://marketplace.visualstudio.com/items?itemName=Vtrois.gitmoji-vscode">Gitmoji</a></h4><p>commit時快速使用<a href="https://gitmoji.carloscuesta.me/">gitmoji</a></p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fr-gitmogi.gif?alt=media&token=87b2b9d1-d3b1-4198-b27b-ad6dd66ffaab"></p>
<h4 id="GitLens"><a href="#GitLens" class="headerlink" title="GitLens"></a><a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens">GitLens</a></h4><p>實用的Git工具</p>
<h4 id="Git-Graph"><a href="#Git-Graph" class="headerlink" title="Git Graph"></a><a href="https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph">Git Graph</a></h4><p>Git Graph 可以補足 GitLens 圖像化的介面的缺點</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fr-git-graph.gif?alt=media&token=40e9dc77-a042-47a7-bc57-aa1c084b9d8d"></p>
<hr>
<h2 id="實用"><a href="#實用" class="headerlink" title="實用"></a>實用</h2><h4 id="Bracket-Pair-Colorizer-2"><a href="#Bracket-Pair-Colorizer-2" class="headerlink" title="Bracket Pair Colorizer 2"></a><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2">Bracket Pair Colorizer 2</a></h4><p>多層括號用不同顏色顯示</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-bracket-pair-colorizer.png?alt=media&token=28952149-1010-49e0-9689-5f15d7ae2c78"></p>
<h4 id="change-case"><a href="#change-case" class="headerlink" title="change-case"></a><a href="https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case">change-case</a></h4><p>快速轉換命名規則</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-change-case.gif?alt=media&token=683928a2-ac6b-4227-b3a1-1493be7d29e0"></p>
<h4 id="colorize"><a href="#colorize" class="headerlink" title="colorize"></a><a href="https://marketplace.visualstudio.com/items?itemName=kamikillerto.vscode-colorize">colorize</a></h4><p>直接顯示顏色</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-colorize.gif?alt=media&token=f83944fe-885a-4e97-aad8-af97bb8cee53"></p>
<h4 id="DotENV"><a href="#DotENV" class="headerlink" title="DotENV"></a><a href="https://marketplace.visualstudio.com/items?itemName=mikestead.dotenv">DotENV</a></h4><p>.env語法高亮</p>
<h4 id="Encode-Decode"><a href="#Encode-Decode" class="headerlink" title="Encode Decode"></a><a href="https://marketplace.visualstudio.com/items?itemName=mitchdenny.ecdc">Encode Decode</a></h4><p>快速 Encode&#x2F;Decode，常用Unicode、HTML Entities</p>
<h4 id="Log-File-Highlighter"><a href="#Log-File-Highlighter" class="headerlink" title="Log File Highlighter"></a><a href="https://marketplace.visualstudio.com/items?itemName=emilast.LogFileHighlighter">Log File Highlighter</a></h4><p>log file語法高亮</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-log-file-highlighter.png?alt=media&token=a9dd51bb-cb91-454f-8c5c-90451b2867f8"></p>
<h4 id="Live-Share-Extension-Pack"><a href="#Live-Share-Extension-Pack" class="headerlink" title="Live Share Extension Pack"></a><a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack">Live Share Extension Pack</a></h4><p>即時程式碼共同作業工具</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-live-share-extension-pack.gif?alt=media&token=cb91f1a2-3f80-4fbb-8377-3c05421d597b"></p>
<h4 id="Bracket-Peek"><a href="#Bracket-Peek" class="headerlink" title="Bracket Peek"></a><a href="https://marketplace.visualstudio.com/items?itemName=jomeinaster.bracket-peek">Bracket Peek</a></h4><p>上方顯示此區塊第一行的程式碼</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-bracket-peek.gif?alt=media&token=0d691825-2d0c-4c10-be6a-281a5bbc5b9c"></p>
<h4 id="Indent-Rainbow"><a href="#Indent-Rainbow" class="headerlink" title="Indent-Rainbow"></a><a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow">Indent-Rainbow</a></h4><p>彩色段落</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-indent-rainbow.png?alt=media&token=d62948b3-eae3-4edb-8e83-738438524b10"></p>
<h4 id="Path-Intellisense"><a href="#Path-Intellisense" class="headerlink" title="Path Intellisense"></a><a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense">Path Intellisense</a></h4><p>自動完成檔案名</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-path-intellisense.gif?alt=media&token=c10dde19-d7d9-4436-b362-692f3396551d"></p>
<h4 id="Project-Manager"><a href="#Project-Manager" class="headerlink" title="Project Manager"></a><a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager">Project Manager</a></h4><p>Project管理，方便從各Project之間快速切換</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-project-manager.png?alt=media&token=cebce928-403e-44a7-ba83-f598928e335f"></p>
<h4 id="Todo-Tree"><a href="#Todo-Tree" class="headerlink" title="Todo Tree"></a><a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree">Todo Tree</a></h4><p>多一個side bar列出TODO的檔案也支持Highlight</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fg-todo-tree.png?alt=media&token=b450bfbb-4208-4570-b95d-672c3ed62779"></p>
<hr>
<h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3><h4 id="Vetur"><a href="#Vetur" class="headerlink" title="Vetur"></a><a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur">Vetur</a></h4><p>必裝</p>
<h4 id="Vue-VSCode-Snippets"><a href="#Vue-VSCode-Snippets" class="headerlink" title="Vue VSCode Snippets"></a><a href="https://marketplace.visualstudio.com/items?itemName=sdras.vue-vscode-snippets">Vue VSCode Snippets</a></h4><p>可以直接用vdata…，快速產生code</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Ff-vue-vscode-snippets.gif?alt=media&token=f054dc6c-7438-4457-ab08-3f6a9458b68b"></p>
<h4 id="Vue-Inline-Template"><a href="#Vue-Inline-Template" class="headerlink" title="Vue Inline Template"></a><a href="https://marketplace.visualstudio.com/items?itemName=faisalhakim47.vue-inline-template">Vue Inline Template</a></h4><p>inline template語法高亮</p>
<h3 id="HTML-x2F-Sass-x2F-其他"><a href="#HTML-x2F-Sass-x2F-其他" class="headerlink" title="HTML&#x2F;Sass&#x2F;其他"></a>HTML&#x2F;Sass&#x2F;其他</h3><h4 id="IntelliSense-for-CSS-class-names-in-HTML"><a href="#IntelliSense-for-CSS-class-names-in-HTML" class="headerlink" title="IntelliSense for CSS class names in HTML"></a><a href="https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion">IntelliSense for CSS class names in HTML</a></h4><p>在html快速使用class name</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Ff-intellisense-for-css-class-names-in-html.gif?alt=media&token=a4234699-35f5-49d4-b4df-cc6e9ec7c3d7"></p>
<h4 id="Auto-Complete-Tag"><a href="#Auto-Complete-Tag" class="headerlink" title="Auto Complete Tag"></a><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-complete-tag">Auto Complete Tag</a></h4><p>Auto Close Tag &amp; Auto Rename Tag</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Ff-auto-complete-tag.gif?alt=media&token=99951878-728b-4bb7-8b20-f64e3ea4b373"></p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Ff-auto-complete-tag2.gif?alt=media&token=81a3c359-f340-4b72-9118-0b6a3c3e71ff"></p>
<h4 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a><a href="https://marketplace.visualstudio.com/items?itemName=Syler.sass-indented">Sass</a></h4><p>Sass syntax highlighting, autocomplete &amp; Formatter</p>
<h4 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a><a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">ESLint</a></h4><p>前端代碼規範</p>
<hr>
<h2 id="後端"><a href="#後端" class="headerlink" title="後端"></a>後端</h2><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><h4 id="PHP-DocBlocker"><a href="#PHP-DocBlocker" class="headerlink" title="PHP DocBlocker"></a><a href="https://marketplace.visualstudio.com/items?itemName=neilbrayfield.php-docblocker">PHP DocBlocker</a></h4><p>支援DocBlocker註解</p>
<h4 id="PHP-Intelephense"><a href="#PHP-Intelephense" class="headerlink" title="PHP Intelephense"></a><a href="https://marketplace.visualstudio.com/items?itemName=bmewburn.vscode-intelephense-client">PHP Intelephense</a></h4><p>必裝，Premium 可以考慮買</p>
<h3 id="Laravel"><a href="#Laravel" class="headerlink" title="Laravel"></a>Laravel</h3><h4 id="Laravel-Blade-Snippets"><a href="#Laravel-Blade-Snippets" class="headerlink" title="Laravel Blade Snippets"></a><a href="https://marketplace.visualstudio.com/items?itemName=onecentlin.laravel-blade">Laravel Blade Snippets</a></h4><p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fb-laravel-blade-snippets.gif?alt=media&token=9dd4de63-abb7-4727-9294-99c1e8b070c0"></p>
<h4 id="Laravel-Blade-Spacer"><a href="#Laravel-Blade-Spacer" class="headerlink" title="Laravel Blade Spacer"></a><a href="https://marketplace.visualstudio.com/items?itemName=austenc.laravel-blade-spacer">Laravel Blade Spacer</a></h4><p>快速使用blade 括號</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fb-laravel-blade-spacer.gif?alt=media&token=b101413a-50ea-4961-a885-044c4d654d07"></p>
<h4 id="Laravel-goto-view"><a href="#Laravel-goto-view" class="headerlink" title="Laravel goto view"></a><a href="https://marketplace.visualstudio.com/items?itemName=codingyu.laravel-goto-view">Laravel goto view</a></h4><p>快速導向view file</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fb-laravel-goto-view.gif?alt=media&token=fb1bc999-17bc-42f6-bc2b-32d577990798"></p>
<h4 id="Laravel-Snippets"><a href="#Laravel-Snippets" class="headerlink" title="Laravel Snippets"></a><a href="https://marketplace.visualstudio.com/items?itemName=onecentlin.laravel5-snippets">Laravel Snippets</a></h4><p>Laravel 必裝</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fb-laravel-snippets.gif?alt=media&token=f764afc0-4f20-465e-bc5e-5b5ed0cfefe0"></p>
<h4 id="Tinkerun"><a href="#Tinkerun" class="headerlink" title="Tinkerun"></a><a href="https://marketplace.visualstudio.com/items?itemName=tinkerun.tinkerun-vscode">Tinkerun</a></h4><p>透過tinker執行php script，並支援簡單Form UI</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Fb-tinkerun.png?alt=media&token=06dd5f4b-d3b1-4745-b70c-32ad0619fe93"></p>
<hr>
<h2 id="主題"><a href="#主題" class="headerlink" title="主題"></a>主題</h2><h4 id="One-Dark-Pro"><a href="#One-Dark-Pro" class="headerlink" title="One Dark Pro"></a><a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme">One Dark Pro</a></h4><p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Ft-one-dark-pro.png?alt=media&token=e908b2c6-ed4b-463e-ac8a-6d3929e36e64"></p>
<h4 id="vscode-icons"><a href="#vscode-icons" class="headerlink" title="vscode-icons"></a><a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons">vscode-icons</a></h4><p>檔案icons</p>
<p><img data-src="https://firebasestorage.googleapis.com/v0/b/blog-storage-4f01d.appspot.com/o/2022%2Fvscode-plugins%2Ft-vscode-icons.gif?alt=media&token=acc58685-c15f-4001-81d3-141db9533707"></p>
]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>網頁開發</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】資料型態特性 - 什麼是 Call by sharing?</title>
    <url>/2022/js-call-by-sharing/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1627398242454-45a1465c2479?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>釐清JS資料型態特性與 Call by sharing</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="資料型態"><a href="#資料型態" class="headerlink" title="資料型態"></a>資料型態</h2><p>在 Javascript 中資料型態分為 <strong>原始型別(Primitive type)<strong>、</strong>物件型別(Object type)</strong></p>
<p><strong>Primitive type</strong></p>
<ul>
<li>Boolean</li>
<li>Null</li>
<li>Undefined</li>
<li>Number</li>
<li>BigInt</li>
<li>String</li>
<li>Symbol（於 ECMAScript 6 新定義）</li>
</ul>
<p><strong>Object type</strong></p>
<ul>
<li>Object</li>
<li>Function</li>
<li>Array</li>
<li>Set</li>
<li>…etc</li>
</ul>
<h2 id="「By-Value」vs「By-Reference」"><a href="#「By-Value」vs「By-Reference」" class="headerlink" title="「By Value」vs「By Reference」"></a>「By Value」vs「By Reference」</h2><blockquote>
<p>一般來說， Primitive type 會是call by value，而 object 的行為<strong>比較像是call by reference</strong></p>
</blockquote>
<p>先來看一下兩個差異的範例</p>
<p><strong>Call by value</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> b = a</span><br><span class="line"></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b) <span class="comment">// 1, 2</span></span><br></pre></td></tr></table></figure>

<p><strong>Call by reference</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> ref1 = [<span class="number">1</span>]</span><br><span class="line"><span class="keyword">let</span> ref2 = ref1</span><br><span class="line"></span><br><span class="line">ref2.<span class="title function_">push</span>(<span class="number">2</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ref1, ref2) <span class="comment">// [1, 2] [1, 2]</span></span><br></pre></td></tr></table></figure>

<p>這邊會發現 <code>ref2 = ref1</code> 的時候，傳遞的其實是<strong>變數的位址</strong></p>
<h2 id="物件-Object-的判斷-operation"><a href="#物件-Object-的判斷-operation" class="headerlink" title="物件(Object)的判斷(operation)"></a><strong>物件(Object)的判斷(operation)</strong></h2><p>因為 <strong>物件(Object)</strong> 是像call by reference，所以在operation判斷上，<code>==</code> 和 <code>===</code> 這兩種則會比較像是 call by reference而非 call by value</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// call by value</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> b = a</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a == b) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === b) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === <span class="number">1</span>) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// call by reference</span></span><br><span class="line"><span class="keyword">let</span> ref1 = [<span class="number">1</span>]</span><br><span class="line"><span class="keyword">let</span> ref2 = ref1</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ref1 == ref2) <span class="comment">// true, 相同reference</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ref1 === ref2) <span class="comment">// true, 同上</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ref1 == [<span class="number">1</span>]) <span class="comment">// false, 雖相同value但不同reference</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ref1 === [<span class="number">1</span>]) <span class="comment">// false, 同上</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">1</span>] == [<span class="number">1</span>]) <span class="comment">// false, 同上</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">1</span>] === [<span class="number">1</span>]) <span class="comment">// false, 同上</span></span><br></pre></td></tr></table></figure>

<h2 id="Call-by-sharing"><a href="#Call-by-sharing" class="headerlink" title="Call by sharing"></a><strong>Call by sharing</strong></h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Alex&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = obj1;</span><br><span class="line"></span><br><span class="line">obj2.<span class="property">age</span> = <span class="number">25</span>; <span class="comment">// 與obj1相同reference, 會一起更改到obj1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 重新賦值</span></span><br><span class="line">obj2 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">50</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1); <span class="comment">// &#123; name: &#x27;Alex&#x27;, age: 25 &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2); <span class="comment">// &#123; name: &#x27;John&#x27;, age: 50 &#125;, 重新賦值在obj2上，並不會更改obj1</span></span><br></pre></td></tr></table></figure>

<p>上面跟之前的 call by reference例子看起來沒兩樣，唯一的差異是把 <code>obj2</code> 重新賦值，就代表你要讓這個 obj 指向一個新的 object，跟 call by reference 特性又不太一樣，有人把這種方式叫做 <strong>Call by sharing</strong></p>
<p>但 Call by sharing 其實不是一個正式的名詞</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>以行為來分類的話，<strong>原始型別(Primitive type)</strong> 是Call by value，而 <strong>物件型別(Object type)</strong> 是Call by reference or Call by sharing，唯一要注意的就是重新賦值這個動作造成reference改變的影響。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://medium.com/@mengchiang000/js%E5%9F%BA%E6%9C%AC%E8%A7%80%E5%BF%B5-call-by-value-%E9%82%84%E6%98%AFreference-%E5%8F%88%E6%88%96%E6%98%AF-sharing-22a87ca478fc">JS基本觀念：call by value 還是reference 又或是 sharing?</a></li>
<li><a href="https://stu98832.github.io/2020/06/26/call-by-reference/">Call By Value, Call By Reference? 談談所謂的參數引用</a></li>
<li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Data_structures">JavaScript 的資料型別與資料結構</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>程式</tag>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>中文 Web Font 踩雷</title>
    <url>/2022/chinese-web-font/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1566978862346-73282aa378a4?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>要在網頁上使用中文字型，可能沒你想像中的那麼簡單</p>
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="踩雷紀錄"><a href="#踩雷紀錄" class="headerlink" title="踩雷紀錄"></a>踩雷紀錄</h2><p>我從Mac提取了翩翩體(ttc)，並花了很多時間轉成ttf、woff、woff2，最後發現safari上會缺字…</p>
<img data-src="/2022/chinese-web-font/webfont.png" class="">

<p>Safari</p>
<img data-src="/2022/chinese-web-font/broken.png" class="">

<h2 id="問題在哪？"><a href="#問題在哪？" class="headerlink" title="問題在哪？"></a>問題在哪？</h2><p>直接在網頁使用font-face載入中文字型，會遇到以下問題</p>
<ol>
<li>載入速度<ul>
<li>Flash of invisible text, FOIT：一開始看不到字，載入完成後才顯示</li>
<li>Flash of unstyled text, FOUT：一開始是其他字型，載入完成後會閃一下套用webfont</li>
<li>Loading時間變長</li>
</ul>
</li>
<li>字型格式瀏覽器不支援<ul>
<li>各瀏覽器對ttf、woff、woff2支援度不一樣</li>
</ul>
</li>
<li>缺字<ul>
<li>就算格式正確，不是每個瀏覽器都能支援此字體</li>
</ul>
</li>
</ol>
<h2 id="解決方案"><a href="#解決方案" class="headerlink" title="解決方案"></a>解決方案</h2><p>FOUT雖然可以使用<a href="https://github.com/typekit/webfontloader">Web Font Loader</a>，中文字體檔案太大，直接載入是不實際的做法，無法解決根本問題：</p>
<ul>
<li><strong>中文字型檔案太大</strong></li>
<li><strong>字型不相容瀏覽器</strong></li>
</ul>
<h3 id="解決方法1：文字都改成圖片"><a href="#解決方法1：文字都改成圖片" class="headerlink" title="解決方法1：文字都改成圖片"></a><strong>解決方法1：文字都改成圖片</strong></h3><p>在網頁上有用到特殊字型的地方都改成圖片去放，如果只是用在標題的話還可以，但如果是整頁都要特殊文字就比較不適合</p>
<h3 id="解決方法2：雲端字型服務"><a href="#解決方法2：雲端字型服務" class="headerlink" title="解決方法2：雲端字型服務"></a><strong>解決方法2：雲端字型服務</strong></h3><blockquote>
<p><strong>動態載入：</strong>依據您網頁上使用的文字，動態的產生並下載您需要的字型</p>
</blockquote>
<p>通常會提供一個js，會依據您網頁上使用的文字，動態的產生並下載您需要的字型，<br>並且在上面的字型基本上已經經過很多測試，不太會遇到瀏覽器缺字問題</p>
<ul>
<li><a href="https://webfont.justfont.com/fonts">Justfont</a></li>
<li><a href="https://typesquare.com/zh_tw/service/web">TypeSquare</a></li>
<li><a href="https://helpx.adobe.com/tw/fonts/using/add-fonts-website.html">Adobe Fonts</a></li>
</ul>
<h2 id="我的做法-Adobe-Fonts"><a href="#我的做法-Adobe-Fonts" class="headerlink" title="我的做法 Adobe Fonts"></a>我的做法 Adobe Fonts</h2><p>由於我們公司原本就有購買 Adobe 所以就直接使用 <a href="https://helpx.adobe.com/tw/fonts/using/add-fonts-website.html">Adobe Fonts</a> ，雖然支援中文字型不多，但直接透過他們網站設定好需要的自行並在網站載入js，就可以動態中文字型，非常方便</p>
<img data-src="/2022/chinese-web-font/adobe.png" class="">

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://blog.user.today/chinese-webfont-note/">中文 Web Font 雷人記事本</a></li>
<li><a href="https://helpx.adobe.com/tw/fonts/using/dynamic-subsetting.html">動態子集和網頁字體服務</a></li>
<li><a href="https://282714.medium.com/%E7%B6%B2%E9%A0%81%E5%8A%A0%E8%BC%89%E5%AD%97%E5%9E%8Bfoit-fout%E8%88%87%E6%95%88%E8%83%BD%E6%B8%AC%E8%A9%A6-cb0b03daad60">網頁加載字型Web Font FOIT&amp; FOUT與效能測試</a></li>
</ul>
]]></content>
      <categories>
        <category>💣 各種踩雷</category>
      </categories>
      <tags>
        <tag>經驗</tag>
        <tag>網頁開發</tag>
      </tags>
  </entry>
  <entry>
    <title>好看的 MacOS 螢幕保護程式</title>
    <url>/2022/macos-screen-saver/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1585792180666-f7347c490ee2?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>每次離開座位再回來，都會看到無聊的螢幕保護程式，介紹一下幾個我自己常用而且非常好看的MacOS螢幕保護程式</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="Fliqlo"><a href="#Fliqlo" class="headerlink" title="Fliqlo"></a><a href="https://fliqlo.com/">Fliqlo</a></h2><p>好看又低調的翻牌時鐘，Windows也可以用</p>
<img data-src="/2022/macos-screen-saver/fliqlo.png" class="">

<h2 id="Aerial"><a href="#Aerial" class="headerlink" title="Aerial"></a><a href="https://aerialscreensaver.github.io/">Aerial</a></h2><p>如果有用過AppleTV應該知道他的螢幕保護都非常漂亮，有個地方的動態空景，可以透過這軟體，讓你的Mac也有相同效果</p>
<img data-src="/2022/macos-screen-saver/aerial.png" class="">]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>各語言 Foreach 寫法</title>
    <url>/2022/coding-foreach/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1498050108023-c5249f4df085?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在寫演算法的時候，常常會用到Foreach，由於自己常常在各語言中切換使用，這邊整理一下常用的Foreach寫法</p>
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="❌-不易閱讀的寫法"><a href="#❌-不易閱讀的寫法" class="headerlink" title="❌ 不易閱讀的寫法"></a>❌ 不易閱讀的寫法</h2><p>最基本的寫法，但也非常難閱讀</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">arr = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; arr.<span class="property">length</span> ; i++ )&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(i, arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="✅-更好的寫法"><a href="#✅-更好的寫法" class="headerlink" title="✅ 更好的寫法"></a>✅ 更好的寫法</h2><p>各語言有不同用法，這邊列了幾個我常用的語言</p>
<h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><p><code>forEach</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">arr = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">val, key</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(key, val))</span><br><span class="line"></span><br><span class="line">obj = &#123;<span class="attr">a</span>:<span class="number">1</span>, <span class="attr">b</span>:<span class="number">2</span>, <span class="attr">c</span>:<span class="number">3</span>&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(obj).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(key, objs[key]))</span><br></pre></td></tr></table></figure>

<p><code>for...of</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">arr = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> [key, val] <span class="keyword">of</span> arr.<span class="title function_">entries</span>()) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, val)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj = &#123;<span class="attr">a</span>:<span class="number">1</span>, <span class="attr">b</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> [key, val] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(obj)) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, val)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$val</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">dump</span>(<span class="string">&quot;<span class="subst">$val</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">dump</span>(<span class="string">&quot;<span class="subst">$key</span>, <span class="subst">$val</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = [<span class="string">&#x27;a&#x27;</span> =&gt; <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span> =&gt; <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span> =&gt; <span class="number">3</span>];</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$obj</span> <span class="keyword">as</span> <span class="variable">$val</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">dump</span>(<span class="string">&quot;<span class="subst">$val</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$obj</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">dump</span>(<span class="string">&quot;<span class="subst">$key</span>, <span class="subst">$val</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># array</span></span><br><span class="line">arr = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="keyword">for</span> val <span class="keyword">in</span> arr:</span><br><span class="line">  <span class="built_in">print</span>(val)</span><br><span class="line"><span class="keyword">for</span> key, val <span class="keyword">in</span> <span class="built_in">enumerate</span>(arr):</span><br><span class="line">  <span class="built_in">print</span>(key, val)</span><br><span class="line"></span><br><span class="line"><span class="comment"># dict</span></span><br><span class="line">dicts = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dicts:</span><br><span class="line">  <span class="built_in">print</span>(key, dicts[key])</span><br><span class="line"><span class="keyword">for</span> key, val <span class="keyword">in</span> dicts.items():</span><br><span class="line">  <span class="built_in">print</span>(key, val)</span><br></pre></td></tr></table></figure>

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://thecodebarbarian.com/for-vs-for-each-vs-for-in-vs-for-of-in-javascript">For vs forEach() vs for&#x2F;in vs for&#x2F;of in JavaScript</a></li>
<li><a href="https://realpython.com/lessons/range-vs-enumerate/">range() vs enumerate()</a></li>
</ul>
]]></content>
      <categories>
        <category>🧑‍💻 程式語言</category>
      </categories>
      <tags>
        <tag>程式</tag>
        <tag>Javascript</tag>
        <tag>Python</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>解決 UniFi AP 卡在正在採用</title>
    <url>/2021/solve-unifi-ap-always-adopting/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1520869562399-e772f042f422?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>如果因Controller升級或是AP固件升級，出現 <code>正在採用</code> 與 <code>斷開中</code> 不斷循環時</p>
<p>需要以SSH進去AP<a href="https://william.pylabs.org/2019/02/25/add-unifi-ap-to-controller-manually/">手動接管</a></p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h2><ol>
<li><p>SSH登入AP</p>
<p> 原廠設定的AP帳密是ubnt&#x2F;ubnt，但如果是加入過Controller的AP的話<br> 帳密要去 <code>設置-&gt;站點-&gt;設備身分驗證-&gt;SSH驗證</code> 查看</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh &#123;username&#125;@&#123;ap_ip_address&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>通知Controller有新設備要加入</p>
<p> 這邊IP要打Controller的IP</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">set-inform http://&#123;controller_ip_address&#125;:8080/inform</span><br></pre></td></tr></table></figure>
</li>
<li><p>檢查是否成功</p>
</li>
</ol>
]]></content>
      <categories>
        <category>💣 各種踩雷</category>
      </categories>
      <tags>
        <tag>維護</tag>
        <tag>UniFi</tag>
        <tag>經驗</tag>
      </tags>
  </entry>
  <entry>
    <title>🧪️ 電腦檢測軟體</title>
    <url>/2021/pc-monitoring-tools/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1640955014216-75201056c829?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>常用的電腦硬體測試軟體整理</p>
<span id="more"></span>

<!-- 文章開始 -->

<table>
<thead>
<tr>
<th>名子</th>
<th>硬體</th>
<th>目的</th>
<th>備註</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://store.steampowered.com/app/223850/3DMark/">3DMARK</a></td>
<td>CPU &amp; GPU &amp; 其他綜合效能</td>
<td>測試、跑分</td>
<td>付費但Steam上常特價</td>
</tr>
<tr>
<td><a href="https://www.azofreeware.com/2010/01/crystaldiskmark-220.html">CrystalDiskMark</a></td>
<td>硬碟</td>
<td>跑分</td>
<td>有排名比較</td>
</tr>
<tr>
<td><a href="https://www.azofreeware.com/2010/01/crystaldiskinfo-330.html">CrystalDiskInfo</a></td>
<td>硬碟</td>
<td>檢測</td>
<td>支援SSD</td>
</tr>
<tr>
<td><a href="https://www.microsoft.com/zh-tw/p/cinebench/9pgzkjc81q7j">Cinebench</a> R20</td>
<td>CPU</td>
<td>跑分</td>
<td>在微軟商店</td>
</tr>
<tr>
<td><a href="https://www.azofreeware.com/2006/10/cpu-z-137.html">CPU-Z</a></td>
<td>CPU</td>
<td>跑分、硬體查看</td>
<td></td>
</tr>
<tr>
<td><a href="https://www.azofreeware.com/2021/02/furmark.html">FurMark</a></td>
<td>GPU</td>
<td>燒機</td>
<td>可測穩定性、散熱</td>
</tr>
<tr>
<td><a href="https://www.azofreeware.com/2016/05/occt.html">OCCT</a></td>
<td>Power、CPU、GPU、RAM</td>
<td>燒機、溫度查看</td>
<td>測穩定性、散熱，換顯卡 or Power 可測</td>
</tr>
<tr>
<td><a href="https://www.azofreeware.com/2008/03/hwmonitor-1080.html">HWMonitor</a></td>
<td>ALL</td>
<td>溫度查看</td>
<td></td>
</tr>
<tr>
<td><a href="https://www.alcpu.com/CoreTemp/">CoreTemp</a></td>
<td>CPU</td>
<td>溫度查看</td>
<td></td>
</tr>
</tbody></table>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://blog.devcker.com/computer-test-software-collection/">自己常用電腦、測試、跑分、燒機軟體整理</a></li>
</ul>
]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>維護</tag>
        <tag>電腦</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Synology 手動更新 Docker Image</title>
    <url>/2021/synology-manual-update-docker-image/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1517819655378-25fe37197692?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>在DSM上用Docker建立服務非常方便，但日常維護該怎麼升級版本呢？</p>
<p>如果部署的時候有掛載儲存空間，就可以不用擔心資料的損失</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="更新Docker-Image"><a href="#更新Docker-Image" class="headerlink" title="更新Docker Image"></a>更新Docker Image</h2><p>我的習慣是下載image不要下載 <code>latest</code> 的映像檔，而是指定版本<br>並且升級時會先保留舊的容器，避免升級後有些狀況無法回覆</p>
<ol>
<li><p>在家目錄創一個資料夾 <code>docker_container_config</code></p>
</li>
<li><p>Docker &gt; 容器(container) &gt; 選擇要升級的容器 &gt; 設定 &gt; 匯出至 <code>/homes/&#123;username&#125;/docker_container_config</code></p>
 <img data-src="/2021/synology-manual-update-docker-image/step2-1.png" class="">

 <img data-src="/2021/synology-manual-update-docker-image/step2-2.png" class="">
</li>
<li><p>倉庫伺服器 &gt; 找映像檔(image) &gt; 下載新版tag</p>
 <img data-src="/2021/synology-manual-update-docker-image/step3.png" class="">
</li>
<li><p>停止容器 &gt; 並且改名為 {name}_old</p>
 <img data-src="/2021/synology-manual-update-docker-image/step4-1.png" class="">

 <img data-src="/2021/synology-manual-update-docker-image/step4-2.png" class="">
</li>
<li><p>點編輯 &gt; 有連接埠設定的話 &gt; 截圖並且移除</p>
 <img data-src="/2021/synology-manual-update-docker-image/step5.png" class="">
</li>
<li><p>編輯剛匯出的config更改image為新版的tag</p>
 <img data-src="/2021/synology-manual-update-docker-image/step6-1.png" class="">

 <img data-src="/2021/synology-manual-update-docker-image/step6-2.png" class="">
</li>
<li><p>匯入容器 &gt; 啟動 &gt; 檢查正常</p>
 <img data-src="/2021/synology-manual-update-docker-image/step7.png" class="">
</li>
<li><p>刪除舊容器 {name}_old 和 舊映像檔(image)</p>
</li>
</ol>
<p>這樣就可以完成版本升級，並且可以避免升級失敗</p>
<p>以我來說是固定3個月升級一次版本，避免過太久一次升太多版的話，會比較容易出現升級失敗的狀況</p>
]]></content>
      <categories>
        <category>💾 Synology</category>
      </categories>
      <tags>
        <tag>維護</tag>
        <tag>Synology</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>擺脫Tmux學習困難 - iTerm2 + Tmux</title>
    <url>/2020/iterm2-tmux/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1516031190212-da133013de50?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>iTerm2 + Tmux 完美搭配出一個 <code>可切割視窗</code> 與 <code>保留session</code> 的terminal</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><ul>
<li>iTerm2：可以取代MacOS Terminal的實用APP</li>
<li>Tmux：Terminal session管理工具，用於ssh server上很方便，不會每次ssh都失去之前的狀態</li>
</ul>
<p>Tmux雖然也可以像iTerm2可以做到切割畫面，但是Tmux操作上需要記很多快捷鍵，使用上不這麼的直覺</p>
<p>但是只要透過 <a href="https://iterm2.com/documentation-tmux-integration.html">Tmux Integration</a>，就可以利用原本的iTerm2功能去使用Tmux，不用再去記一堆Tmux快捷鍵</p>
<h2 id="iTerm2"><a href="#iTerm2" class="headerlink" title="iTerm2"></a>iTerm2</h2><p>直接於網站上下載安裝 <a href="https://iterm2.com/downloads.html">https://iterm2.com/downloads.html</a></p>
<h2 id="Tmux"><a href="#Tmux" class="headerlink" title="Tmux"></a>Tmux</h2><p>ubuntu建議直接用apt安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install tmux -y</span><br></pre></td></tr></table></figure>

<blockquote>
<p>不建議抓最新版，有一次用最新版無法支援iTerm2的tmux integration</p>
</blockquote>
<p>max就用Homebrew安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install tmux</span><br></pre></td></tr></table></figure>

<h2 id="iTerm2-Tmux-integration"><a href="#iTerm2-Tmux-integration" class="headerlink" title="iTerm2 - Tmux integration"></a>iTerm2 - Tmux integration</h2><p>這個不用特別安裝，</p>
<p>先到可以執行tmux的終端，然後執行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmux -CC</span><br></pre></td></tr></table></figure>

<p>這時會自動幫你開一個iTerm視窗，就可以直接透過iTerm用Tumx了</p>
<p>為了每次可以進去同一個session，可以用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tmux -CC new -A -s main</span><br></pre></td></tr></table></figure>

<p>如果是ssh server</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -t example.com <span class="string">&#x27;tmux -CC new -A -s main&#x27;</span></span><br></pre></td></tr></table></figure>

<p>可以把指令放在iTerm的profile</p>
<img data-src="/2020/iterm2-tmux/iterm2.png" class="">

<h2 id="延伸閱讀"><a href="#延伸閱讀" class="headerlink" title="延伸閱讀"></a>延伸閱讀</h2><p><a href="/2020/zsh-antigen/">取代shell 強大的Zsh (Zsh + Antigen + Oh my Zsh)</a></p>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><strong><a href="https://gitlab.com/gnachman/iterm2/-/wikis/tmux-Integration-Best-Practices">tmux Integration Best Practices</a></strong></li>
</ul>
]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Ubuntu</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>取代Bash 強大的Zsh (Zsh + Antigen + Oh my Zsh)</title>
    <url>/2020/zsh-antigen/</url>
    <content><![CDATA[<!-- banner -->
<img data-src="/2020/zsh-antigen/terminal.png" class="">

<!-- 前言 -->
<p>本篇教學使用Zsh + Antigen + Oh my Zsh，建立方便使用的terminal</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="名詞解釋"><a href="#名詞解釋" class="headerlink" title="名詞解釋"></a>名詞解釋</h2><table>
<thead>
<tr>
<th>名詞</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td>Zsh</td>
<td>取代Bash的強大shell</td>
</tr>
<tr>
<td>Antigen</td>
<td>zsh的套件管理</td>
</tr>
<tr>
<td>Oh my Zsh</td>
<td>zsh library</td>
</tr>
</tbody></table>
<h2 id="Zsh"><a href="#Zsh" class="headerlink" title="Zsh"></a>Zsh</h2><h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">sudo apt-get install -y zsh</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">sudo yum install -y zsh</span><br><span class="line"><span class="comment"># OSX (Since OSX Catalina, Zsh has been installed with the OS)</span></span><br><span class="line">brew install zsh</span><br></pre></td></tr></table></figure>

<p>執行 zsh 初始化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zsh</span><br></pre></td></tr></table></figure>

<h3 id="預設shell設為zsh"><a href="#預設shell設為zsh" class="headerlink" title="預設shell設為zsh"></a>預設shell設為zsh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">sudo chsh -s /bin/zsh <span class="string">&quot;<span class="variable">$USER</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>如果遇到執行沒效果可於 <code>sudo nano /etc/passwd</code> 直接更改Shell</p>
<h2 id="Antigen"><a href="#Antigen" class="headerlink" title="Antigen"></a>Antigen</h2><h3 id="安裝-1"><a href="#安裝-1" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L git.io/antigen &gt; antigen.zsh</span><br></pre></td></tr></table></figure>

<h3 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h3><p>創建Antigen的設定檔 <code>~/.antigenrc</code></p>
<p>將要使用的plugins和theme放進這</p>
<p>以下為我常用的 <code>~/.antigenrc</code>，包含 <a href="https://github.com/wting/autojump">autojump</a> 需要先安裝，根據你習慣自行調整plugin或theme</p>
<p>這邊選用<a href="https://github.com/romkatv/powerlevel10k">p10k</a>主題</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Load oh-my-zsh library.</span></span><br><span class="line">antigen use oh-my-zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load bundles from the default repo (oh-my-zsh).</span></span><br><span class="line">antigen bundle git</span><br><span class="line">antigen bundle command-not-found</span><br><span class="line">antigen bundle autojump</span><br><span class="line">antigen bundle extract</span><br><span class="line">antigen bundle docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load bundles from external repos.</span></span><br><span class="line">antigen bundle zsh-users/zsh-completions</span><br><span class="line">antigen bundle zsh-users/zsh-autosuggestions</span><br><span class="line">antigen bundle zsh-users/zsh-syntax-highlighting</span><br><span class="line">antigen bundle supercrabtree/k</span><br><span class="line"></span><br><span class="line"><span class="comment"># Select theme.</span></span><br><span class="line"><span class="comment"># antigen theme robbyrussell</span></span><br><span class="line">antigen theme romkatv/powerlevel10k</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tell Antigen that you&#x27;re done.</span></span><br><span class="line">antigen apply</span><br></pre></td></tr></table></figure>

<p>複製以下貼到你的 <code>~/.zshrc</code> (如果沒有就創一個空的)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Load Antigen</span></span><br><span class="line"><span class="built_in">source</span> ~/antigen.zsh</span><br><span class="line"><span class="comment"># Load Antigen configurations</span></span><br><span class="line">antigen init ~/.antigenrc</span><br></pre></td></tr></table></figure>

<p>檢查</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 進入zsh</span></span><br><span class="line">zsh</span><br><span class="line"><span class="comment"># 確認安裝完成</span></span><br><span class="line">antigen version</span><br></pre></td></tr></table></figure>

<h3 id="用指令檢查版本"><a href="#用指令檢查版本" class="headerlink" title="用指令檢查版本"></a>用指令檢查版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">antigen version</span><br><span class="line">antigen list</span><br><span class="line">antigen <span class="built_in">help</span></span><br><span class="line">antigen update</span><br></pre></td></tr></table></figure>

<h2 id="Oh-my-zsh"><a href="#Oh-my-zsh" class="headerlink" title="Oh my zsh"></a>Oh my zsh</h2><p>oh my zsh內建一些好用的plugins和方便引入主題</p>
<p>上方Antigen已經透過 <code>antigen use oh-my-zsh</code> 引入oh my zsh</p>
<p>之後只要透過Antigen使用oh my zsh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Turn on an Oh my Zsh plugin</span></span><br><span class="line">antigen bundle plugin-name</span><br><span class="line">antigen bundle git</span><br><span class="line">antigen bundle command-not-found</span><br><span class="line">antigen bundle docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply an Oh my Zsh theme</span></span><br><span class="line"><span class="comment"># antigen theme theme-name</span></span><br><span class="line">antigen theme robbyrussell</span><br></pre></td></tr></table></figure>

<h3 id="自動更新"><a href="#自動更新" class="headerlink" title="自動更新"></a>自動更新</h3><p>Oh my zsh會於有更新時詢問是否要更新，可以於 <code>.zshrc</code> 調整設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano ~/.zshrc</span><br></pre></td></tr></table></figure>

<p><code>DISABLE_AUTO_UPDATE=true</code> 始終回复<strong>Yes</strong>並自動升級<br><code>DISABLE_UPDATE_PROMPT=true</code> 始終回复No並且永不升級</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># auto update oh-my-zsh</span></span><br><span class="line">DISABLE_AUTO_UPDATE=<span class="literal">true</span></span><br><span class="line"><span class="comment"># disable oh-my-zsh update</span></span><br><span class="line">DISABLE_UPDATE_PROMPT=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="常用-Plugins"><a href="#常用-Plugins" class="headerlink" title="常用 Plugins"></a>常用 Plugins</h2><h3 id="內建"><a href="#內建" class="headerlink" title="內建"></a>內建</h3><p>列表：<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins">https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins</a></p>
<ul>
<li><a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git">Git</a><ul>
<li>濃縮很多 git 語法，習慣後可以快速執行git指令</li>
</ul>
</li>
<li><a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/autojump">autojump</a><ul>
<li>用 <code>j</code>直接執行 autojump</li>
<li>跟據你常用的目錄，自動移動到某資料夾</li>
<li>需要先安裝 autojump</li>
</ul>
</li>
<li><a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/extract">extract</a><ul>
<li>自動根據檔案副檔名執行對應的壓縮&#x2F;解壓縮指令，<code>extract &lt;filename&gt;</code></li>
</ul>
</li>
<li><a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/command-not-found">command-not-found</a><ul>
<li>找不到指令時推薦對應的包</li>
</ul>
</li>
<li><a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker">docker</a><ul>
<li>濃縮 docker 語法</li>
</ul>
</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li><a href="https://github.com/zsh-users/zsh-completions">zsh-users&#x2F;zsh-completions</a><ul>
<li>按 tab 自動完成指令</li>
</ul>
</li>
<li><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-users&#x2F;zsh-autosuggestions</a><ul>
<li>記憶下過的指令，於下次提示使用</li>
</ul>
</li>
<li><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-users&#x2F;zsh-syntax-highlighting</a><ul>
<li>語法高亮</li>
</ul>
</li>
<li><a href="https://github.com/supercrabtree/k">supercrabtree&#x2F;k</a><ul>
<li>更具可讀性的顯示目錄列表</li>
</ul>
</li>
</ul>
<h2 id="客製化指令"><a href="#客製化指令" class="headerlink" title="客製化指令"></a>客製化指令</h2><p>新增一個 <code>~/.bash_aliases</code> ，然後在 <code>~/.zshrc</code> 下新增以下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="comment"># Load bash aliases</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_aliases</span><br></pre></td></tr></table></figure>

<p>在 <code>~/.bash_aliases</code> 新增指令</p>
<ul>
<li><p>dockerstopall</p>
<p>  暫停全部container</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Custom command</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="built_in">alias</span> dockerstopall=<span class="string">&#x27;docker ps --format &#x27;</span>&#123;&#123;.Names&#125;&#125;<span class="string">&#x27; | xargs docker stop&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://levelup.gitconnected.com/zsh-antigen-oh-my-zsh-a-beautiful-powerful-robust-shell-ca5873821671">Zsh + Antigen + Oh my Zsh &#x3D; A Beautiful, Powerful, and Robust Shell</a></li>
</ul>
]]></content>
      <categories>
        <category>🧰️ 我的工具箱</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>HomeAssistant Packages 優雅的管理YAML</title>
    <url>/2020/home-assistant-packages/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1534889156217-d643df14f14a?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>利用Packages幫助你更好管理HomeAssistant YAML檔案</p>
<span id="more"></span>

<!-- 文章開始 -->

<h2 id="一般的寫法-😰"><a href="#一般的寫法-😰" class="headerlink" title="一般的寫法 😰"></a>一般的寫法 😰</h2><p>全部塞在同一檔案，頂多用註解去說明</p>
<p>❌ <strong>缺點：東西一多，你會崩潰</strong></p>
<p><code>configuration.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">weather:</span></span><br><span class="line"> <span class="comment"># 天氣</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">darksky</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sensor:</span></span><br><span class="line"> <span class="comment"># 天氣</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">darksky</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 主機監控</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">command_line</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">systemmonitor</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 小米系列電量</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">template</span></span><br><span class="line">  <span class="comment">#...</span></span><br></pre></td></tr></table></figure>

<h2 id="include拆分檔案方法-😥"><a href="#include拆分檔案方法-😥" class="headerlink" title="include拆分檔案方法 😥"></a>include拆分檔案方法 😥</h2><p>試著把sensor拆出一個檔案</p>
<p>❌ <strong>缺點：同樣是天氣的設定卻被拆在兩個檔案，之後要調整或刪除要開好幾個檔案編輯，東西一多也是崩潰</strong></p>
<p><code>configuration.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">weather:</span></span><br><span class="line"> <span class="comment"># 天氣</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">darksky</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sensor:</span> <span class="type">!include</span> <span class="string">sensors.yaml</span></span><br></pre></td></tr></table></figure>

<p><code>sensors.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 天氣</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">darksky</span></span><br><span class="line"> <span class="comment">#...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主機監控</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">command_line</span></span><br><span class="line"> <span class="comment">#...</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">systemmonitor</span></span><br><span class="line"> <span class="comment">#...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 小米系列電量</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">template</span></span><br><span class="line"> <span class="comment">#...</span></span><br></pre></td></tr></table></figure>

<h2 id="Packages寫法-👍"><a href="#Packages寫法-👍" class="headerlink" title="Packages寫法 👍"></a>Packages寫法 👍</h2><p>利用packages寫法把天氣的設定統一在一個地方了</p>
<p>✅ <strong>優點：關於天氣的設定，都放在同一區塊，方便之後調整</strong></p>
<p>❌ <strong>缺點：還是在同一檔案，好像可以更好</strong></p>
<p><code>configuration.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">homeassistant:</span></span><br><span class="line">  <span class="attr">packages:</span></span><br><span class="line">    <span class="comment"># 天氣</span></span><br><span class="line">    <span class="attr">my_darksky:</span></span><br><span class="line">      <span class="attr">weather:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">darksky</span></span><br><span class="line">        <span class="comment">#...</span></span><br><span class="line">      <span class="attr">sensor:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">darksky</span></span><br><span class="line">        <span class="comment">#...</span></span><br><span class="line">    <span class="comment"># 主機監控</span></span><br><span class="line">    <span class="attr">sys_monitor:</span></span><br><span class="line">      <span class="attr">sensor:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">command_line</span></span><br><span class="line">        <span class="comment">#...</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">systemmonitor</span></span><br><span class="line">        <span class="comment">#...</span></span><br><span class="line">    <span class="comment"># 小米系列電量</span></span><br><span class="line">    <span class="attr">mi_battery:</span></span><br><span class="line">      <span class="attr">sensor:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">template</span></span><br><span class="line">        <span class="comment">#...</span></span><br></pre></td></tr></table></figure>

<h2 id="Packages拆出檔案-👍👍"><a href="#Packages拆出檔案-👍👍" class="headerlink" title="Packages拆出檔案 👍👍"></a>Packages拆出檔案 👍👍</h2><p>創建一個packages資料夾，資料夾裡面的檔案都會被整併進<code>configuration.yaml</code></p>
<p>✅ <strong>優點：把設定用檔案分開，方便之後要調整，甚至要移除的話只要移出去資料夾</strong></p>
<p><code>configuration.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">homeassistant:</span></span><br><span class="line">  <span class="attr">packages:</span> <span class="type">!include_dir_named</span> <span class="string">packages</span></span><br></pre></td></tr></table></figure>

<p><code>packages/darksky.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 天氣</span></span><br><span class="line"><span class="attr">weather:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">darksky</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sensor:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">darksky</span></span><br><span class="line">  <span class="comment">#...</span></span><br></pre></td></tr></table></figure>

<p><code>packages/sys_monitor.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主機監控</span></span><br><span class="line"><span class="attr">sensor:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">command_line</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">systemmonitor</span></span><br><span class="line">  <span class="comment">#...</span></span><br></pre></td></tr></table></figure>

<p><code>packages/mi_battery.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 小米系列電量</span></span><br><span class="line"><span class="attr">sensor:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">template</span></span><br><span class="line">  <span class="comment">#...</span></span><br></pre></td></tr></table></figure>

<h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ul>
<li><a href="https://www.home-assistant.io/docs/configuration/packages/">HomeAssistant Packages</a></li>
</ul>
]]></content>
      <categories>
        <category>🏠 智慧家庭</category>
      </categories>
      <tags>
        <tag>智慧家庭</tag>
        <tag>Home Assistant</tag>
      </tags>
  </entry>
  <entry>
    <title>【SSH Tunnel】不需設定路由，打通NAT對外</title>
    <url>/2020/nat-tunnel/</url>
    <content><![CDATA[<!-- banner -->
<p><img data-src="https://images.unsplash.com/photo-1574405345169-f45c7d66480e?q=85&fm=jpg&w=1200&h=630&fit=crop"></p>
<!-- 前言 -->
<p>只有要連上網路的電腦，透過打洞(SSH tunnel)，可以讓直接穿透NAT讓讓此電腦某個Port暴露在網路上</p>
<span id="more"></span>

<!-- 文章開始 -->
<h2 id="場景"><a href="#場景" class="headerlink" title="場景"></a>場景</h2><ul>
<li>無法設定對外的LEN端-電腦A</li>
<li>有對外IP的-電腦B (VPS)</li>
</ul>
<h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><p>建立反向ssh tunnel直接<code>電腦B:某port</code>對應到<code>電腦A連的到的server:某port</code></p>
<h3 id="示意圖"><a href="#示意圖" class="headerlink" title="示意圖"></a>示意圖</h3><img data-src="/2020/nat-tunnel/ssh-tunnel.png" class="" title="SSH Tunnel">

<h2 id="反向ssh-tunnel"><a href="#反向ssh-tunnel" class="headerlink" title="反向ssh tunnel"></a>反向ssh tunnel</h2><p>需要先安裝ssh這邊就不多贅述</p>
<h3 id="電腦B設定GatewayPorts"><a href="#電腦B設定GatewayPorts" class="headerlink" title="電腦B設定GatewayPorts"></a>電腦B設定GatewayPorts</h3><p>不打開GatewayPorts的話做tunnel的話只有電腦B連的到該port，無法對外開放</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 打開ssh設定文件</span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"># 找到GatewayPorts移除註解並設為yes</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>

<h3 id="電腦A建立反向tunnel"><a href="#電腦A建立反向tunnel" class="headerlink" title="電腦A建立反向tunnel"></a>電腦A建立反向tunnel</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -NfR 5555:localhost:5000 &#123;電腦B_user@電腦B_IP&#125; &#123;-p 電腦B_ssh_port&#125;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>參數</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td>-N</td>
<td>不執行遠端指令，僅做封包重新導向</td>
</tr>
<tr>
<td>-f</td>
<td>連線認證後，在背景執行</td>
</tr>
<tr>
<td>-R port:host:hostport</td>
<td>設定本機的 port, 連到 host (主機)的 host port</td>
</tr>
</tbody></table>
<p>建立連線後，從外部連到 <code>B的5555</code> 實際會連到 <code>A的5000</code></p>
<blockquote>
<p><strong>Internet → B的5555 → A的5000</strong></p>
</blockquote>
<p>成功讓處於封閉網路的A透過B達成對外暴露在網路上</p>
<hr>
<h2 id="延伸用法：透過A打穿到同LEN端的電腦C"><a href="#延伸用法：透過A打穿到同LEN端的電腦C" class="headerlink" title="延伸用法：透過A打穿到同LEN端的電腦C"></a>延伸用法：透過A打穿到同LEN端的電腦C</h2><p>假設電腦C開80且只有同LEN端的電腦A連的到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -NfR 8888:&#123;電腦C_LEN_IP&#125;:80 &#123;電腦B_user@電腦B_IP&#125; &#123;-p 電腦B_ssh_port&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>B的8888 &lt;-ssh-&gt; A &lt;-http-&gt; C的80</strong></p>
</blockquote>
<p>但由於B是入口、A是中繼、C是server，所以ABC這三台都不能關機</p>
<hr>
<h2 id="指令說明"><a href="#指令說明" class="headerlink" title="指令說明"></a>指令說明</h2><h3 id="關閉-ssh-tunnel"><a href="#關閉-ssh-tunnel" class="headerlink" title="關閉 ssh tunnel"></a>關閉 ssh tunnel</h3><p>由於ssh tunnel會於背景執行，需要透過 <code>netstat</code> 或是 <code>ps</code> 找出pid關閉</p>
<p><strong>B透過Listen port</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo netstat -ntpl |grep ssh</span><br></pre></td></tr></table></figure>

<p>找到PID用<code>kill &#123;pid&#125;</code></p>
<p><strong>A透過process</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef | head -1; ps -ef |grep &quot;ssh -&quot;</span><br></pre></td></tr></table></figure>

<p>找到PID用<code>kill &#123;pid&#125;</code></p>
]]></content>
      <categories>
        <category>🌐 網路</category>
      </categories>
      <tags>
        <tag>SSH Tunnel</tag>
        <tag>NAT穿透</tag>
        <tag>網路</tag>
      </tags>
  </entry>
</search>
